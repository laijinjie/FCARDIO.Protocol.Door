<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DoNetDrive.Common</name>
    </assembly>
    <members>
        <member name="T:DoNetDrive.Common.Arrays`1">
            <summary>
            集合工具类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:DoNetDrive.Common.Arrays`1.CheckBuf(System.Array,System.Int32,System.Int32@,System.Int32)">
            <summary>
            检查缓冲区
            </summary>
            <param name="bBuf">缓冲区</param>
            <param name="iBeginIndex">起始索引号</param>
            <param name="iLen">长度</param>
            <param name="iMax">最大长度</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Arrays`1.copyOfRange(`0[],System.Int32,System.Int32)">
            <summary>
            拷贝数组
            </summary>
            <param name="src">源数组，从此数组中取数据</param>
            <param name="iBegin">开始截取数组的起始索引，从0开始。</param>
            <param name="lLen">截取数组元素的长度。</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Arrays`1.BytesEquals(`0[],`0[])">
            <summary>
            检查两个数组是否匹配
            </summary>
            <param name="src"></param>
            <param name="sDec"></param>
            <returns>true--匹配；false--不匹配</returns>
            <remarks></remarks>
        </member>
        <member name="T:DoNetDrive.Common.DataUtil">
            <summary>
            数据转换工具类
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.DataUtil.ByteToDateTime(System.Byte[])">
            <summary>
            BCD格式日期字节数组转换为日期类型   需要传入6字节
            格式 yyMMddHHmmss
            </summary>
            <param name="bData"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.DataUtil.ByteToDate(System.Byte[])">
            <summary>
            字节数组转换为日期类型  BCD日期 需要传入3字节
            </summary>
            <param name="bData"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.DataUtil.GetBCDTime">
            <summary>
            返回BCD 格式yyMMddHHmmss
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.DataUtil.GetBCDTime(System.DateTime)">
            <summary>
            返回BCD 格式yyMMddHHmmss
            </summary>
            <param name="oDate"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.DataUtil.BCDToDateMMdd(System.Byte[])">
            <summary>
            将BCD数组转换为日期，BCD数据格式为 MMDD，只有 月和日
            </summary>
            <param name="bData"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.DataUtil.DateToBCDYYMMdd(System.DateTime)">
            <summary>
            将日期转换为BCD码，格式为 YYMMDD
            </summary>
            <param name="oDate"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.DataUtil.DateToBCDMMdd(System.DateTime)">
            <summary>
            将日期转换为BCD码，格式为 MMDD,只有 月和日
            </summary>
            <param name="oDate"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Common.NumUtil">
            <summary>
            数值类型的格式转换
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToInt64(System.Byte[])">
            <summary>
            字节数组转长整形
            </summary>
            <param name="b">字节数组 1-8个元素</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToInt64(System.Byte[],System.Int32,System.Int32)">
            <summary>
            字节数组转长整形
            </summary>
            <param name="b">需要计算的数组</param>
            <param name="iBeginIndex">数组起始索引号</param>
            <param name="iLen">数据长度 最大8字节</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToInt32(System.Byte[])">
            <summary>
            字节数组转 Int32 整形 高位在前
            </summary>
            <param name="bData"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToInt32(System.Byte[],System.Int32,System.Int32)">
            <summary>
            字节数组转 Int32 整形 高位在前
            </summary>
            <param name="bData">需要计算的数组</param>
            <param name="iBeginIndex">数组起始索引号</param>
            <param name="iLen">数据长度 最大4字节</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToInt16(System.Byte[])">
            <summary>
            字节数组转短整型 Int16 高位在前
            </summary>
            <param name="bData"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToInt16(System.Byte[],System.Int32)">
            <summary>
            字节数组转短整型 Int16 高位在前
            </summary>
            <param name="bData">需要计算的数组</param>
            <param name="iBeginIndex">数组起始索引号</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToBit(System.Byte)">
            <summary>
            1字节转8Bit
            </summary>
            <param name="iNum"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.BytesToDecimal(System.Byte[],System.Int32,System.Int32)">
            <summary>
            字节数组转十进制数
            </summary>
            <param name="b">字节数组</param>
            <param name="iBegin">数组起始索引号</param>
            <param name="iLen">数据长度 最大8字节</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToBCD(System.Byte)">
            <summary>
            字节转BCD码
            </summary>
            <param name="iNum"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToBCD(System.Byte[],System.Int32,System.Int32)">
            <summary>
            字节转BCD码
            </summary>
            <param name="bBufs"></param>
            <param name="iBegin"></param>
            <param name="ilen"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToBCD(System.Byte[])">
            <summary>
            字节转BCD码
            </summary>
            <param name="bBufs"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.Int64ToByte(System.UInt64)">
            <summary>
            将长整形转为8字节数组
            </summary>
            <param name="lValue"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DoNetDrive.Common.NumUtil.Int64ToByte(System.UInt64,System.Byte[],System.Int32,System.Int32)" -->
        <member name="M:DoNetDrive.Common.NumUtil.UInt64ToByte(System.UInt64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            将一个UInt64数值转换为字节数组
            </summary>
            <param name="lValue"></param>
            <param name="bBuf"></param>
            <param name="iBeginIndex"></param>
            <param name="iLen"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DoNetDrive.Common.NumUtil.Int24ToByte(System.Int32,System.Byte[],System.Int32,System.Int32)" -->
        <member name="M:DoNetDrive.Common.NumUtil.Int24ToByte(System.Int32)">
            <summary>
            Int32 整形 转 3字节数组 高位在前
            </summary>
            <param name="iValue"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DoNetDrive.Common.NumUtil.Int32ToByte(System.UInt32,System.Byte[],System.Int32,System.Int32)" -->
        <member name="M:DoNetDrive.Common.NumUtil.Int32ToByte(System.UInt32)">
            <summary>
            Int32 整形 转 4字节数组 高位在前
            </summary>
            <param name="iValue"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.Int16ToByte(System.UInt16,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Int16 整形 转 字节数组  高位在前
            </summary>
            <param name="iValue"></param>
            <param name="bBuf"></param>
            <param name="iBeginIndex"></param>
            <param name="iLen"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.Int16ToByte(System.UInt16)">
            <summary>
            Int16 整形 转 字节数组  高位在前
            </summary>
            <param name="iValue"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.BCDToByte(System.Byte)">
            <summary>
            BCD转字节值
            </summary>
            <param name="iNum"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.BCDToByte(System.Byte[])">
            <summary>
            BCD转字节值
            </summary>
            <param name="bBufs"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.BCDToByte(System.Byte[],System.Int32,System.Int32)">
            <summary>
            BCD转字节值
            </summary>
            <param name="bBufs"></param>
            <param name="iBegin"></param>
            <param name="ilen"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.BitToByte(System.Byte[])">
            <summary>
            8Bit转1字节
            </summary>
            <param name="iBits">存储位数据的8元素数组</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.DecimalToBytes(System.Decimal)">
             <summary>
            十进制数 转 字节数组
             </summary>
             <param name="lValue"></param>
             <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.UInt64ToInt64(System.UInt64)">
            <summary>
            无符号Int64  转 有符号Int64
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.UInt32ToInt32(System.UInt32)">
            <summary>
            无符号Int32  转 有符号Int32
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.UInt16ToInt16(System.UInt16)">
            <summary>
            无符号Int16  转 有符号Int16
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.ByteToSByte(System.Byte)">
            <summary>
            无符号8位整形，转换为有符号8位整形。
            </summary>
            <param name="bValue"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.Int64ToUInt64(System.Int64)">
            <summary>
            有符号Int64  转 无符号Int64
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.UInt32ToInt32(System.Int32)">
            <summary>
            有符号Int32  转 无符号Int32
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.Int16ToUInt16(System.Int16)">
            <summary>
            有符号Int16  转 无符号Int16
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.NumUtil.SBytetobyte(System.SByte)">
            <summary>
            有符号8位整形，转换为无符号8位整形。
            </summary>
            <param name="b"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:DoNetDrive.Common.StringUtil">
            <summary>
            string 转换工具类
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.StringUtil.StringCrLf">
            <summary>
            回车换行符
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.StringUtil.StringNewLine">
            <summary>
            回车换行符
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.StringUtil.ASCII">
            <summary>
            ASCII编码
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.StringUtil.mHexDigits">
            <summary>
            字节转十六进制时十六进制字符串代码表
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.StringUtil.mByteDigits">
            <summary>
            十六进制转字节，十六进制每个字符对应的码值表
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.#cctor">
            <summary>
            初始化十六进制转换字典
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.ByteToHex(System.Byte[])">
            <summary>
            字节转十六进制
            </summary>
            <param name="bData"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.HexToByte(System.String)">
            <summary>
            十六进制转字节
            </summary>
            <param name="sHex">十六进制字符串</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.IsAscii(System.String)">
            <summary>
            检查字符串是否为Ascii字符
            </summary>
            <param name="asciiString">待检查的字符串</param>
            <returns>true 表示都是ascii组成，false 表示有包含不是ascii的字符串</returns>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.IsHex(System.String)">
            <summary>
            检查字符串是否为十六进制
            </summary>
            <param name="sValue"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.IsNum(System.String)">
            <summary>
            检查是否数值类型
            </summary>
            <param name="sValue"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.CheckHexLen(System.String,System.Int32)">
            <summary>
             检查十六进制字符串格式及长度
             </summary>
             <returns></returns>
             <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.CheckStringLen(System.String,System.Int32,System.Char)">
            <summary>
             检查字符串是否为指定长度
             </summary>
             <param name="sValue">待检查字符串</param>
             <param name="iLength">需要的长度</param>
             <param name="sNullString"></param>
             <returns></returns>
             <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.CheckStringList(System.String,System.Int32,System.Boolean)">
            <summary>
             检查字符串列表
             </summary>
             <param name="strList">需要检查的字符串列表，包含已逗号分隔的字符串</param>
             <param name="iStrLen">单个字符串的最大长度</param>
             <param name="strIsNum">单个字符串是否必须为数字</param>
             <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.CheckIDList(System.String)">
            <summary>
            检查ID列表，删除表中的id为1的段落
            </summary>
            <param name="IDList"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.CheckIDListNoDelete(System.String)">
            <summary>
            检查ID列表
            </summary>
            <param name="IDList"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.CheckStrListNoDelete(System.String)">
            <summary>
            检查ID列表
            </summary>
            <param name="IDList"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.StringUtil.EncodeBase64(System.String)">
            <summary>
            Base64字符串  
            </summary>
            <param name="source">原字符串</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.CRC32_C.CalculateDigest(System.Byte[],System.UInt32,System.UInt32)">
            <summary>计算并获取CRC数据。</summary>
            <param name="data">需要计算的数据组。</param>
            <param name="offset">偏移，一般设为0。</param>
            <param name="size">大小，一般设为数据组的Length。</param>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.#ctor(System.Byte[])">
            <summary>
            设置初始化密钥
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.#ctor(System.String)">
            <summary>
            设置初始化密钥
            </summary>
            <param name="sKey"></param>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.EncryptAnyLength(System.Byte[],System.Int32,System.Int32)">
            <summary>
            加密任意长度字符串
            结果:函数将加密后结果存放于缓存,用户通过属性CiphertextAnyLength得到
            </summary>
            <param name="srcBytes">任意长度字节数组</param>
            <param name="srcLength">长度</param>
            <param name="keyN">使用Key的序号0-1</param>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.DecryptAnyLength(System.Byte[],System.Int32,System.Int32)">
            <summary>
            解密任意长度字节数组
            函数将加密后结果存放于缓存，通过属性PlaintextAnyLength得到
            </summary>
            <param name="srcBytes">任意长度字节数组</param>
            <param name="srcLength">长度</param>
            <param name="keyN">使用Key的序号0-1</param>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.Bytes2Bits(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Byte 到 Bits 的转换
            </summary>
            <param name="srcBytes">待变换数据</param>
            <param name="dstBits">处理后结果存放缓冲区</param>
            <param name="sizeBits">Bits缓冲区大小</param>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.Bits2Bytes(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Bits到Byte的转换,
            </summary>
            <param name="dstBytes">存储转换后的Byte数组</param>
            <param name="srcBits">准备转换为byte的bit数组</param>
            <param name="sizeBits">Bits缓冲区大小</param>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.Int2Bits(System.Byte,System.Byte[])">
            <summary>
            Int到Bits的转换,取低4bit
            </summary>
            <param name="src">待变换数值</param>
            <param name="dstBits">处理后结果存放缓冲区</param>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.GetCiphertextInHex">
            <summary>
            返回加密后的数据十六进制形式
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.GetCiphertextInBytes">
            <summary>
            返回加密后的数据 -- 8字节
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.GetCiphertextAnyLength">
            <summary>
            返回加密后的所有数据
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.GetPlaintext">
            <summary>
            返回解密后的数据,明文字符串
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.GetPlaintextInBytes">
            <summary>
            返回解密后的数据 -- 8字节
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.GetPlaintextInHex">
            <summary>
            返回解密后的数据--十六进制形式
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.GetPlaintextAnyLength">
            <summary>
            返回明文数据,自动省略末尾的 byte(0)
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.GetPlaintextAll">
            <summary>
            返回所有解密后的数据
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.InitializeKey(System.Byte[],System.Int32)">
            <summary>
            初始化加密密钥
            </summary>
            <param name="bKeys">8字节数组</param>
            <param name="keyN">密钥的索引号0-1</param>
            <remarks>函数将调用private CreateSubKey将结果存于char SubKeys(keyN)(16)(48)</remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.CreateSubKey(System.Byte[],System.Int32)">
            <summary>
            生成子密钥
            </summary>
            <param name="sz_56key">经过PC1变换的56位数组</param>
            <param name="keyN">密钥编号0-1</param>
            <remarks>将保存于char szSubKeys(16)(48)</remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.EncryptData(System.Byte[],System.Int32)">
            <summary>
            加密8字节数组
            </summary>
            <param name="bDatas">8字节数组</param>
            <param name="keyN">Key的序号0-1</param>
            <remarks>函数将加密后结果存放于private szCiphertext(16) 用户通过属性Ciphertext得到</remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.DecryptData(System.Byte[],System.Int32)">
            <summary>
            解密8字节数组
            </summary>
            <param name="bDatas">8字节数组</param>
            <param name="keyN">Key的序号0-1</param>
            <remarks>函数将解密候结果存放于private szPlaintext(8) 用户通过属性Plaintext得到</remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.InitialPermuteData(System.Byte[],System.Byte[])">
            <summary>
            IP变换
            </summary>
            <param name="src">待处理数组</param>
            <param name="dst">处理后结果</param>
            <remarks>函数改变第二个参数的内容</remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.FunctionF(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            DES中的F函数
            </summary>
            <param name="sz_Li">左32位</param>
            <param name="sz_Ri">右32位</param>
            <param name="iKey">key序号(0-15)</param>
            <param name="keyN">密钥序号0-1</param>
            <remarks>均在变换左右32位</remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.ExpansionR(System.Byte[],System.Byte[])">
            <summary>
            将右32位进行扩展位48位
            </summary>
            <param name="src">原32位数组</param>
            <param name="dst">扩展后48位数组</param>
            <remarks>函数改变第二个参数的内容</remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.XORArr(System.Byte[],System.Byte[],System.Int32,System.Byte[])">
            <summary>
            异或函数,函数改变第四个参数的内容
            </summary>
            <param name="szParam1">待异或的数组1</param>
            <param name="szParam2">待异或的数组2</param>
            <param name="uiParamLength">数据长度</param>
            <param name="szReturnValueBuffer">结果返回数组</param>
            <remarks>函数改变第四个参数的内容</remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.CompressFuncS(System.Byte[],System.Byte[])">
            <summary>
            S-BOX , 数据压缩, 返回32位二进制数组
            </summary>
            <param name="src48">48位二进制数组</param>
            <param name="dst32">压缩后的32位二进制数组</param>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.PermutationP(System.Byte[],System.Byte[])">
            <summary>
            IP逆变换,函数改变第二个参数的内容
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.GetDecryptFile(System.String,System.String)">
             <summary>
            将一个加密文件，解密后返回文件内容
            </summary>
            <param name="sFile"></param>
            <param name="sKey"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.EncryptText3Des(System.String,System.String,System.String)">
            <summary>
            3DES加密
            </summary>
            <param name="sTest"></param>
            <param name="sKey1"></param>
            <param name="sKey2"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.DES_C.DecryptText3Des(System.String,System.String,System.String)">
            <summary>
            3DES解密
            </summary>
            <param name="sTest"></param>
            <param name="sKey1"></param>
            <param name="sKey2"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Common.Cryptography.MyAES">
            <summary>
            加密工具类
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyAES.Encryptor(System.Byte[],System.Byte[],System.Byte[],System.Security.Cryptography.PaddingMode)">
            <summary>
            使用AES加密数据
            </summary>
            <param name="bKey"></param>
            <param name="bIV"></param>
            <param name="bData"></param>
            <param name="pad">PaddingMode</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyAES.Encryptor(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            使用AES加密数据
            </summary>
            <param name="bKey"></param>
            <param name="bIV"></param>
            <param name="bData"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyAES.Encryptor(System.String,System.String,System.String)">
            <summary>
             AES加密UTF8字符串 并返回bas64编码的密文
             </summary>
             <param name="plainStr">要加密的字符串</param>
             <param name="base64_Key">密钥 32字节</param>
             <param name="base64_IV">向量 16字节</param>
             <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyAES.Encryptor(System.Byte[],System.String,System.String)">
            <summary>
            AES加密字节
            </summary>
            <param name="key"></param>
            <param name="iv"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyAES.Encryptor(System.String,System.Byte[],System.Byte[])">
            <summary>
             AES加密UTF8字符串，并返回base64
             </summary>
             <param name="plainStr">要加密的字符串</param>
             <param name="bKey">密钥 32字节</param>
             <param name="bIV">向量 16字节</param>
             <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyAES.Decryptor(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            使用AES解密数据
            </summary>
            <param name="bKey"></param>
            <param name="bIV"></param>
            <param name="bData"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyAES.Decryptor(System.Byte[],System.Byte[],System.Byte[],System.Security.Cryptography.PaddingMode)">
            <summary>
            使用AES解密数据
            </summary>
            <param name="bKey"></param>
            <param name="bIV"></param>
            <param name="bData"></param>
            <param name="pad">PaddingMode</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyAES.Decryptor(System.String,System.String,System.String)">
            <summary>
             AES 解密,并返回 UTF8字符串
             </summary>
             <param name="encryptStr">要解密字符串</param>
             <param name="base64_Key">密钥 32字节</param>
             <param name="base64_IV">向量 16字节</param>
             <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyAES.Decryptor(System.String,System.Byte[],System.Byte[])">
            <summary>
             AES 解密,并返回 UTF8字符串
             </summary>
             <param name="encryptStr">要解密字符串</param>
             <param name="bKey">密钥 32字节</param>
             <param name="bIV">向量 16字节</param>
             <returns></returns>
        </member>
        <member name="T:DoNetDrive.Common.Cryptography.MyDES">
            <summary>
            使用DES密码算法加解密
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyDES.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:DoNetDrive.Common.Cryptography.MyDES.IV">
            <summary> 
            DES加密偏移量，必须是>=8位长的字符串  
            </summary>
        </member>
        <member name="P:DoNetDrive.Common.Cryptography.MyDES.Key">
            <summary> 
            DES加密的私钥，必须是8位长的字符串  
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyDES.Encrypt(System.Byte[])">
            <summary> 
            对字节数组进行DES加密  
            </summary> 
            <param name="btData">待加密的字节数组</param> 
            <returns>加密后的字节数组</returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyDES.Encrypt(System.String)">
            <summary> 
            对字符串进行DES加密  
            </summary> 
            <param name="sourceString">待加密的字符串</param> 
            <returns>加密后的BASE64编码的字符串</returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyDES.Decrypt(System.Byte[])">
            <summary> 
            对DES加密后的字节数组进行解密  
            </summary> 
            <param name="btData">待解密的字节数组</param> 
            <returns>解密后的字节数组</returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyDES.Decrypt(System.String)">
            <summary> 
            对DES加密后的Base64字符串进行解密  
            </summary> 
            <param name="encryptedString">待解密的字符串</param> 
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyDES.EncryptFile(System.String,System.String)">
            <summary> 
            对文件内容进行DES加密  
            </summary> 
            <param name="sourceFile">待加密的文件绝对路径</param> 
            <param name="destFile">加密后的文件保存的绝对路径</param>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyDES.EncryptFile(System.String)">
            <summary> 
            对文件内容进行DES加密，加密后覆盖掉原来的文件  
            </summary> 
            <param name="sourceFile">待加密的文件的绝对路径</param>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyDES.DecryptFile(System.String,System.String)">
            <summary> 
            对文件内容进行DES解密  
            </summary> 
            <param name="sourceFile">待解密的文件绝对路径</param> 
            <param name="destFile">解密后的文件保存的绝对路径</param>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MyDES.DecryptFile(System.String)">
            <summary> 
            对文件内容进行DES解密，加密后覆盖掉原来的文件  
            </summary> 
            <param name="sourceFile">待解密的文件的绝对路径</param>
        </member>
        <member name="T:DoNetDrive.Common.Cryptography.MySha1">
            <summary>
            SHA1加密工具类
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MySha1.CreateSha1(System.String,System.String)">
            <summary>
            使用SHA1加密
            </summary>
            <param name="sValue"></param>
            <param name="sGUID"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.MySha1.CreateSha1(System.String)">
            <summary>
            使用SHA1加密
            </summary>
            <param name="sValue"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.RC4.RC4_Encrypt(System.Byte[]@,System.Int32,System.Byte[]@,System.Int32,System.Byte[]@,System.Int32@)">
            <summary>
            RC4 加密，使用指定的密钥 key，加密数据 data，并将加密后的数据放到 result 中
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.RC4.IniRC4Key(System.Byte[]@,System.Int32,System.Int32)">
            <summary>
            初始化RC4密钥
            </summary>
            <param name="Key"></param>
            <param name="key_len"></param>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.RC4.RC4_Encrypt(System.Byte[]@)">
            <summary>
            RC4 加密，使用已初始化的密钥进行数据加密
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.RC4.RC4_Encrypt(System.Byte[]@,System.Int32)">
            <summary>
            RC4 加密，使用已初始化的密钥进行数据加密
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.RSA.RSACryptoService.Encrypt(System.String)">
            <summary>
            RSA 公钥加密
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.RSA.RSACryptoService.SignData(System.String)">
            <summary>
            使用私钥加密
            </summary>
            <param name="contentText"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.RSA.RSACryptoService.VerifyData(System.String,System.String)">
            <summary>
            使用公钥验证签名
            </summary>
            <param name="contentText"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Cryptography.RSA.RSACryptoService.Decrypt(System.String)">
            <summary>
            RSA 私钥解密
            </summary>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Common.EncryptTool">
            <summary>
            加密工具类
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.EncryptTool.GetRandomBase64IV">
            <summary>
            获取随机IV（base64格式）
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.EncryptTool.MD5StrToStr(System.String)">
            <summary>
            字符串MD5加密
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.EncryptTool.MD5ByteToByte(System.Byte[])">
            <summary>
            字节MD5加密
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.EncryptTool.MD5StrToBty(System.String)">
            <summary>
            字符串MD5加密返回字节流
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Common.DoNetDriveException">
            <summary>
            类库异常封装
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.DoNetDriveException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.DoNetDriveException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DoNetDrive.Common.DoNetDriveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:DoNetDrive.Common.DoNetDriveException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:DoNetDrive.Common.DoNetDriveException.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="errorCode"></param>
            <param name="errorMsg"></param>
        </member>
        <member name="P:DoNetDrive.Common.DoNetDriveException.ErrorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:DoNetDrive.Common.DoNetDriveException.ErrorMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:DoNetDrive.Common.Extensions.ArrayExtensions">
            <summary>
            数组扩展方法类
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.ArrayExtensions.Copy(System.Byte[],System.Int32,System.Int32)">
            <summary>
            拷贝数组中的一个片段到一个新的数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.ArrayExtensions.FindTextIndex(System.String[],System.String)">
            <summary>
            搜索与指定谓词定义的条件匹配的元素，然后返回整个 System.Array 中第一个匹配项的从零开始的索引
            </summary>
            <param name="array"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.ArrayExtensions.FindTextIndex(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            搜索与指定谓词定义的条件匹配的元素，然后返回整个 System.Array 中第一个匹配项的从零开始的索引
            </summary>
            <param name="list"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Common.Extensions.BytesExtensions">
            <summary>
            字节扩展类
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.GetString(System.Byte[])">
            <summary>
            转换字节编码为字符串
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToBase64(System.Byte[])">
            <summary>
            将数组转换为Base64字符串
            </summary>
            <param name="Databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToHex(System.Byte[])">
            <summary>
            转换字节数组为十六进制字符串
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToInt32(System.Byte[])">
            <summary>
            ByteToInt32 扩展方法
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToInt32(System.Byte[],System.Int32,System.Int32)">
            <summary>
            ByteToInt32 扩展方法
            </summary>
            <param name="b"></param>
            <param name="iBeginIndex"></param>
            <param name="iLen"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToInt24(System.Byte[])">
            <summary>
            ByteToInt32 扩展方法
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToInt24(System.Byte[],System.Int32,System.Int32)">
            <summary>
            ByteToInt32 扩展方法
            </summary>
            <param name="b"></param>
            <param name="iBeginIndex"></param>
            <param name="iLen"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToInt64(System.Byte[])">
            <summary>
            ByteToInt64 扩展方法
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToInt64(System.Byte[],System.Int32,System.Int32)">
            <summary>
            ByteToInt64 扩展方法
            </summary>
            <param name="b"></param>
            <param name="iBeginIndex"></param>
            <param name="iLen"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToInt32Rev(System.Byte[])">
            <summary>
            反转后 ByteToInt32 扩展方法
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToInt32Rev(System.Byte[],System.Int32,System.Int32)">
            <summary>
            反转后 ByteToInt32 扩展方法
            </summary>
            <param name="b"></param>
            <param name="iBeginIndex"></param>
            <param name="iLen"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToInt16(System.Byte[])">
            <summary>
            ByteToInt16 扩展方法
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.ToInt16(System.Byte[],System.Int32)">
            <summary>
            ByteToInt16 扩展方法
            </summary>
            <param name="b"></param>
            <param name="iBeginIndex"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.BytesEquals(System.Byte[],System.Byte[])">
            <summary>
            检查2个byte数组 是否相同
            </summary>
            <param name="b"></param>
            <param name="eb"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.BytesExtensions.GetBuffLen(System.Byte[],System.Int32)">
            <summary>
            检查缓冲区是否达到指定长度，长度不够则补充，长度超过则截断
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:DoNetDrive.Common.Extensions.DateExtensions">
            <summary>
            日期扩展方法类
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.Extensions.DateExtensions.UserDateTimeFormat">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.Extensions.DateExtensions.UserDateFormat">
            <summary>
            yyyy-MM-dd
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.Extensions.DateExtensions.UserTimeFormat">
            <summary>
            HH:mm:ss
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.ToDateTimeStr(System.DateTime)">
            <summary>
            输出格式化为 UserDateTimeFormat 的日期字符串
            默认格式 yyyy-MM-dd HH:mm:ss
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.ToTimeffff(System.DateTime)">
            <summary>
            输出格式化为 HH:mm:ss.ffff 的时间字符串
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.ToDateStr(System.DateTime)">
            <summary>
            输出格式化为 UserDateFormat 的日期字符串
            默认格式 yyyy-MM-dd
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.ToTimeStr(System.DateTime)">
            <summary>
            输出格式化为 UserDateFormat 的时间字符串
            默认格式 HH:mm:ss
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.ToDate(System.Double)">
            <summary>
            返回OADate
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.ToDateStr(System.Double)">
            <summary>
            返回OADate yyyy-MM-dd 格式
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.ToDateTimeStr(System.Double)">
            <summary>
            返回返回OADate yyyy-MM-dd HH:mm:ss 格式
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.IsDate(System.String)">
            <summary>
            判断符合日期格式
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.toDate(System.String)">
            <summary>
            将字符串转换为日期格式
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.ToBCDYYMMDD(System.DateTime)">
            <summary>
            将日期转换为BCD码中的 YYMMDD 格式，返回3个字节
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.ToBCDYYYYMMDD(System.DateTime)">
            <summary>
            将日期转换为BCD码中的 YYMMDD 格式，返回3个字节
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.DateToBCDYYMMdd(System.DateTime)">
            <summary>
            将日期转换为BCD码中的 YYMMDD 格式，返回3个字节
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.DateToBCDYYYYMMdd(System.DateTime)">
            <summary>
            将日期转换为BCD码中的 YYMMDD 格式，返回3个字节
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.DateExtensions.BCDYYYYMMddToDate(System.Byte[])">
            <summary>
            
            </summary>
            <param name="blist"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Common.Extensions.ListExtensions">
            <summary>
            集合扩展类
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.ListExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            集合扩展，把集合转字符串拼接 参数 分割
            </summary>
            <typeparam name="TOuter"></typeparam>
            <param name="outer"></param>
            <param name="sSplit"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Common.Extensions.NumExtensions">
            <summary>
            数字扩展方法类
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.ToBytes(System.Int64)">
            <summary>
                ''' 返回8个字节
                ''' </summary>
                ''' <param name="l"></param>
                ''' <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To4Bytes(System.Int64)">
            <summary>
            Int32ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To3Bytes(System.Int64)">
            <summary>
            Int24ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To2Bytes(System.Int64)">
            <summary>
            Int16ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To8Bytes(System.UInt64)">
            <summary>
                ''' 返回8个字节
                ''' </summary>
                ''' <param name="l"></param>
                ''' <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To4Bytes(System.UInt64)">
            <summary>
            To4Bytes 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To3Bytes(System.UInt64)">
            <summary>
            扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To2Bytes(System.UInt64)">
            <summary>
            Int16ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To4Bytes(System.Int32)">
            <summary>
            Int32ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To3Bytes(System.Int32)">
            <summary>
            Int24ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To2Bytes(System.Int32)">
            <summary>
            Int16ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To2Bytes(System.UInt16)">
            <summary>
            Int16ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To2Bytes(System.Int16)">
            <summary>
            Int16ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To4Bytes(System.UInt32)">
            <summary>
            Int32ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To3Bytes(System.UInt32)">
            <summary>
            Int24ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.NumExtensions.To2Bytes(System.UInt32)">
            <summary>
            Int16ToByte 扩展方法
            </summary>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Common.Extensions.StringExtensions">
            <summary>
            字符串扩展
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.Extensions.StringExtensions.UserEncoding">
            <summary>
            编码
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.ToJSON(System.Object)">
            <summary>
            从对象序列化到字符串
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.FromJson``1(System.String)">
            <summary>
            从JSON字符串反序列化到对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jsonTexts"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.IsBase64(System.String,System.Byte[]@)">
            <summary>
            
            </summary>
            <param name="base64String"></param>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.FromBase64(System.String)">
            <summary>
            将base64字符串转换为字节数组
            </summary>
            <param name="base64str"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.Print(System.String)">
            <summary>
            
            </summary>
            <param name="aString"></param>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.ToInt32(System.String)">
            <summary>
            扩展方法 安全转int类型
            </summary>
            <param name="aString"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.ToUInt32(System.String)">
            <summary>
            扩展方法 安全转UInt32类型
            </summary>
            <param name="aString"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.HexToUInt32(System.String)">
            <summary>
            String 安全转 UInt32
            </summary>
            <param name="aString"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.ToDouble(System.String)">
            <summary>
            String 安全转 Double
            </summary>
            <param name="aString"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.ToLong(System.String)">
            <summary>
            String 安全转 Long
            </summary>
            <param name="aString"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.ToUInt64(System.String)">
            <summary>
            扩展方法 安全转 UInt64
            </summary>
            <param name="aString"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.HexToUInt64(System.String)">
            <summary>
            扩展方法 安全转16进制 转 UInt64
            </summary>
            <param name="aString"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.IsTryLong(System.String)">
            <summary>
            扩展方法 检查是否为数字
            </summary>
            <param name="aString"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.IsNum(System.String)">
            <summary>
            检查是否有纯数字组成
            </summary>
            <param name="numString">需要检查的字符串</param>
            <returns>true 表示是纯数字字符串；false 包含非法字符</returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.IsNullOrEmpty(System.String)">
            <summary>
            检查字符串是否为空字符串或者为null
            </summary>
            <param name="str">需要检查的字符串</param>
            <returns>true表示为空或null</returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.IsHex(System.String)">
            <summary>
                ''' 扩展方法 检查字符串是否为十六进制
                ''' </summary>
                ''' <param name="s"></param>
                ''' <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.HexToByte(System.String)">
            <summary>
                ''' 扩展方法 十六进制转为字节数字
                ''' </summary>
                ''' <param name="s"></param>
                ''' <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.GetBytes(System.String)">
            <summary>
                ''' 扩展方法 获取字符串的字节编码
                ''' </summary>
                ''' <param name="s"></param>
                ''' <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.SF(System.String,System.Object[])">
            <summary>
            Format 扩展方法
            </summary>
            <param name="s"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.SplitTrim(System.String,System.String)">
            <summary>
            Split 扩展方法，过滤空值
            </summary>
            <param name="s"></param>
            <param name="sSplit"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.IsSame(System.String,System.String)">
            <summary>
            返回是否相同
            </summary>
            <param name="s"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.Extensions.StringExtensions.FillString(System.String,System.Int32,System.Char)">
            <summary>
            填充字符串
            </summary>
            <param name="s"></param>
            <param name="iLen"></param>
            <param name="sFillStr"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Common.MyXML">
            <summary>
            Xml 工具类
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.MyXML.mXMLDoc">
            <summary>
            XML文档
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.MyXML.mElement">
            <summary>
            XML根节点
            </summary>
        </member>
        <member name="F:DoNetDrive.Common.MyXML.mMajorNode">
            <summary>
            XML主节点
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="sFileName"></param>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.IsOpen">
            <summary>
            返回xml 是否已打开
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.LoadXMLOnFile(System.String)">
            <summary>
            从文件中中提取XML对象
            </summary>
            <param name="sFileName"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.LoadXMLOnString(System.String)">
            <summary>
            从字符串中提取XML对象
            </summary>
            <param name="strXML"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.SelectDocumentElement(System.String)">
            <summary>
            选择根节点
            </summary>
            <param name="sNodes"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.setDocumentElementAttribute(System.String,System.String)">
            <summary>
            设置根节点属性值
            </summary>
            <param name="sName"></param>
            <param name="sValue"></param>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.GetDocumentElementAttribute(System.String,System.String)">
            <summary>
            读取根节点属性值
            </summary>
            <param name="sName"></param>
            <param name="sDefault_value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.DeleteDocumentElementAttribute(System.String)">
            <summary>
            删除根节点属性
            </summary>
            <param name="sName"></param>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.SelectElement(System.String)">
            <summary>
            选择主节点
            </summary>
            <param name="sNodes"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.setElementAttribute(System.String,System.String)">
            <summary>
            设置主节点属性值
            </summary>
            <param name="sName"></param>
            <param name="sValue"></param>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.GetElementAttribute(System.String,System.String)">
            <summary>
            读取主节点属性值
            </summary>
            <param name="sName"></param>
            <param name="sDefault_value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.DeleteElementAttribute(System.String)">
            <summary>
            删除主节点属性
            </summary>
            <param name="sName"></param>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.SetElementValue(System.String,System.String)">
            <summary>
            主节点赋值
            </summary>
            <param name="sKey"></param>
            <param name="sVaues"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.GetElementValue(System.String,System.String)">
            <summary>
            主节点取值
            </summary>
            <param name="sKey"></param>
            <param name="sDefault_value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.SetValue(System.String,System.String)">
            <summary>
            子节点赋值
            </summary>
            <param name="sKey"></param>
            <param name="sVaues"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.Space(System.Int32)">
            <summary>
            返回指定空格字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.GetValue(System.String,System.String)">
            <summary>
            子节点取值
            </summary>
            <param name="sKey"></param>
            <param name="sDefault_value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.DeleteValue(System.String)">
            <summary>
            删除子节点
            </summary>
            <param name="sName"></param>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.SetNodeAttribute(System.String,System.String,System.String)">
            <summary>
            设置子节点属性值
            </summary>
            <param name="sNodeKey"></param>
            <param name="sName"></param>
            <param name="sValue"></param>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.GetNodeAttribute(System.String,System.String,System.String)">
            <summary>
            读取子节点属性值
            </summary>
            <param name="sName"></param>
            <param name="sDefault_value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.DeleteNodeAttribute(System.String,System.String)">
            <summary>
            删除子节点属性
            </summary>
            <param name="sName"></param>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.Save(System.String)">
            <summary>
            保存XML
            </summary>
            <param name="sPath"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.Document">
            <summary>
            返回 XML 对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.GetElement">
            <summary>
            返回 XML根节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.GetNode">
            <summary>
            返回 XML根节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Common.MyXML.ToString">
            <summary>
            返回xml InnerXml
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
