<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DoNetDrive.Protocol.Door</name>
    </assembly>
    <members>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.AbstractParameter">
            <summary>
            所有参数的基类，规定了一个基本数据检查流程
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.AbstractParameter.checkedParameter">
            <summary>
            检查参数的统一接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.AbstractParameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail">
            <summary>
            读取卡片存储详情
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化命令结构
            </summary>
            <param name="detail"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail.CommandReSend">
            <summary>
            命令重发时需要处理的函数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail.Release1">
            <summary>
            命令释放时需要处理的函数
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail_Result">
            <summary>
            控制器中的卡片数据库信息
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail_Result.SortDataBaseSize">
            <summary>
            排序数据区容量上限
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail_Result.SortCardSize">
            <summary>
            排序数据区已使用数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail_Result.SequenceDataBaseSize">
            <summary>
            顺序存储区容量上限
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail_Result.SequenceCardSize">
            <summary>
            顺序存储区已使用数量
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail_Result.#ctor">
            <summary>
            创建结构
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDatabaseDetail_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase">
            <summary>
            从控制器中清空所有卡片,可指定参数控制清空的区域
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase_Parameter)">
            <summary>
            初始化命令结构 
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            创建参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase.GetCmdDate">
            <summary>
            获取参数结构的字节编码
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase.CommandReSend">
            <summary>
            命令重发时需要的函数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase.Release1">
            <summary>
            命令释放时需要的参数
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase_Parameter">
            <summary>
            清空卡片数据库
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase_Parameter.CardType">
            <summary>
            带读取的卡片数据类型
            1  排序卡区域
            2  非排序卡区域 
            3  所有区域 
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase_Parameter.#ctor">
            <summary>
            初始化参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase_Parameter.#ctor(System.Int32)">
            <summary>
            创建结构
            </summary>
            <param name="cardType">带读取的卡片数据类型</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为 字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ClearCardDataBase_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1">
            <summary>
            从控制器中读取卡片数据<br/>
            成功返回结果参考 @link ReadCardDataBase_Base_Result
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.mCardBuffers">
            <summary>
            读取到的卡数据缓冲
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.CmdType">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.CheckResponseCmdType">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter)">
            <summary>
            初始化命令结构 
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            创建参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.GetCmdData">
            <summary>
            获取参数结构的字节编码
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.ReadDetailCallBlack(DotNetty.Buffers.IByteBuffer)">
            <summary>
            读取卡片详情的回调
            </summary>
            <param name="buf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.ReadCardDatabaseCallBlack(DotNetty.Buffers.IByteBuffer)">
            <summary>
            读取卡片数据回调
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.ReadCardDatabaseOverCallBlack(DotNetty.Buffers.IByteBuffer)">
            <summary>
            读取卡片数据完毕时的回调
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.CreateResult(System.Collections.Generic.List{`0},System.Int32,System.Int32)">
            <summary>
            创建返回值
            </summary>
            <param name="cardList">授权卡集合</param>
            <param name="dataBaseSize">授权卡数量</param>
            <param name="cardType">授权卡类型</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.Release1">
            <summary>
            释放命令占用的内存<br/>
            此命令一般情况下不需要实现！
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.CommandReSend">
            <summary>
            命令重发时，对命令中一些缓冲做清空或参数重置<br/>
            此命令一般情况下不需要实现！
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base`1.ClearBuf">
            <summary>
            清空缓冲区
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base_Result`1">
            <summary>
            从控制器中读取卡片数据
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base_Result`1.CardList">
            <summary>
            读取到的卡片列表
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base_Result`1.DataBaseSize">
            <summary>
            读取到的卡片数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base_Result`1.CardType">
            <summary>
            带读取的卡片数据类型
            1 排序卡区域 
            2 非排序卡区域 
            3 所有区域 
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base_Result`1.#ctor(System.Collections.Generic.List{`0},System.Int32,System.Int32)">
            <summary>
            创建结构
            </summary>
            <param name="cardList">卡列表</param>
            <param name="dataBaseSize">读取到的卡数量</param>
            <param name="cardType">卡数据库类型</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Base_Result`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase">
            <summary>
            从控制器中读取卡片数据<br/>
            成功返回结果参考 @link ReadCardDataBase_Result 
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter)">
            <summary>
            初始化命令结构 
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase.CreateResult(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Data.CardDetail},System.Int32,System.Int32)">
            <summary>
            创建返回值
            </summary>
            <param name="cardList">授权卡集合</param>
            <param name="dataBaseSize">容量信息</param>
            <param name="cardType">区域代码</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter">
            <summary>
            读取控制器中的卡片数据的命令的参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter.CardType">
            <summary>
            带读取的卡片数据类型
            1--排序卡区域   ；
            2--非排序卡区域 ；
            3--所有区域     ；
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter.#ctor(System.Int32)">
            <summary>
            创建结构
            </summary>
            <param name="cardType">带读取的卡片数据类型</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Result">
            <summary>
            Door88/Door58 读取卡片数据库中的所有卡数据
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Result.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Data.CardDetail},System.Int32,System.Int32)">
            <summary>
            创建结构
            </summary>
            <param name="cardList">卡列表</param>
            <param name="dataBaseSize">读取到的卡数量</param>
            <param name="cardType">卡数据库类型</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail">
            <summary>
            Door88/Door58 读取单个卡片在控制器中的信息
             成功返回结果参考 {@link ReadCardDetail_Result}
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Parameter)">
            <summary>
            Door88/Door58 读取单个卡片在控制器中的信息
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            创建参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail.GetCmdData">
            <summary>
            获取参数结构的字节编码
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Parameter">
            <summary>
            Door88/Door58  读取单个卡片在控制器中的信息
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Parameter.CardData">
            <summary>
            要读取详情的授权卡卡号
            取值：1-0xFFFFFFFF
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Parameter.#ctor(System.UInt32)">
            <summary>
            创建结构
            </summary>
            <param name="carddata">需要读取卡片详情的卡号</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为 字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            未实现
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Result">
            <summary>
            Door88/Door58 读取单个卡片在控制器中的信息，命令成功后的返回值
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Result.IsReady">
            <summary>
            卡片是否存在
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Result.Card">
            <summary>
            卡片的详情
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Result.#ctor(System.Boolean,DoNetDrive.Protocol.Door.Door8800.Data.CardDetail)">
            <summary>
            创建结构
            </summary>
            <param name="isReady">卡片是否存在</param>
            <param name="card">CardDetail 保存卡详情的实体</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDetail_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCard">
            <summary>
            Door88\Door58 将卡片列表从到控制器中删除
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCard.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.DeleteCard_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCard.WriteCardBodyToBuf0(DoNetDrive.Protocol.Door.Door8800.Data.CardDetail,DotNetty.Buffers.IByteBuffer)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="card">卡详情</param>
            <param name="buf">缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1">
            <summary>
            将卡片列表从到控制器中删除
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1.CmdType">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1.CheckResponseCmdType">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base{`0})">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            重写父类对处理返回值的定义
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1.ReadCardByFailBuf(System.Collections.Generic.List{System.Decimal},DotNetty.Buffers.IByteBuffer)">
            <summary>
            从错误卡列表中读取一个错误卡号，加入到cardlist中---本命令不实现此功能
            </summary>
            <param name="CardList">错误卡列表</param>
            <param name="buf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1.WritePacketHeadToBuf(DotNetty.Buffers.IByteBuffer,System.Int32)">
            <summary>
            写入数据头
            </summary>
            <param name="buf">数据缓冲区</param>
            <param name="iPacketCardCount">本次需要写入的卡号数量</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1.WriteCardBodyToBuf(`0,DotNetty.Buffers.IByteBuffer)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="card">卡详情</param>
            <param name="buf">缓冲区</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCardBase`1.WriteCardBodyToBuf0(`0,DotNetty.Buffers.IByteBuffer)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="card">卡详情</param>
            <param name="buf">缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCard_Parameter">
            <summary>
            Door88/Door58 删除卡片
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.DeleteCard_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Data.CardDetail})">
            <summary>
            创建 将卡片列表从到控制器中删除 指令的参数
            </summary>
            <param name="cardList">需要删除的卡片列表</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequence">
            <summary>
            Door88\Door58 将卡片列表写入到控制器非排序区 
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequence.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequence_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="perameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequence.ReadCardByFailBuf(System.Collections.Generic.List{System.Decimal},DotNetty.Buffers.IByteBuffer)">
            <summary>
            从错误卡列表中读取一个错误卡号，加入到cardlist中
            </summary>
            <param name="CardList">错误卡列表</param>
            <param name="buf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequenceBase`1">
            <summary>
            将卡片列表写入到控制器非排序区 
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequenceBase`1.CmdType">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequenceBase`1.CheckResponseCmdType">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequenceBase`1.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base{`0})">
            <summary>
            初始化命令结构 
            </summary>
            <param name="cd"></param>
            <param name="perameter">包含需要上传的卡列表参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequenceBase`1.WritePacketHeadToBuf(DotNetty.Buffers.IByteBuffer,System.Int32)">
            <summary>
            写入数据头
            </summary>
            <param name="buf">数据缓冲区</param>
            <param name="iPacketCardCount">本次需要写入的卡号数量</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequenceBase`1.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequenceBase`1.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            重写父类对处理返回值的定义
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequenceBase`1.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequenceBase`1._CardDetail">
            <summary>
            用来解析返回的错误卡数据
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequence_Parameter">
             <summary>
            Door88\Door58 将卡片列表写入到控制器非排序区
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequence_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Data.CardDetail})">
            <summary>
            创建 将卡片列表写入到控制器非排序区 指令的参数
            </summary>
            <param name="cardList">需要写入的卡列表</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySequence_Parameter.checkedParameter">
            <summary>
            检查卡片列表参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySort">
            <summary>
            Door88\Door58 将卡片列表写入到控制器排序区 
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySort.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySort_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="perameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySort.ReadCardByFailBuf(System.Collections.Generic.List{System.Decimal},DotNetty.Buffers.IByteBuffer)">
            <summary>
            从错误卡列表中读取一个错误卡号，加入到cardlist中
            </summary>
            <param name="CardList">错误卡列表</param>
            <param name="buf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySortBase`1">
            <summary>
            将卡片列表写入到控制器排序区 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySortBase`1.CmdType">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySortBase`1.CheckResponseCmdType">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySortBase`1.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base{`0})">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="perameter">参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySortBase`1.CreatePacket0">
            <summary>
            创建一个通讯指令,准备开始写排序区
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySortBase`1.CommandNext(DoNetDrive.Core.Packet.INPacket)">
            <summary>
            命令回应处理
            </summary>
            <param name="readPacket"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySortBase`1.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            重写父类对处理返回值的定义
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySortBase`1.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySortBase`1.WritePacketHeadToBuf(DotNetty.Buffers.IByteBuffer,System.Int32)">
            <summary>
            写入数据头
            </summary>
            <param name="buf">数据缓冲区</param>
            <param name="iPacketCardCount">本次需要写入的卡号数量</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySort_Parameter">
            <summary>
            Door88\Door58 将卡片列表写入到控制器排序区
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBySort_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Data.CardDetail})">
            <summary>
            创建 将卡片列表写入到控制器排序区 指令的参数
            </summary>
            <param name="cardList">需要上传的卡片列表</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1">
            <summary>
            将卡片列表写入到控制器排序区 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.mStep">
            <summary>
            当前命令进度
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.mWriteCardIndex">
            <summary>
            指示当前命令进行的步骤
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.mBufs">
            <summary>
            保存写入失败的数据缓冲区
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.mPacketCardMax">
            <summary>
            每一包中最大的卡数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.MaxBufSize">
            <summary>
            默认的缓冲区大小
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1._CardPar">
            <summary>
            保存待上传卡列表的参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base{`0})">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="perameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.Create_Result">
            <summary>
            创建命令成功返回值
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.ReadCardByFailBuf(System.Collections.Generic.List{System.Decimal},DotNetty.Buffers.IByteBuffer)">
            <summary>
            从错误卡列表中读取一个错误卡号，加入到cardlist中
            </summary>
            <param name="CardList">错误卡列表</param>
            <param name="buf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.WriteCardDetailToBuf(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将卡详情写入到ByteBuf中
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.WritePacketHeadToBuf(DotNetty.Buffers.IByteBuffer,System.Int32)">
            <summary>
            写入数据头
            </summary>
            <param name="buf">数据缓冲区</param>
            <param name="iPacketCardCount">本次需要写入的卡号数量</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.WriteCardBodyToBuf(`0,DotNetty.Buffers.IByteBuffer)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="card">卡详情</param>
            <param name="buf">缓冲区</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardListBase`1.IsWriteOver">
            <summary>
            检查是否已写完所有卡
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base`1">
            <summary>
            写卡列表的泛型抽象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base`1.CardList">
            <summary>
            需要写入的卡列表
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
            创建 将卡片列表写入到控制器非排序区 指令的参数
            </summary>
            <param name="cardList">需要写入的卡列表</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base`1.checkedParameter">
            <summary>
            检查卡片列表参数，任何情况下都不能为空，元素数不能为0,列表元素不能为空
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base`1.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            不实现此功能
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base`1.GetDataLen">
            <summary>
            不实现此功能
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Parameter_Base`1.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            不实现此功能
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Result">
            <summary>
            将卡片列表写入到控制器的返回值
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Result.FailTotal">
            <summary>
            无法写入的卡数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Result.CardList">
            <summary>
            无法写入的卡列表
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Result.#ctor(System.Int32,System.Collections.Generic.List{System.Decimal})">
            <summary>
            创建结构 
            </summary>
            <param name="failtotal">卡数量</param>
            <param name="cardList">卡列表</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Card.WriteCardList_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.CardDetail">
            <summary>
            Door88A、Door58 卡片权限详情
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.Data.CardDetail.CardData">
            <summary>
            4字节卡号
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetail.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetail.#ctor(DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase)">
            <summary>
            初始化参数
            </summary>
            <param name="sur"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetail.GetDataLen">
            <summary>
            获取一个卡详情实例，序列化到buf中的字节占比
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetail.WriteCardData(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将卡号序列化并写入buf中
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetail.ReadCardData(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从buf中读取卡号
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase">
            <summary>
            授权卡信息 抽象类
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.CardData">
            <summary>
            卡号，取值范围 0x1-0xFFFFFFFF
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.Password">
            <summary>
            卡密码,无密码不填。密码是4-8位的数字。
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.Expiry">
            <summary>
            截止日期，最大2089年12月31日
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.TimeGroup">
            <summary>
            开门时段；1-4门的开门时段；时段取值范围：1-64；
            <para>TimeGroup[0] -- 1门的时段；</para>
            <para>TimeGroup[1] -- 2门的时段；</para>
            <para>TimeGroup[2] -- 3门的时段；</para>
            <para>TimeGroup[3] -- 4门的时段；</para>
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.Door">
            <summary>
            开门权限
            <para>1-4门的开门权限；false--无权，true--有权开门</para>
            <para>bit0 -- 1门的权限</para>
            <para>bit1 -- 2门的权限</para>
            <para>bit2 -- 3门的权限</para>
            <para>bit3 -- 4门的权限</para>
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.OpenTimes">
            <summary>
            有效次数,取值范围：0-65535;<para/>
            0表示次数用光了。65535表示不受限制
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.Privilege">
            <summary>
            特权<para/>
            0 -- 普通卡      <para/>
            1 -- 首卡        <para/>
            2 -- 常开        <para/>
            3 -- 巡更        <para/>
            4 -- 防盗设置卡  <para/>
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.CardStatus">
             <summary>
            卡片状态<para/>
            0：正常状态；1：挂失；2：黑名单
             </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.Holiday">
             <summary>
            节假日权限
             </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.HolidayUse">
             <summary>
            使用节假日限制功能,节假日禁止开门
             </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.EnterStatus">
             <summary>
            出入标记；
             </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.RecordTime">
             <summary>
            最近一次读卡的记录时间
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.#ctor(DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase)">
            <summary>
            从一个卡详情实例，复制一个副本
            </summary>
            <param name="sur"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.CopyFrom(DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase)">
            <summary>
            从一个卡详情实例，复制一个副本
            </summary>
            <param name="sur"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.#ctor">
            <summary>
            初始化卡详情实例中的数值
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.CompareTo(DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase)">
            <summary>
            比较卡号是否一致
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.GetDataLen">
            <summary>
            获取一个卡详情实例，序列化到buf中的字节占比
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.WriteCardData(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将卡号序列化并写入buf中
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将卡详情实例写入到buf中
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.ReadCardData(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从buf中读取卡号
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从buf中读取卡详情数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.GetTimeGroup(System.Int32)">
             <summary>
            获取指定门的开门时段号
             </summary>
             <param name="iDoor">取值范围1-4</param>
             <returns>开门时段号</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.SetTimeGroup(System.Int32,System.Int32)">
            <summary>
            设置指定门的开门时段号
            </summary>
            <param name="iDoor">门号，取值范围：1-4</param>
            <param name="iNum">开门时段号，取值范围：1-64</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.GetDoor(System.Int32)">
            <summary>
            获取指定门是否有权限
            </summary>
            <param name="iDoor">门号，取值范围：1-4</param>
            <returns>true 有权限，false 无权限。</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.SetDoor(System.Int32,System.Boolean)">
            <summary>
            设置指定门是否有权限
            </summary>
            <param name="iDoor">门号，取值范围：1-4</param>
            <param name="bUse">true 有权限，false 无权限。</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.IsNormal">
             <summary>
            普通开门卡
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.SetNormal">
             <summary>
            普通开门卡--五特权开门卡
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.IsPrivilege">
             <summary>
            首卡特权卡
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.SetPrivilege">
             <summary>
            首卡特权卡
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.IsTiming">
             <summary>
            常开特权卡
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.SetTiming">
             <summary>
            常开特权卡
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.IsGuardTour">
             <summary>
            巡更卡
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.SetGuardTour">
             <summary>
            巡更卡
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.IsAlarmSetting">
             <summary>
            防盗设置卡
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.SetAlarmSetting">
             <summary>
            防盗设置卡
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.GetHolidayValue(System.Int32)">
            <summary>
            获取指定序号的节假日开关状态
            </summary>
            <param name="iIndex">取值范围 1-30</param>
            <returns>开关状态 开关true 表示启用，false 表示禁用</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.SetHolidayValue(System.Int32,System.Boolean)">
            <summary>
            设置指定序号的节假日开关状态
            </summary>
            <param name="iIndex">取值范围 1-30</param>
            <param name="bUse">开关状态 开关true 表示启用，false 表示禁用</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.GetEnterStatusValue(System.Int32)">
            <summary>
            获取出入标志
            </summary>
            <param name="iDoor">门号，取值范围：1-4</param>
            <returns>出入标志：0--出入有效；1--入有效；2--出有效</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase.SetEnterStatusValue(System.Int32,System.Int32)">
            <summary>
            设置出入标志
            </summary>
            <param name="iDoor">门号，取值范围：1-4</param>
            <param name="iStatus">出入标志：0--出入有效；1--入有效；2--出有效</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay">
            <summary>
            星期的枚举
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay.Monday">
            <summary>
            星期一
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay.Tuesday">
            <summary>
            星期二
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay.Wednesday">
            <summary>
            星期三
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay.Thursday">
            <summary>
            星期四
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay.Friday">
            <summary>
            星期五
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay.Saturday">
            <summary>
            星期六
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay.Sunday">
            <summary>
            星期日
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup">
            <summary>
            表示一天的时段 ,一天可以包含多个时段
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup.mSegment">
            <summary>
            表示一个时段，开始时间和结束时间 集合
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup.#ctor(System.Int32)">
            <summary>
            初始化天时段
            </summary>
            <param name="SegmentCount">一天中的时段数量</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup.SetSegmentCount(System.Int32)">
            <summary>
            设置一天中包含的时段数量
            </summary>
            <param name="SegmentCount">时段数量</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup.GetSegmentCount">
            <summary>
            获取一天中包含的时段数量
            </summary>
            <returns>时段数量</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup.GetItem(System.Int32)">
            <summary>
            获取一个时段，进行操作
            </summary>
            <param name="iIndex">此时段在这一天当中的索引号，索引从0开始</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将对象写入到字节缓冲区
            </summary>
            <param name="bBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从字节缓冲区中生成一个对象
            </summary>
            <param name="bBuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup_ReaderWork">
            <summary>
            读卡认证 表示一天的时段 ,一天可以包含多个时段
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup_ReaderWork.#ctor(System.Int32)">
            <summary>
            初始化参数
            </summary>
            <param name="SegmentCount">一天的时段数量</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.DayTimeGroup_ReaderWork.SetSegmentCount(System.Int32)">
            <summary>
            设置一天可以包含多个时段
            </summary>
            <param name="SegmentCount">一天的时段数量</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment_ReaderWork">
            <summary>
            表示一个时段，开始时间和结束时间
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment_ReaderWork.CheckWay">
            <summary>
            认证方式
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment_ReaderWork.GetCheckWay">
            <summary>
            获取认证方式
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment_ReaderWork.SetCheckWay(System.Byte)">
            <summary>
            设置认证方式
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment_ReaderWork.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将对象写入到字节缓冲区
            </summary>
            <param name="bBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment_ReaderWork.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从字节缓冲区中生成一个对象
            </summary>
            <param name="bBuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup_ReaderWork">
            <summary>
            读卡认证方式 的开门时段
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup_ReaderWork.#ctor(System.Int32)">
            <summary>
            初始化参数
            </summary>
            <param name="iDaySegmentCount">一周的时段数量</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup_ReaderWork.CreateDayTimeGroup">
            <summary>
            初始化一个周时段
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup_ReaderWork.GetDataLen">
            <summary>
            获取一个周时段长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup_ReaderWork.SetBytes(DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay,DotNetty.Buffers.IByteBuffer)">
            <summary>
            从缓冲区中获取值并初始化周时段
            </summary>
            <param name="FistWeek">一周的第一天</param>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup_ReaderWork.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup_ReaderWork.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup_ReaderWork.GetBytes(DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay,DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="FistWeek">一周的第一天</param>
            <param name="data"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment">
            <summary>
            表示一个时段，开始时间和结束时间
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment.mBeginTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment.mEndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment.SetBeginTime(System.Int32,System.Int32)">
            <summary>
            设置开始时间
            </summary>
            <param name="Hour">开始时间的小时部分 取值范围 0-23</param>
            <param name="Minute">开始时间的分钟部分 取值范围 0-59</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment.GetBeginTime">
            <summary>
            获取开始时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment.SetEndTime(System.Int32,System.Int32)">
            <summary>
            设置结束时间
            </summary>
            <param name="Hour">开始时间的小时部分 取值范围 0-23</param>
            <param name="Minute">开始时间的分钟部分 取值范围 0-59</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment.GetEndTime">
            <summary>
            获取结束时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment.toString">
            <summary>
            返回时间段 字符串格式 HH:mm - HH:mm
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment.CheckTime(System.Int32,System.Int32)">
            <summary>
            检查时分参数
            </summary>
            <param name="Hour">小时</param>
            <param name="Minute">分钟</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将对象写入到字节缓冲区
            </summary>
            <param name="bBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.TimeSegment.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从字节缓冲区中生成一个对象
            </summary>
            <param name="bBuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup">
            <summary>
            表示一个完整时段，一个时段里包含7天
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.mDay">
            <summary>
            一周中的天段
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.iDaySegmentCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.mIndex">
            <summary>
            获取在周时段列表中的索引号
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.DaySegmentCount">
            <summary>
            一天中的时段数量
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.HasValue">
            <summary>
            是否有值
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.#ctor(System.Int32)">
            <summary>
            初始化一个周时段
            </summary>
            <param name="iDaySegmentCount">一天中的时段数量</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.CreateDayTimeGroup">
            创建一周中的天时段
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.#ctor(System.Int32,System.Int32)">
            <summary>
            初始化参数
            </summary>
            <param name="iDaySegmentCount">一天中的时段数量</param>
            <param name="index">在周时段列表中的索引号</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.GetIndex">
             获取在周时段列表中的索引号
            
             @return 索引号 1-64
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.SetIndex(System.Int32)">
            <summary>
            设定在周时段列表中的索引号
            </summary>
            <param name="index">索引号</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.GetItem(DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay)">
            <summary>
            获取一天的时段
            </summary>
            <param name="week">星期的枚举</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.GetItem(System.Int32)">
            <summary>
            获取一天的时段
            </summary>
            <param name="index">索引号</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.GetDataLen">
            <summary>
            获取完整的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从字节缓冲区中生成一个对象
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.ReadDoorWorkSetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            提供给 门工作方式 使用
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.SetBytes(DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay,DotNetty.Buffers.IByteBuffer)">
            <summary>
            从缓冲区中获取值并初始化周时段
            </summary>
            <param name="FistWeek">一周的第一天</param>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.GetWeekList(DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay,System.Int32[])">
            <summary>
            
            </summary>
            <param name="FistWeek">一周的第一天</param>
            <param name="WeekList">一周的天数集合</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            使用从周一为一周的第一天进行排序的缓冲区获取时段信息
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.GetBytes(DoNetDrive.Protocol.Door.Door8800.Data.E_WeekDay,DotNetty.Buffers.IByteBuffer)">
            <summary>
            使用从周一为一周的第一天进行排序的缓冲区获取时段信息
            </summary>
            <param name="FistWeek">一周的第一天</param>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.Clone">
            <summary>
            克隆一个周时段
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.SetNowTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup.InitTimeGroup">
            <summary>
            初始化 一个完整时段
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail">
            <summary>
            记录数据库的详情
            读卡记录, 出门开关, 门磁, 远程开门, 报警, 系统记录
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.ListTransaction">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.CardTransactionDetail">
            <summary>
            读卡相关记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.ButtonTransactionDetail">
            <summary>
            出门开关相关记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.DoorSensorTransactionDetail">
            <summary>
            门磁相关记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.SoftwareTransactionDetail">
            <summary>
            远程操作相关记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.AlarmTransactionDetail">
            <summary>
            报警相关记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.SystemTransactionDetail">
            <summary>
            系统相关记录
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.#ctor">
            <summary>
            初始化参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.GetDataLen">
            <summary>
            获取长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            进行解码
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDatabaseDetail.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDetail">
            <summary>
            事件日志详情，包含数据库容量，记录索引，已读取索引，循环标志4个部分
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDetail.DataBaseMaxSize">
            <summary>
            数据库容量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDetail.WriteIndex">
            <summary>
            写索引号(记录尾号)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDetail.ReadIndex">
            <summary>
            读索引号(上传断点)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDetail.IsCircle">
            <summary>
            循环标记
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDetail.GetDataLen">
            <summary>
            获取长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDetail.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从字节缓冲区中生成一个对象
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDetail.GetBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDetail.readable">
            <summary>
            可用的新记录数
            </summary>
            <returns>新记录数</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.TransactionDetail.NewSzie">
            <summary>
            可用的新记录数
            </summary>
            <returns>新记录数</returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.AbstractDoorTransaction">
            <summary>
            关于门的事件抽象类
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.AbstractDoorTransaction.Door">
            <summary>
            门号
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.AbstractDoorTransaction.#ctor(System.Int32)">
            <summary>
            初始化参数
            </summary>
            <param name="type">记录模块代码</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.AbstractDoorTransaction.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            使用缓冲区构造一个事务实例
            </summary>
            <param name="data">缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.AlarmTransaction">
            <summary>
            报警记录
            TransactionCode 事件代码含义表
            1     门磁报警                     
            2     匪警报警                     
            3     消防报警                     
            4     非法卡刷报警                 
            5     胁迫报警                     
            6     消防报警(命令通知)           
            7     烟雾报警                     
            8     防盗报警                     
            9     黑名单报警                   
            10    开门超时报警                
            0x11  门磁报警撤销              
            0x12  匪警报警撤销              
            0x13  消防报警撤销              
            0x14  非法卡刷报警撤销          
            0x15  胁迫报警撤销              
            0x17  撤销烟雾报警              
            0x18  关闭防盗报警              
            0x19  关闭黑名单报警            
            0x1A  关闭开门超时报警          
            0x21  门磁报警撤销(命令通知)    
            0x22  匪警报警撤销(命令通知)    
            0x23  消防报警撤销(命令通知)    
            0x24  非法卡刷报警撤销(命令通知)
            0x25  胁迫报警撤销(命令通知)    
            0x27  撤销烟雾报警(命令通知)    
            0x28  关闭防盗报警(软件关闭)    
            0x29  关闭黑名单报警(软件关闭)  
            0x2A  关闭开门超时报警          
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.AlarmTransaction.#ctor">
            <summary>
            初始化参数
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.ButtonTransaction">
            <summary>
            出门按钮记录
            TransactionCode 事件代码含义表
            1 合法开门          
            2 开门时段过期      
            3 锁定时按钮        
            4 控制器已过期      
            5 互锁时按钮(不开门)
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.ButtonTransaction.#ctor">
            <summary>
            初始化参数
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.CardTransaction">
            <summary>
            刷卡记录<br/>
            TransactionCode 事件代码含义表：<br/>
            1   合法开门                                                    
            2   密码开门------------卡号为密码                              
            3   卡加密码                                                    
            4   手动输入卡加密码                                            
            5   首卡开门                                                    
            6   门常开 --- 常开工作方式中，刷卡进入常开状态                 
            7   多卡开门 -- 多卡验证组合完毕后触发                          
            8   重复读卡                                                    
            9   有效期过期                                                  
            10  开门时段过期                                               
            11  节假日无效                                                 
            12  未注册卡                                                   
            13  巡更卡 -- 不开门                                           
            14  探测锁定                                                   
            15  无有效次数                                                 
            16  防潜回                                                     
            17  密码错误------------卡号为错误密码                         
            18  密码加卡模式密码错误----卡号为卡号。                       
            19  锁定时(读卡)或(读卡加密码)开门                             
            20  锁定时(密码开门)                                           
            21  首卡未开门                                                 
            22  挂失卡                                                     
            23  黑名单卡                                                   
            24  门内上限已满，禁止入门。                                   
            25  开启防盗布防状态(设置卡)                                   
            26  撤销防盗布防状态(设置卡)                                   
            27  开启防盗布防状态(密码)                                     
            28  撤销防盗布防状态(密码)                                     
            29  互锁时(读卡)或(读卡加密码)开门                             
            30  互锁时(密码开门)                                           
            31  全卡开门                                                   
            32  多卡开门--等待下张卡                                       
            33  多卡开门--组合错误                                         
            34  非首卡时段刷卡无效                                         
            35  非首卡时段密码无效                                         
            36  禁止刷卡开门 -- 【开门认证方式】验证模式中禁用了刷卡开门时 
            37  禁止密码开门 -- 【开门认证方式】验证模式中禁用了密码开门时 
            38  门内已刷卡，等待门外刷卡。（门内外刷卡验证）               
            39  门外已刷卡，等待门内刷卡。（门内外刷卡验证）               
            40  请刷管理卡(在开启管理卡功能后提示)(电梯板)                 
            41  请刷普通卡(在开启管理卡功能后提示)(电梯板)                 
            42  首卡未读卡时禁止密码开门。                                 
            43  控制器已过期_刷卡                                          
            44  控制器已过期_密码                                          
            45  合法卡开门—有效期即将过期                                 
            46  拒绝开门--区域反潜回失去主机连接。                         
            47  拒绝开门--区域互锁，失去主机连接                           
            48  区域防潜回--拒绝开门    
            49  区域互锁--有门未关好，拒绝开门
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardTransaction.#ctor">
            <summary>
            初始化参数
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.Data.CardTransaction.CardData">
            <summary>
            4字节卡号
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Data.CardTransaction.Reader">
            <summary>
            读卡器号
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardTransaction.GetDataLen">
            <summary>
            获取读卡记录格式长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardTransaction.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从buf中读取记录数据
            </summary>
            <param name="dtBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardTransaction.ReadCardData(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从buf中读取卡号
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardTransaction.DoorNum">
            <summary>
            获取门号
            </summary>
            <returns>1-4 代表4个门</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardTransaction.IsEnter">
            <summary>
            是否为进门读卡
            </summary>
            <returns>true 进门读卡，false 出门读卡</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.CardTransaction.IsExit">
            <summary>
            是否为出门读卡
            </summary>
            <returns>true 出门读卡，false 进门读卡</returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.Transaction.ConnectMessageTransaction">
            <summary>
            连接测试消息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.Transaction.ConnectMessageTransaction.#ctor">
            <summary>
            创建一个连接测试消息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.Transaction.ConnectMessageTransaction.GetDataLen">
            <summary>
            指示一个事务记录所占用的缓冲区长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.Transaction.ConnectMessageTransaction.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            使用缓冲区构造一个事务实例
            </summary>
            <param name="data">缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.Transaction.KeepaliveTransaction">
            <summary>
            保活包记录
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.Transaction.KeepaliveTransaction.#ctor">
            <summary>
            创建一个保活包记录
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.Transaction.KeepaliveTransaction.GetDataLen">
            <summary>
            指示一个事务记录所占用的缓冲区长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.Transaction.KeepaliveTransaction.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            使用缓冲区构造一个事务实例
            </summary>
            <param name="data">缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.DoorSensorTransaction">
            <summary>
            门磁记录
            TransactionCode 事件代码含义表：
            1  开门
            2  关门 
            3  进入门磁报警状态
            4  退出门磁报警状态
            5  门未关好
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.DoorSensorTransaction.#ctor">
            <summary>
            创建一个门磁记录
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.SoftwareTransaction">
            <summary>
            软件操作记录
            TransactionCode 事件代码含义表：
            1  软件开门                           
            2  软件关门                           
            3  软件常开                           
            4  控制器自动进入常开                 
            5  控制器自动关闭门                   
            6  长按出门按钮常开                   
            7  长按出门按钮常闭                   
            8  软件锁定                           
            9  软件解除锁定                       
            10 控制器定时锁定--到时间自动锁定    
            11 控制器定时锁定--到时间自动解除锁定
            12 报警--锁定                        
            13 报警--解除锁定                    
            14 互锁时远程开门     
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.SoftwareTransaction.#ctor">
            <summary>
            创建一个软件操作记录
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Data.SystemTransaction">
            <summary>
            系统记录
            TransactionCode 事件代码含义表：
            1   系统加电                       
            2   系统错误复位（看门狗）         
            3   设备格式化记录                 
            4   系统高温记录，温度大于75      
            5   系统UPS供电记录                
            6   温度传感器损坏，温度大于100   
            7   电压过低，小于09V             
            8   电压过高，大于14V             
            9   读卡器接反。                   
            10  读卡器线路未接好。            
            11  无法识别的读卡器              
            12  电压恢复正常，小于14V，大于9V 
            13  网线已断开                    
            14  网线已插入   
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.SystemTransaction.#ctor">
            <summary>
            创建一个系统记录
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.SystemTransaction.GetDataLen">
            <summary>
            指示一个事务记录所占用的缓冲区长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Data.SystemTransaction.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            使用缓冲区构造一个事务实例
            </summary>
            <param name="data">缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door8800CommandEx">
            <summary>
            针对命令中的写参数命令进行抽象封装
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800CommandEx.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含命令所需要的其他参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800CommandEx.CommandReSend">
            <summary>
            命令重发时，对命令中一些缓冲做清空或参数重置<br/>
            此命令一般情况下不需要实现！
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800CommandEx.Release1">
            <summary>
            释放命令占用的内存<br/>
            此命令一般情况下不需要实现！
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800CommandEx.CheckResponse(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket,System.Byte,System.Byte,System.Byte)">
            <summary>
            检查指令返回值
            </summary>
            <param name="oPck"></param>
            <param name="CmdType">命令类型</param>
            <param name="CmdIndex">命令索引</param>
            <param name="CmdPar">命令参数</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800CommandEx.RewritePacket(System.Byte,System.Byte,System.Int32)">
            <summary>
            重置命令内容
            </summary>
            <param name="ci">命令索引</param>
            <param name="cp">命令参数</param>
            <param name="dl">数据长度</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door8800Command_ReadParameter">
            <summary>
            针对命令中的读参数命令进行抽象封装
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800Command_ReadParameter.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800Command_ReadParameter.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含命令所需要的其他参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800Command_ReadParameter.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            进行命令参数的检查<br/>
            只有在有参数时才需要实现
            </summary>
            <param name="value">命令包含的参数</param>
            <returns>true 表示检查通过，false 表示检查不通过</returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door8800Command_Read_DoorParameter">
            <summary>
            针对命令中的只有门的读参数命令进行抽象封装
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800Command_Read_DoorParameter.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门号的参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800Command_Read_DoorParameter.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            进行命令参数的检查<br/>
            只有在有参数时才需要实现
            </summary>
            <param name="value">命令包含的参数</param>
            <returns>true 表示检查通过，false 表示检查不通过</returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door8800Command_WriteParameter">
            <summary>
            针对命令中的写参数命令进行抽象封装
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800Command_WriteParameter.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含命令所需要的其他参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800Command_WriteParameter.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断<br/>
            【应答：OK】 => 父类已处理
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door8800Command_WriteParameter.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Parameter">
            <summary>
            控制器4个门的读卡器字节数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Parameter.DataLength">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Parameter.Door">
            <summary>
            门字节数组
            1 - 韦根26(三字节)
            2 - 韦根26(三字节)
            3 - 韦根26(二字节)
            4 - 禁用
            (89H)5 - 8字节身份证读卡器
            (89H)6 - 二维码读卡器（兼容8字节身份证）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Parameter.#ctor(System.Byte[])">
            <summary>
            控制器4个门的读卡器字节数初始化实例
            </summary>
            <param name="_Door">门字节数组</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对控制器4个门的读卡器字节数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对控制器4个门的读卡器字节数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReaderOption_Result">
            <summary>
            控制器4个门的读卡器字节数_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReadReaderOption">
            <summary>
            读取控制器4个门的读卡器字节数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReadReaderOption.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            读取控制器4个门的读卡器字节数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReadReaderOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.ReadReaderOption.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.WriteReaderOption`1">
            <summary>
            设置控制器4个门的读卡器字节数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.WriteReaderOption`1.#ctor(DoNetDrive.Core.Command.INCommandDetail,`0)">
            <summary>
            设置控制器4个门的读卡器字节数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含控制器4个门的读卡器字节数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.WriteReaderOption`1.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderOption.WriteReaderOption`1.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.ReadRelayOption">
            <summary>
            读取控制器4个门的继电器参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.ReadRelayOption.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            读取控制器4个门的读卡器字节数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.ReadRelayOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.ReadRelayOption.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter">
            <summary>
            控制器4个门的继电器参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter.DataLength">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter.Relay">
            <summary>
            门的继电器字节数组
            1 - 不输出（默认）  COM 和 NC
            2 - 输出            COM 和 NO
            3 - 读卡切换输出状态（当读到合法卡后自动自动切换到当前相反的状态。）例如卷闸门
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter.#ctor(System.Byte[])">
            <summary>
            控制器4个门的继电器参数初始化实例
            </summary>
            <param name="_Relay">门的继电器字节数组</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对控制器4个门的继电器参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对控制器4个门的继电器参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Result">
            <summary>
            控制器4个门的继电器参数_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.WriteRelayOption">
            <summary>
            设置控制器4个门的继电器参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.WriteRelayOption.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.RelayOption_Parameter)">
            <summary>
            设置控制器4个门的继电器参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含控制器4个门的继电器参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.WriteRelayOption.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.WriteRelayOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayOption.WriteRelayOption.GetCmdData">
            <summary>
            创建命令所需的命令数据<br/>
            将命令打包到ByteBuffer中
            </summary>
            <returns>包含命令数据的ByteBuffer</returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.Remote.CloseDoor">
            <summary>
            远程关门
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.CloseDoor.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter)">
            <summary>
            远程关门
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含远程关门参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.CloseDoor.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.Remote.HoldDoor">
            <summary>
            设置门常开
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.HoldDoor.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter)">
            <summary>
            设置门常开
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门常开参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.HoldDoor.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.Remote.LockDoor">
            <summary>
            锁定门
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.LockDoor.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter)">
            <summary>
            锁定门
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含锁定门参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.LockDoor.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.Remote.OpenDoor">
            <summary>
            远程开门
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.OpenDoor.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter)">
            <summary>
            远程开门
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含远程开门参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.OpenDoor.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.OpenDoor.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.OpenDoor.GetCmdData">
            <summary>
            创建命令所需的命令数据<br/>
            将命令打包到ByteBuffer中
            </summary>
            <returns>包含命令数据的ByteBuffer</returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.Remote.OpenDoor_CheckNum">
            <summary>
            远程开门_带验证码
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.OpenDoor_CheckNum.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter)">
            <summary>
            远程开门远程开门_验证
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含远程开门参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.OpenDoor_CheckNum.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.OpenDoor_CheckNum.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.OpenDoor_CheckNum.GetCmdData">
            <summary>
            创建命令所需的命令数据<br/>
            将命令打包到ByteBuffer中
            </summary>
            <returns>包含命令数据的ByteBuffer</returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter">
            <summary>
            远程开门_带验证码
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter.DataLength">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter.Door">
            <summary>
            门
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter.CheckNum">
            <summary>
            验证码
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.Door.DoorDetail{System.Boolean},System.Byte)">
            <summary>
            远程开关门参数初始化实例
            </summary>
            <param name="_Door">门</param>
            <param name="_CheckNum">验证码</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对远程开关门参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_CheckNum_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对远程开关门参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter">
            <summary>
            远程开关门
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter.DataLength">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter.Door">
            <summary>
            门
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.Door.DoorDetail{System.Boolean})">
            <summary>
            远程开关门参数初始化实例
            </summary>
            <param name="_Door">门字节数组</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对远程开关门参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对远程开关门参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Result">
            <summary>
            远程开关门_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.Remote.UnlockDoor">
            <summary>
            解除锁定门
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.UnlockDoor.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.Remote.Remote_Parameter)">
            <summary>
            解除锁定门
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含解除锁定门参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.Remote.UnlockDoor.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.ReaderWorkSetting_Result">
            <summary>
            门认证方式_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.ReadReaderWorkSetting">
            <summary>
            读取门认证方式
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.ReadReaderWorkSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            读取门认证方式
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Base`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Base`1.#ctor(DoNetDrive.Core.Command.INCommandDetail,`0)">
            <summary>
            设置门认证方式
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Base`1.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Base`1.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting">
            <summary>
            设置门认证方式
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter)">
            <summary>
            设置门认证方式
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter">
            <summary>
            门读卡认证方式
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter.Door">
            <summary>
            门
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter.weekTimeGroup_ReaderWork">
            <summary>
            门认证方式时段
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter.#ctor">
            <summary>
            提供给 ReaderWorkSetting_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter.#ctor(System.Byte,DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup_ReaderWork)">
            <summary>
            门读卡认证方式参数初始化实例
            </summary>
            <param name="iDoor">门</param>
            <param name="tg">门认证方式时段</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对门认证方式参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderWorkSetting.WriteReaderWorkSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对门认证方式参数进行解码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.DoorWorkSetting_Result">
            <summary>
            门工作方式_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.ReadDoorWorkSetting">
            <summary>
            读取门工作方式
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.ReadDoorWorkSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            读取门工作方式
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门端口</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.ReadDoorWorkSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.ReadDoorWorkSetting.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting">
            <summary>
            设置门工作方式
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter)">
            <summary>
            设置门工作方式
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门工作方式参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter">
            <summary>
            门工作方式_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.Door">
            <summary>
            门
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.Use">
            <summary>
            功能是否启用
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.OpenDoorWay">
            <summary>
            开门方式
            1 - 普通
            2 - 多卡
            3 - 首卡（时段）
            4 - 常开（时段）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.DoorTriggerMode">
            <summary>
            门常开触发模式
            1 - 合法卡在时段内即可常开
            2 - 授权中标记为常开卡的在指定时段内刷卡即可常开
            3 - 自动开关，到时间自动开关门
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.RetainValue">
            <summary>
            保留值
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.weekTimeGroup">
            <summary>
            门工作方式时段
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.#ctor">
            <summary>
            提供给 DoorWorkSetting_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.#ctor(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup)">
            <summary>
            门工作方式参数初始化实例
            </summary>
            <param name="door">门</param>
            <param name="use">功能是否启用</param>
            <param name="openDoorWay">开门方式</param>
            <param name="doorTriggerMode">门常开触发模式</param>
            <param name="retainValue">保留值</param>
            <param name="tg">门工作方式时段</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对门工作方式参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorWorkSetting.WriteDoorWorkSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对门工作方式参数进行解码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter">
            <summary>
            定时锁定门_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter.Door">
            <summary>
            门
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter.Use">
            <summary>
            功能是否启用
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter.weekTimeGroup">
            <summary>
            定时锁定门时段
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter.#ctor(System.Byte,System.Byte,DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup)">
            <summary>
            定时锁定门参数初始化实例
            </summary>
            <param name="door">门</param>
            <param name="use">功能是否启用</param>
            <param name="tg">定时锁定门时段</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对定时锁定门参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对定时锁定门参数进行解码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Result">
            <summary>
            定时锁定门_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.ReadAutoLockedSetting">
            <summary>
            读取定时锁定门参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.ReadAutoLockedSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            读取定时锁定门参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门端口</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.ReadAutoLockedSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.ReadAutoLockedSetting.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.WriteAutoLockedSetting">
            <summary>
            设置定时锁定门参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.WriteAutoLockedSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.AutoLockedSetting_Parameter)">
            <summary>
            设置定时锁定门参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含定时锁定门参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.WriteAutoLockedSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AutoLockedSetting.WriteAutoLockedSetting.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.ReadRelayReleaseTime">
            <summary>
            获取开锁时输出时长
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.ReadRelayReleaseTime.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            读取门工作方式
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门端口</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.ReadRelayReleaseTime.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.ReadRelayReleaseTime.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.RelayReleaseTime_Result">
            <summary>
            开锁时输出时长_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime">
            <summary>
            设置开锁时输出时长
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter)">
            <summary>
            设置开锁时输出时长
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含开锁时输出时长参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter">
            <summary>
            开锁时输出时长_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter.Door">
            <summary>
            门
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter.ReleaseTime">
            <summary>
            开锁时输出时长（输出时长2字节，最大65535秒。0表示0.5秒）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter.#ctor">
            <summary>
            提供给 RelayReleaseTime_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter.#ctor(System.Byte,System.UInt16)">
            <summary>
            开锁时输出时长参数初始化实例
            </summary>
            <param name="door">门端口</param>
            <param name="releaseTime">开锁时输出时长</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对开锁时输出时长参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.RelayReleaseTime.WriteRelayReleaseTime_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对开锁时输出时长参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.ReaderInterval_Result">
            <summary>
            重复读卡间隔_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.ReadReaderInterval">
            <summary>
            读取重复读卡间隔参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.ReadReaderInterval.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            读取重复读卡间隔参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门端口</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.ReadReaderInterval.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.ReadReaderInterval.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval">
            <summary>
            设置重复读卡间隔参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter)">
            <summary>
            设置开锁时输出时长
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含开锁时输出时长参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter">
            <summary>
            重复读卡间隔_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter.Door">
            <summary>
            门
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter.Use">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter.DetectionMode">
            <summary>
            检测模式 
            1 - 记录读卡，不开门，有提示
            2 - 不记录读卡，不开门，有提示
            3 - 不做响应，无提示
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter.#ctor">
            <summary>
            提供给 ReaderInterval_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            重复读卡间隔参数初始化实例
            </summary>
            <param name="door">门端口</param>
            <param name="use">是否有效</param>
            <param name="detectionMode">检测模式</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对重复读卡间隔参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderInterval.WriteReaderInterval_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对重复读卡间隔参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.InvalidCardAlarmOption_Result">
            <summary>
            非法读卡报警_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.ReadInvalidCardAlarmOption">
            <summary>
            读取非法读卡报警参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.ReadInvalidCardAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            读取非法读卡报警参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门号</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.ReadInvalidCardAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.ReadInvalidCardAlarmOption.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption">
            <summary>
            设置非法读卡报警参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter)">
            <summary>
            设置非法读卡报警参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含非法读卡报警参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter">
            <summary>
            非法读卡报警_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.Use">
            <summary>
            是否报警功能
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.ReadInvalidCardTime">
            <summary>
            当读未注册卡到达一定次数后报警
            0-255,  0--读一次卡就报警
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.#ctor">
            <summary>
            提供给 InvalidCardAlarmOption_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.#ctor(System.Byte,System.Boolean,System.Byte)">
            <summary>
            非法读卡报警参数初始化实例
            </summary>
            <param name="door">门号</param>
            <param name="use">是否开启此功能</param>
            <param name="time">次数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对非法读卡报警参数进行编码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.GetDataLen">
            <summary>
            指示此类结构编码为字节缓冲后的长度
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对非法读卡报警参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.ReadInvalidCardTime_SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对非法读卡报警参数进行解码
            <param name="databuf"></param>
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter.ReadInvalidCardTime_GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对非法读卡报警参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.AlarmPassword_Result">
            <summary>
            胁迫报警 返回参数
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.ReadAlarmPassword">
            <summary>
            读取胁迫报警功能
            功能开启后，在密码键盘读卡器上输入特定密码后就会报警；
            成功返回结果参考 ReadAlarmPassword_Result
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.ReadAlarmPassword.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">需要读取的门号结构</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.ReadAlarmPassword.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.ReadAlarmPassword.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword">
            <summary>
            写入胁迫报警功能
            功能开启后，在密码键盘读卡器上输入特定密码后就会报警；
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter">包含门号和胁迫报警开关的结构</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter">
            <summary>
            写入胁迫报警功能
            功能开启后，在密码键盘读卡器上输入特定密码后就会报警；
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.DoorNum">
             <summary>
             门号<br/>
            门端口在控制板中的索引号，取值：1-4
             </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.Use">
            <summary>
            是否启用胁迫报警功能
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.Password">
            <summary>
            胁迫报警密码，最大长度8个字符，由数字组成。
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.AlarmOption">
            <summary>
            报警选项
            1   不开门，报警输出
            2   开门，报警输出
            3   锁定门，报警，只能软件解锁
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.#ctor">
            <summary>
            提供给 AlarmPassword_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.#ctor(System.Byte,System.Boolean,System.String,System.Int32)">
            <summary>
            创建结构，并传入门号和是否启动胁迫报警功能、胁迫报警密码、报警选项
            </summary>
            <param name="door">门号</param>
            <param name="use">是否启动胁迫报警功能</param>
            <param name="pwd">胁迫报警密码</param>
            <param name="alarmOption">报警选项</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.SetPassword(System.String)">
            <summary>
            胁迫报警密码，最大长度8个字符，由数字组成。
            </summary>
            <param name="pwd">胁迫报警密码</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.GetDataLen">
            <summary>
            指示此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AlarmPassword.WriteAlarmPassword_parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.AntiPassback_Result">
            <summary>
            防潜返 返回结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.ReadAntiPassback">
            <summary>
            读取防潜返
            刷卡进门后，必须刷卡出门才能再次刷卡进门。
            成功返回结果参考 ReadAntiPassback_Result
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.ReadAntiPassback.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">需要读取的门号结构</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.ReadAntiPassback.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.ReadAntiPassback.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback">
            <summary>
            写入防潜返
            刷卡进门后，必须刷卡出门才能再次刷卡进门。
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter">包含门号和防潜返功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter">
            <summary>
            防潜返
            刷卡进门后，必须刷卡出门才能再次刷卡进门。
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter.Use">
            <summary>
            是否启用防潜返功能
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter.#ctor">
            <summary>
            提供给AntiPassback_Result使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter.#ctor(System.Byte,System.Boolean)">
            <summary>
            创建结构,并传入门号和是否开启此功能
            </summary>
            <param name="door">门号</param>
            <param name="use">是否启用防潜返功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            讲过结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AntiPassback.WriteAntiPassback_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.OvertimeAlarmSetting_Result">
            <summary>
            开门超时报警 返回结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.ReadOvertimeAlarmSetting">
            <summary>
            读取开门超时报警功能<br/>
            门磁打开超过一定时间后就会报警和发出提示语音和响声。
            成功返回结果参考 ReadOvertimeAlarmSetting_Result 
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.ReadOvertimeAlarmSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化命令 结构
            </summary>
            <param name="cd"></param>
            <param name="value">需要读取的门号结构</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.ReadOvertimeAlarmSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.ReadOvertimeAlarmSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting">
            <summary>
            写入开门超时报警功能<br/>
            门磁打开超过一定时间后就会报警和发出提示语音和响声。
            成功返回结果参考 ReadOvertimeAlarmSetting_Result 
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter">包含门号和防潜返功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter">
            <summary>
            设置开门超时提示参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.Use">
            <summary>
            是否启用功能
            0表示关闭，1表示开启
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.Overtime">
            <summary>
            超时时间，指门磁一直打开的时间。
            取值范围：0-65535,0表示关闭；单位秒；
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.Alarm">
            <summary>
            继电器输出
            0--不输出继电器；1--输出继电器(匪警继电器)。
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.#ctor">
            <summary>
            提供给 OvertimeAlarmSetting_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.#ctor(System.Byte,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            创建结构,并传入门号和是否开启此功能
            </summary>
            <param name="door">门号</param>
            <param name="use">是否启动此功能</param>
            <param name="overtime">超出时间</param>
            <param name="alarm">超出后,是否开启此功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.OvertimeAlarmSetting.WriteOvertimeAlarmSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.PushButtonSetting_Result">
            <summary>
            出门开关 返回结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.ReadPushButtonSetting">
            <summary>
            读取出门按钮功能
            可设定出门按钮的按下5秒后常开，还可以设定出门按钮的使用时段
            成功返回结果参考  ReadPushButtonSetting_Result
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.ReadPushButtonSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">需要读取的门号结构</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.ReadPushButtonSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.ReadPushButtonSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting">
            <summary>
            写入出门按钮功能
            可设定出门按钮的按下5秒后常开，还可以设定出门按钮的使用时段
            成功返回结果参考  ReadPushButtonSetting_Result
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">包括门号和出门按钮功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter">
            <summary>
            出门开关 参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制版中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.Use">
            <summary>
            是否启用出门按钮功能
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.NormallyOpen">
            <summary>
            是否启用出门按钮常开功能
            出门按钮按下5秒后门进入常开状态，再次按5秒退出常开
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.weekTimeGroup">
            <summary>
            门工作方式时段
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.#ctor">
            <summary>
            提供给PushButtonSetting_Result使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.#ctor(System.Byte,System.Boolean,System.Boolean,DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup)">
            <summary>
            创建结构，并传入门号和是否开启此功能
            </summary>
            <param name="door">门号</param>
            <param name="use">是否开启此功能</param>
            <param name="normallyOpen">是否启用出门按钮常开功能</param>
            <param name="tg">开门时段</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.PushButtonSetting.WritePushButtonSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.ReadSensorAlarmSetting">
             <summary>
             读取门磁报警功能<br/>
            当无有效开门验证时（远程开门、刷卡、密码、出门按钮），检测到门磁打开时就会报警。<br/>
             成功返回结果参考  ReadSensorAlarmSetting_Result 
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.ReadSensorAlarmSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">需要读取的门号结构</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.ReadSensorAlarmSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.ReadSensorAlarmSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.SensorAlarmSetting_Result">
            <summary>
            门磁报警功能 返回结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting">
            <summary>
            写入门磁报警功能<br/>
            当无有效开门验证时（远程开门、刷卡、密码、出门按钮），检测到门磁打开时就会报警。<br/>
            成功返回结果参考  ReadSensorAlarmSetting_Result 
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">包括门号和出门按钮功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter">
            <summary>
            写入门磁报警功能 参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制版中的索引号.取值:1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter.Use">
            <summary>
            是否启用门磁报警功能
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter.WeekTimeGroup">
            <summary>
            不启用时间控制的 时段
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter.#ctor">
            <summary>
            提供给SensorAlarmSetting_Result使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter.#ctor(System.Byte,System.Boolean,DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup)">
            <summary>
            创建结构,并传入门号和是否开启此功能
            </summary>
            <param name="door">门号</param>
            <param name="use">是否开启此功能</param>
            <param name="weekTimeGroup">启用时间控制的 时段</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.SensorAlarmSetting.WriteSensorAlarmSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.AnyCardSetting_Result">
            <summary>
            全卡开门功能
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.ReadAnyCardSetting">
            <summary>
            读取全卡开门功能
            所有的卡都能开门，不需要权限首选注册，只要读卡器能识别就能开门。
            成功返回结果参考 {@link ReadAnyCardSetting_Result}
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.ReadAnyCardSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">需要读取的门号结构</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.ReadAnyCardSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.ReadAnyCardSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting">
            <summary>
            设置全卡开门功能
            所有的卡都能开门，不需要权限首选注册，只要读卡器能识别就能开门。
            成功返回结果参考 {@link ReadAnyCardSetting_Result}
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">包括门号和出门按钮功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter">
            <summary>
            全卡开门功能
            所有的卡都能开门，不需要权限首选注册，只要读卡器能识别就能开门。
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.Use">
            <summary>
            是否启用全卡开门功能
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.AutoSave">
            <summary>
            是否启用在刷卡开门后保存卡片权限
            保存后，以后关闭全卡功能，此卡也能开门。
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.TimeGroup">
            <summary>
            开门时段索引号
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.#ctor">
            <summary>
            提供给AnyCardSetting_Result使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.#ctor(System.Byte,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            创建结构,并传入门号和是否开启此功能
            </summary>
            <param name="door">门号</param>
            <param name="use">是否启用全卡开门功能</param>
            <param name="auto">是否启用在刷卡开门后保存卡片权限</param>
            <param name="timeGroup">开门时段索引号</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AnyCardSetting.WriteAnyCardSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.ReadVoiceBroadcastSetting">
            <summary>
            读取语音播报功能
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.ReadVoiceBroadcastSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.ReadVoiceBroadcastSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.ReadVoiceBroadcastSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.VoiceBroadcastSetting_Result">
            <summary>
            语音播报功能
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting">
            <summary>
            设置语音播报功能
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">包括门号和出门按钮功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter">
            <summary>
            语音播报功能
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter.Use">
            <summary>
            是否启用语音播报功能
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter.#ctor">
            <summary>
            默认构造函数 给继承类使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter.#ctor(System.Byte,System.Boolean)">
            <summary>
            初始化参数
            </summary>
            <param name="door">门号</param>
            <param name="use">是否启用语音播报功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.VoiceBroadcastSetting.WriteVoiceBroadcastSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter">
            <summary>
            门内外同时读卡开门
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter.Use">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter.#ctor">
            <summary>
            默认构造函数 给继承类使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter.#ctor(System.Byte,System.Boolean)">
            <summary>
            初始化参数
            </summary>
            <param name="door">门号</param>
            <param name="use">是否启用</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Result">
            <summary>
            门内外同时读卡开门
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.ReadInOutSideReadOpenSetting">
            <summary>
            读取门内外同时读卡开门
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.ReadInOutSideReadOpenSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.ReadInOutSideReadOpenSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.ReadInOutSideReadOpenSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.WriteInOutSideReadOpenSetting">
            <summary>
            设置门内外同时读卡开门
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.WriteInOutSideReadOpenSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.InOutSideReadOpenSetting_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">包括门号和出门按钮功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.WriteInOutSideReadOpenSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.WriteInOutSideReadOpenSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InOutSideReadOpenSetting.WriteInOutSideReadOpenSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.ReadManageKeyboardSetting">
            <summary>
            读取键盘管理功能
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.ReadManageKeyboardSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.ReadManageKeyboardSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.ReadManageKeyboardSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.ReadManageKeyboardSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.ReadManageKeyboardSetting.Setting_SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为设置结构
            </summary>
            <param name="tmpBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.ReadManageKeyboardSetting.Password_SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为密码结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting">
            <summary>
            键盘管理功能
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting.mManageKeyboardPar">
            <summary>
            参数对象
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting.Step">
            <summary>
            当前命令步骤
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting.IniPacketProcess">
            <summary>
            初始化指令的步骤数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            接收到响应，开始处理下一步命令
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting.WritePassword">
            <summary>
            写密码
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter">
            <summary>
            键盘管理功能
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.Use">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.#ctor(System.Byte)">
            <summary>
            读取功能 初始化
            </summary>
            <param name="door">门号</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.#ctor(System.Byte,System.Boolean,System.String)">
            <summary>
            设置功能 初始化参数
            </summary>
            <param name="door">门号</param>
            <param name="use">是否启用</param>
            <param name="password">密码</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.Setting_GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.Password_GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将密码编码为字节缓冲写入
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ManageKeyboardSetting.WriteManageKeyboardSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.MultiCard_Result">
            <summary>
            读取多卡组合参数的返回值
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.MultiCard_Result.#ctor(System.Boolean)">
            <summary>
            初始化多卡组
            </summary>
            <param name="bOnlyGroupFix">只包含固定组</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.MultiCard_Result.CheckMode_SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将 字节流  转换为 多卡开门检测模式参数
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.MultiCard_Result.VerifyType_SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将 字节流  转换为 多卡开门验证方式
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard">
            <summary>
            读多卡参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard._Par">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.mResult">
            <summary>
            返回值
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.mPort">
            <summary>
            此命令对应的门端口号
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.Step">
            <summary>
            当前命令步骤
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.mGroupType">
            <summary>
            当前正在读取的组合类型
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.mGroupNum">
            <summary>
            当前正在读取的组号
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard_Parameter)">
            <summary>
            读单个门的多卡参数
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查端口是否正确
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.CreatePacket0">
            <summary>
            创建命令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令回应处理
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.ReadCheckModeCallblack(DotNetty.Buffers.IByteBuffer)">
            <summary>
            多卡开门检测模式参数
            </summary>
            <param name="tmpBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.CreateReadGroupFixPacket">
            <summary>
            创建读取多卡固定组的命令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.ReadVerifyType(DotNetty.Buffers.IByteBuffer)">
            <summary>
            读多卡验证方式
            </summary>
            <param name="tmpBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.ReadGroupAB(DotNetty.Buffers.IByteBuffer)">
            <summary>
            读取AB组的数据
            </summary>
            <param name="tmpBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.FindGroupAB">
            <summary>
            查询当前AB组的容器
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.ReadGroupABNext">
            <summary>
            读下一个AB组
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.ReadGroupABCard(System.Collections.Generic.List{System.Decimal},DotNetty.Buffers.IByteBuffer)">
            <summary>
            读取AB组的卡数据
            </summary>
            <param name="group"></param>
            <param name="tmpBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.ReadGroupFix(DotNetty.Buffers.IByteBuffer)">
            <summary>
            解析读取到的固定组内容
            </summary>
            <param name="tmpBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard.Release1">
            <summary>
            释放命令占用的内存<br/>
            此命令一般情况下不需要实现！
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard_Parameter">
            <summary>
            读取多卡组合的命令参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard_Parameter.IsOnlyGroupFix">
            <summary>
            指示仅支持固定组多卡，不支持AB组多卡
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.ReadMultiCard_Parameter.#ctor(System.Int32,System.Boolean)">
            <summary>
            门号参数初始化实例
            </summary>
            <param name="iDoor">门号</param>
            <param name="bOnlyeGroupFix">是否仅支持固定组多卡</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard">
            <summary>
            写多卡组合参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.mMultiCardPar">
            <summary>
            多卡参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.Step">
            <summary>
            当前命令步骤
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.GroupTypeA">
            <summary>
            多卡A组类型
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.GroupTypeB">
            <summary>
            多卡B组类型
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.mGroupType">
            <summary>
            当前正在写入的组合类型
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.mGroupNum">
            <summary>
            当前正在写入的组号
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查多卡组合参数合法性
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.CreatePacket0">
            <summary>
            创建第一个数据包
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.IniPacketProcess">
            <summary>
            初始化指令的步骤数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            接收到响应，开始处理下一步命令
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.WriteCheckModeCallBlack">
            <summary>
            写多卡开门检测模式的回调
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.WriteVerifyTypeCallBlack">
            <summary>
            写多卡开门验证方式的回调
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.WriteMultiCard_GroupABCallBlack">
            <summary>
            写多卡AB组合成功的回调函数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.WriteMultiCard_GroupAB">
            <summary>
            二十七 多卡开门A组设置
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.WriteMultiCard_GroupFixCallBlack">
            <summary>
            固定组多卡写成功后的回调
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.WriteMultiCard_GroupFix">
            <summary>
            写入固定多卡组
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.MultiCard_GroupFix">
            <summary>
            固定多卡组，单组结构
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.MultiCard_GroupFix.GroupType">
            <summary>
            1--入门多卡组，2--出门多卡组，3--出入门通用组。
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.MultiCard_GroupFix.CardList">
            <summary>
            固定多卡组中的卡列表。
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter">
            <summary>
            多卡组合参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.ReaderWaitMode">
            <summary>
            刷卡模式 0--表示多卡时当遇到非组合内的刷卡时继续等待下一张正确的卡(默认参数)。          1--表示当遇到非组合内刷卡时直接退出。
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.AntiPassback">
            <summary>
            防潜回检测 0--多卡时当开启防潜回功能时要进行防潜回检测。            1--多卡时当开启防潜回功能时不进行防潜回检测。
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.VerifyType">
            <summary>
            开门验证方式0--禁用多卡验证。1--A组和B组组合验证（A组任意数量，B组任意数量）。          2--固定组合验证（原Door8800验证方式）          3--数量验证（此方式不需要特定组，只要是合法卡刷卡一次数量即可）
            当验证模式为3时，【A组刷卡数量】字段规定的就是合法卡刷卡数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.AGroupCount">
            <summary>
            A组刷卡数量/自由组合刷卡数量    取值范围：0-50，当多卡验证方式为自由组合时，此值指示自由组合刷卡数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.BGroupCount">
            <summary>
            B组刷卡数量 取值范围：0-100
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.GroupA">
            <summary>
            多卡组A组
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.GroupB">
            <summary>
            多卡组B组
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.GroupFix">
            <summary>
            多卡固定组
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.IsOnlyGroupFix">
            <summary>
            指示仅支持固定组多卡，不支持AB组多卡
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.#ctor(System.Boolean)">
            <summary>
            用于对 MultiCard_Result 支持，不对参数初始化
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.#ctor(System.Byte,System.Byte,System.Byte,System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.MultiCard_GroupFix})">
            <summary>
            初始化多卡参数，不支持多卡验证参数和AB组，仅支持 等待模式和固定组多卡
            </summary>
            <param name="door">门号</param>
            <param name="readerWaitMode">刷卡时组合卡错误等待模式</param>
            <param name="antiPassback">防潜回功能检测模式</param>
            <param name="group_fix">多卡固定组合</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.#ctor(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Collections.Generic.List{System.Collections.Generic.List{System.Decimal}},System.Collections.Generic.List{System.Collections.Generic.List{System.Decimal}},System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.MultiCard_GroupFix})">
            <summary>
            初始化多卡参数，支持多卡验证参数和AB组，等待模式和固定组多卡
            </summary>
            <param name="door">门号</param>
            <param name="readerWaitMode">刷卡时组合卡错误等待模式</param>
            <param name="antiPassback">防潜回功能检测模式</param>
            <param name="verifytype">开门验证方式0--禁用多卡验证。1--A组和B组组合验证（A组任意数量，B组任意数量）。          2--固定组合验证（原Door8800验证方式）          3--数量验证（此方式不需要特定组，只要是合法卡刷卡一次数量即可）
            当验证模式为3时，【A组刷卡数量】字段规定的就是合法卡刷卡数量</param>
            <param name="agroupcount">A组刷卡数量/自由组合刷卡数量    取值范围：0-20，当多卡验证方式为自由组合时，此值指示自由组合刷卡数量</param>
            <param name="bgroupcount">B组刷卡数量 取值范围：0-100</param>
            <param name="group_a">多卡A组组合</param>
            <param name="group_b">多卡B组组合</param>
            <param name="group_fix">多卡固定组合</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.checkedParameter">
            <summary>
            检查多卡参数是否正确
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.CheckGroup(System.Collections.Generic.List{System.Collections.Generic.List{System.Decimal}})">
            <summary>
            检查卡组
            </summary>
            <param name="checkGroup"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.GetMaxCardValue">
            <summary>
            获取卡号最大值
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.CheckGroup(System.Collections.Generic.List{System.Decimal})">
            <summary>
            检查卡组数据
            </summary>
            <param name="group">卡组集合</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.CheckMode_GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将 多卡开门检测模式参数 编码到字节流
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.VerifyType_GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将 多卡开门验证方式 编码到字节流
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.GetDataLen">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.WriteMultiCard_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.AreaAntiPassback_Result">
            <summary>
            区域防潜回 参数
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.ReadAreaAntiPassback">
            <summary>
            读取 区域防潜回
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.ReadAreaAntiPassback.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.ReadAreaAntiPassback.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.ReadAreaAntiPassback.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback">
            <summary>
            设置区域防潜回功能
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">包括门号和出门按钮功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter">
            <summary>
            设置区域防潜回
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.Use">
            <summary>
            功能开启 (1)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.Type">
            <summary>
            从属类别 (1)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.SN">
            <summary>
            主机SN  (16)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.IP">
            <summary>
            主机IP地址 (4)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.Port">
            <summary>
            主机端口 (2)
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.#ctor">
            <summary>
            提供给 AreaAntiPassback_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.#ctor(System.Byte,System.Boolean,System.Boolean,System.String,System.Byte[],System.UInt16)">
            <summary>
            初始化参数
            </summary>
            <param name="door">门号</param>
            <param name="use">功能开启</param>
            <param name="type">从属类别</param>
            <param name="sn">主机SN</param>
            <param name="ip">主机IP地址</param>
            <param name="port">主机端口</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.AreaAntiPassback.WriteAreaAntiPassback_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.InterLockSetting_Result">
            <summary>
            区域互锁 参数
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.ReadInterLockSetting">
            <summary>
            读取区域互锁
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.ReadInterLockSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.ReadInterLockSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.ReadInterLockSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting">
            <summary>
            设置 区域互锁
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value">包括门号和出门按钮功能</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter">
            <summary>
            写入区域互锁
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.Use">
            <summary>
            功能开启 (1)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.Type">
            <summary>
            从属类别 (1)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.AreaCode">
            <summary>
            区域代码  (16)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.Num">
            <summary>
            从机序号
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.IP">
            <summary>
            主机IP地址 (4)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.Port">
            <summary>
            主机IP端口 (2)
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.#ctor">
            <summary>
            提供给 InterLockSetting_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.#ctor(System.Byte,System.Boolean,System.Boolean,System.Int32,System.Byte,System.Byte[],System.UInt16)">
            <summary>
            
            </summary>
            <param name="door">门号</param>
            <param name="use">功能开启</param>
            <param name="type">从属类别</param>
            <param name="areacode">区域代码</param>
            <param name="num">从机序号</param>
            <param name="ip">主机IP地址</param>
            <param name="port">主机IP端口</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.InterLockSetting.WriteInterLockSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.ReaderAlarm_Result">
            <summary>
            读卡器防拆报警 返回结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.ReadReaderAlarm">
            <summary>
            读取 读卡器防拆报警
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.ReadReaderAlarm.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.ReadReaderAlarm.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.ReadReaderAlarm.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm">
            <summary>
            写入 读卡器防拆报警
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter">
            <summary>
            读卡器防拆报警
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter.Use">
            <summary>
            功能开启 (1)
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter.#ctor">
            <summary>
            提供给继承类使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter.#ctor(System.Byte,System.Byte)">
            <summary>
            初始化参数
            </summary>
            <param name="door">门号</param>
            <param name="use">功能开启</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter.GetDataLen">
            <summary>
            获取长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.ReaderAlarm.WriteReaderAlarm_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.DoorDetail`1">
            <summary>
            表示门的数值详情
            </summary>
            <typeparam name="T">门数值类型</typeparam>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorDetail`1.#ctor">
            <summary>
            初始化门详情数组
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorDetail`1.GetDoor(System.Int32)">
            <summary>
            获取门数值
            </summary>
            <param name="Index">门索引号，起始序号为1，最大值为4</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorDetail`1.SetDoor(System.Int32,`0)">
            <summary>
            设置1-4门 权限
            </summary>
            <param name="Index">门索引号，起始序号为1，最大值为4</param>
            <param name="Value">值</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter">
            <summary>
            门号参数，取值范围 1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter.Door">
            <summary>
             门索引号
             取值范围 1-4
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter.#ctor(System.Int32)">
            <summary>
            门号参数初始化实例
            </summary>
            <param name="iDoor"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter.checkedParameter">
            <summary>
            检查参数的统一接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter.Dispose">
            <summary>
            释放资源时由上层调用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter.GetDataLen">
            <summary>
            指示此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadHolidayDetail">
            <summary>
            从控制板中读取节假日存储详情，命令成功后返回 ReadHolidayDetail_Result
            </summary> 
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadHolidayDetail.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            构造命令，无需其他参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadHolidayDetail.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadHolidayDetail.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadHolidayDetail_Result">
            <summary>
            ReadHolidayDetail 指令的结果返回，保存控制器中存储的节假日详情
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadHolidayDetail_Result.Detail">
            <summary>
            控制器中存储的节假日详情
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadHolidayDetail_Result.#ctor">
            <summary>
            初始化，构造一个空的 HolidayDBDetail 详情实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadHolidayDetail_Result.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲区反序列化到实例
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadHolidayDetail_Result.Dispose">
            <summary>
            释放使用的资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.ClearHoliday">
            <summary>
            清空控制器中的所有节假日
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ClearHoliday.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            构造命令，无需其他参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ClearHoliday.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ClearHoliday.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday">
            <summary>
            读取控制板中已存储的所有节假日<br/>
            读取成功返回 ReadAllHoliday_Result
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday.mReadBuffers">
            <summary>
            读取到的节假日缓冲
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            构造命令，无需其他参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday.CheckResponseOK(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测下一包指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday.CheckResponseCompleted(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测结束指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday.CommandReSend">
            <summary>
            命令重发时，对命令中一些缓冲做清空或参数重置<br/>
            此命令一般情况下不需要实现！
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday.ClearBuf">
            <summary>
            清空缓冲区
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday_Result">
            <summary>
            ReadAllHoliday 命令的返回值<br/>
            保存已读取到的所有节假日的集合
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday_Result.Count">
            <summary>
            已读取到的节假日数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday_Result.Holidays">
            <summary>
            已读取到的节假日列表
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday_Result.#ctor">
            <summary>
            初始化，构造一个空的 HolidayDBDetail 详情实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday_Result.SetBytes(System.Int32,System.Collections.Generic.List{DotNetty.Buffers.IByteBuffer})">
            <summary>
            将字节缓冲区反序列化到实例
            </summary>
            <param name="iTotal">预计从缓冲区中解码出的最大数量</param>
            <param name="databufs">字节缓冲区列表</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.ReadAllHoliday_Result.Dispose">
            <summary>
            释放使用的资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday">
            <summary>
            添加节假日到控制版
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="par"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday_Parameter">
            <summary>
            添加节假日参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday_Parameter.ListHoliday">
            <summary>
            节假日集合
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDetail})">
            <summary>
            初始化参数
            </summary>
            <param name="list">节假日集合</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday_Parameter.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday_Parameter.GetDataLen">
            <summary>
            获取写入参数长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.AddHoliday_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            没有实现
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday">
            <summary>
            从控制器删除节假日
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="par"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday_Parameter">
            <summary>
            删除节假日参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday_Parameter.ListHoliday">
            <summary>
            删除节假日集合
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDetail})">
            <summary>
            初始化参数
            </summary>
            <param name="list">删除节假日集合</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将 节假日参数 编码到字节流
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday_Parameter.GetDataLen">
            <summary>
            获取写入参数的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.DeleteHoliday_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDBDetail">
            <summary>
            控制器中存储的节假日详情
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDBDetail.Capacity">
            <summary>
            控制器中可以存储的最大容量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDBDetail.Count">
            <summary>
            控制器中已存储的数量
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDBDetail.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲区反序列化到实例
            </summary>
            <param name="databuf">字节缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDetail">
            <summary>
            表示一个节假日
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDetail.Index">
            <summary>
            节假日的索引号
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDetail.Holiday">
            <summary>
            节假日日期
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDetail.HolidayType">
            <summary>
            节假日类型：<br/>
            1、上午 (00:00:00  -  11:59:59)<br/>
            2、下午 (12:00:00  -  23:59:59)<br/>
            3、全天 (00:00:00  -  23:59:59)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDetail.YearLoop">
            <summary>
            表示，是否每年循环
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDetail.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将实例序列化到字节缓冲区中
            </summary>
            <param name="databuf">字节缓冲区，需要预先分配好空间</param>
            <returns>保存有实例数据的缓冲区</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDetail.GetDataLen">
            <summary>
            将实例序列化到字节缓冲区中的长度
            </summary>
            <returns>字节缓冲区中的长度</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Holiday.HolidayDetail.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲区反序列化到实例
            </summary>
            <param name="databuf">字节缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail">
            <summary>
            读取密码容量信息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail.CheckResponseOK(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测下一包指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回通知
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail_Result">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail_Result.DataSize">
            <summary>
            排序数据区容量上限
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail_Result.PasswordSize">
            <summary>
            排序数据区已使用数量
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail_Result.#ctor">
            <summary>
            初始化，构造一个空的 HolidayDBDetail 详情实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail_Result.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲区反序列化到实例
            </summary>
            <param name="buf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadPasswordDetail_Result.Dispose">
            <summary>
            释放使用的资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.ClearPassword">
            <summary>
            清空所有密码
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ClearPassword.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            构造命令，无需其他参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ClearPassword.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ClearPassword.CreatePacket0">
            <summary>
            
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Base`1">
            <summary>
            从控制器读取所有密码
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Base`1.mReadBuffers">
            <summary>
            读取到的密码缓冲
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Base`1.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Base`1.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Base`1.CheckResponseNext(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测下一包指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Base`1.CheckResponseCompleted(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测结束指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Base`1.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Base`1.CreateResult(System.Collections.Generic.List{`0})">
            <summary>
            创建返回值
            </summary>
            <param name="passwordList"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Base`1.ClearBuf">
            <summary>
            清空缓冲区
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Result_Base`1">
            <summary>
            从控制器中读取的密码数据
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Result_Base`1.PasswordList">
            <summary>
            读取到的卡片列表
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Result_Base`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
            创建结构
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Result_Base`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword">
            <summary>
            从控制器读取所有密码
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword.CreateResult(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail})">
            <summary>
            创建返回值
            </summary>
            <param name="passwordList">控制器返回的密码集合</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Result">
            <summary>
            读取所有密码 结果
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.ReadAllPassword_Result.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail})">
            <summary>
            初始化参数
            </summary>
            <param name="passwordList">控制器返回的密码集合</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.AddPassword">
            <summary>
            Door88 将密码列表写入到控制器
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.AddPassword.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="par"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.AddPassword.WritePasswordBodyToBuf(DotNetty.Buffers.IByteBuffer,DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="password">要写入的密码</param>
            <param name="databuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.AddPassword.CreateCommandPacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.AddPassword.CreateResult(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail})">
            <summary>
            创建返回值
            </summary>
            <param name="passwordList">无法写入的密码列表</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.AddPassword.CheckResponseCompleted(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测结束指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.DeletePassword">
            <summary>
            Door88 将密码列表从控制器删除
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.DeletePassword.CreateCommandPacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.DeletePassword.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="par"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.DeletePassword.WritePasswordBodyToBuf(DotNetty.Buffers.IByteBuffer,DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="databuf"></param>
            <param name="password">要写入到缓冲区的密码</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.DeletePassword.CreateResult(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail})">
            <summary>
            没有实现
            </summary>
            <param name="passwordList"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.DeletePassword.CheckResponseCompleted(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测结束指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail">
            <summary>
            表示一个密码表
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.Password">
            <summary>
            密码信息
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.Door">
            <summary>
            端口
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.OpenTimes">
            <summary>
            开门次数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.Expiry">
            <summary>
            有效期
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.GetDoor(System.Int32)">
            <summary>
            获取指定门是否有权限
            </summary>
            <param name="iDoor">门号，取值范围：1-4</param>
            <returns>true 有权限，false 无权限</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.CompareTo(DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail)">
            <summary>
            判断是否相同
            </summary>
            <param name="other">要比较的密码</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            写入 要上传的密码信息
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.GetDeleteBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            写入 要删除的密码信息
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.GetDataLen">
            <summary>
            获取每个添加密码长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.GetDeleteDataLen">
            <summary>
            获取每个删除密码长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.ReadPassword(DotNetty.Buffers.IByteBuffer)">
            <summary>
            读取密码
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.WritePassword(DotNetty.Buffers.IByteBuffer)">
            <summary>
            写入密码
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            读取密码信息
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter">
            <summary>
            写入密码 参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail})">
            <summary>
            初始化参数
            </summary>
            <param name="list">要写入的密码集合</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter.checkedParameterItem(DoNetDrive.Protocol.Door.Door8800.Password.PasswordDetail)">
            <summary>
            检查每个密码
            </summary>
            <param name="password">密码信息</param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base`1">
            <summary>
            写密码列表的泛型抽象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base`1.PasswordList">
            <summary>
            要添加的密码集合
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
            创建 将密码列表写入到控制器或从控制器删除 指令的参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base`1.#ctor">
            <summary>
            提供给继承类使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base`1.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base`1.checkedParameterItem(`0)">
            <summary>
            检查每个密码
            </summary>
            <param name="password">密码信息</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base`1.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            不实现此功能
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base`1.GetDataLen">
            <summary>
            不实现此功能
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base`1.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            不实现此功能
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2">
            <summary>
            将密码列表写入到控制器
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.mParDataLen">
            <summary>
            1个写入参数长度
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.mDeleteDataLen">
            <summary>
            1个删除参数长度
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.mPar">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.mBatchCount">
            <summary>
            每次上传数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.mIndex">
            <summary>
            已上传数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.MaxBufSize">
            <summary>
            默认的缓冲区大小
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.maxCount">
            <summary>
            需要写入密码数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.mBufs">
            <summary>
            保存写入失败的数据缓冲区
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Password.Password_Parameter_Base{`0})">
            <summary>
            初始化命令结构 
            </summary>
            <param name="cd"></param>
            <param name="parameter">包含需要上传的密码列表参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.CreateCommandPacket0">
            <summary>
            继承类具体实现
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.WritePasswordToBuf(DotNetty.Buffers.IByteBuffer)">
            <summary>
            
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.WritePasswordBodyToBuf(DotNetty.Buffers.IByteBuffer,`0)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="databuf"></param>
            <param name="password">要写入到缓冲区的密码</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.CommandReSend">
            <summary>
            命令超时
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.CheckResponseCompleted(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测结束指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            重写父类对处理返回值的定义
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.Create_Result">
            <summary>
            创建命令成功返回值
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.CreateResult(System.Collections.Generic.List{`0})">
            <summary>
            创建返回值
            </summary>
            <param name="passwordList">控制器返回的密码集合</param>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2._Password">
            <summary>
            用来解析返回的错误密码数据
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.ReadPasswordByFailBuf(System.Collections.Generic.List{`0},DotNetty.Buffers.IByteBuffer)">
            <summary>
            从错误密码列表中读取一个错误密码，加入到passwordList中
            </summary>
            <param name="passwordList">错误密码列表</param>
            <param name="buf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Password.WritePasswordBase`2.IsWriteOver">
            <summary>
            检查是否已写完所有卡
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.ReadSN">
            <summary>
            获取控制器SN
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.ReadSN.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取控制器SN 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.ReadSN.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.ReadSN.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter">
            <summary>
            写入控制器SN_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter.SNBuf">
            <summary>
            SN的字节数组
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter.UDPBroadcast">
            <summary>
            命令是否用UDP广播发送？
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter.#ctor">
            <summary>
            使用默认构造函数初始化类
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter.#ctor(System.Byte[])">
            <summary>
            使用一个包含SN的数组初始化类
            </summary>
            <param name="_SN">SN的字节数组</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter.#ctor(System.String)">
            <summary>
            使用SN字符串初始化类
            </summary>
            <param name="_SN">SN字符串</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns>true 表示参数符合规则，false 表示参数不符合规则</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对SN参数进行编码
            </summary>
            <param name="databuf">需要填充参数结构的字节缓冲区</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter.GetDataLen">
            <summary>
            获取参数结构长度
            </summary>
            <returns>结构长度</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对SN参数进行解码
            </summary>
            <param name="databuf">包含参数结构的缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Result">
            <summary>
            获取控制器SN_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.WriteSN">
            <summary>
            写入控制器SN
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.WriteSN.DataStrt">
            <summary>
            命令数据中的前缀
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.WriteSN.DataEnd">
            <summary>
            命令数据中的后缀
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.WriteSN.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter)">
            <summary>
            写入控制器SN 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含SN数据</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.WriteSN.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            进行命令参数的检查
            </summary>
            <param name="value">命令包含的参数</param>
            <returns>true 表示检查通过，false 表示检查不通过</returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.WriteSN.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.WriteSN.GetCmdData">
            <summary>
            创建命令所需的命令数据<br/>
            将命令打包到ByteBuffer中
            </summary>
            <returns>包含命令数据的ByteBuffer</returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.WriteSN_Broadcast">
            <summary>
            广播写入控制器SN
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.WriteSN_Broadcast.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.SN_Parameter)">
            <summary>
            广播写入控制器SN 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含SN数据</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SN.WriteSN_Broadcast.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter">
            <summary>
            通讯密码
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter.Password">
            <summary>
            保存通讯密码的数组
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter.#ctor(System.String)">
            <summary>
            使用通讯密码初始化实例
            </summary>
            <param name="_PWD">通讯密码：十六进制字符串</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter.#ctor(System.Byte[])">
            <summary>
            使用字节数组初始化实例
            </summary>
            <param name="_PWD">表示通讯密码的字节数组</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            编码参数
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            解码参数
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Result">
            <summary>
            获取控制器通讯密码_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.ReadConnectPassword">
            <summary>
            获取控制器通讯密码
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.ReadConnectPassword.DataStrt">
            <summary>
            命令数据部分
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.ReadConnectPassword.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取控制器通讯密码 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.ReadConnectPassword.CreatePacket0">
            <summary>
            拼装命令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.ReadConnectPassword.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.ResetConnectPassword">
            <summary>
            重置控制器通讯密码
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.ResetConnectPassword.DataStrt">
            <summary>
            命令数据部分
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.ResetConnectPassword.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            重置控制器通讯密码 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.ResetConnectPassword.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.ResetConnectPassword.CreatePacket0">
            <summary>
            拼装命令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.WriteConnectPassword">
            <summary>
            设置控制器通讯密码
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.WriteConnectPassword.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.Password_Parameter)">
            <summary>
            设置控制器通讯密码 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含命令所需新的通讯密码</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.WriteConnectPassword.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ConnectPassword.WriteConnectPassword.CreatePacket0">
            <summary>
            拼装命令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.ReadTCPSetting">
            <summary>
            获取TCP参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.ReadTCPSetting.UDPBroadcast">
            <summary>
            命令是否使用广播
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.ReadTCPSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,System.Boolean)">
            <summary>
            获取TCP参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="bUDPBroadcast">命令是否使用广播</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.ReadTCPSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            
            </summary>
            <param name="cd"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.ReadTCPSetting.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.ReadTCPSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.ReadTCPSetting_Result">
            <summary>
            获取TCP参数_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail">
            <summary>
            TCP/IP信息
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mMAC">
            <summary>
            MAC地址
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mIP">
            <summary>
            IP地址 
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mIPMask">
            <summary>
            IP掩码
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mIPGateway">
            <summary>
            网关
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mDNS">
            <summary>
            DNS
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mDNSBackup">
            <summary>
            备用DNS
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mProtocolType">
            <summary>
            控制器网络协议类型：1--TCP  client （控制器就是 Client）;2--TCP Server（控制器就是 Server）
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mTCPPort">
            <summary>
            控制器使用的TCP端口
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mUDPPort">
            <summary>
            控制器使用的UDP端口
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mServerPort">
            <summary>
            控制器作为客户端时，目标服务器的端口
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mServerIP">
            <summary>
            控制器作为客户端时，目标服务器的IP
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mAutoIP">
            <summary>
            自动获得IP
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.mServerAddr">
            <summary>
            控制器作为客户端时，目标服务器的域名
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对IP信息参数进行编码
            </summary>
            <param name="databuf">需要填充参数结构的字节缓冲区</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.SaveMACToByteBuf(System.String,DotNetty.Buffers.IByteBuffer)">
            <summary>
            MAC地址从结构转换成数组字节
            </summary>
            <param name="mac">MAC地址</param>
            <param name="buf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.CheckMAC(System.String)">
            <summary>
            检查MAC地址
            </summary>
            <param name="mac">检查MAC地址</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.SaveIPToByteBuf(System.String,DotNetty.Buffers.IByteBuffer)">
            <summary>
            IP地址及与之相同格式的结构转换成数组字节
            </summary>
            <param name="IP">IP地址</param>
            <param name="buf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.CheckIP(System.String)">
            <summary>
            检查IP地址及与之相同格式数据
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.Save0toByteBuf(DotNetty.Buffers.IByteBuffer,System.Int32)">
            <summary>
            写入字节
            </summary>
            <param name="buf"></param>
            <param name="iCount"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.GetDataLen">
            <summary>
            字节长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对IP信息参数进行解码
            </summary>
            <param name="databuf">包含参数结构的缓冲区</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail.ReadIPByByteBuf(DotNetty.Buffers.IByteBuffer,System.Text.StringBuilder)">
            <summary>
            字节转换成字符串
            </summary>
            <param name="data">包含参数结构的缓冲区</param>
            <param name="strbuilder">字符串</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting">
            <summary>
            设置TCP参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter)">
            <summary>
            设置控制器TCP参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含TCP参数信息</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter">
            <summary>
            设置TCP参数_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter.TCP">
            <summary>
            TCP参数信息
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter.UDPBroadcast">
            <summary>
            命令是否用UDP广播发送？
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter.#ctor">
            <summary>
            提供给 ReadTCPSetting_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.TCPDetail)">
            <summary>
            使用TCP参数信息初始化实例
            </summary>
            <param name="_TCP">TCP参数信息</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            编码参数
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPSetting.WriteTCPSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            解码参数
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.ReadDeadline">
            <summary>
            获取设备有效期
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.ReadDeadline.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.ReadDeadline.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.ReadDeadline.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.ReadDeadline_Result">
            <summary>
            获取设备有效期_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline">
            <summary>
            设置设备有效期
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline_Parameter)">
            <summary>
            设置设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含设备有效期</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline_Parameter">
            <summary>
            设置设备有效期_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline_Parameter.Deadline">
            <summary>
            设备有效期
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline_Parameter.#ctor(System.UInt16)">
            <summary>
            使用设备有效期初始化实例
            </summary>
            <param name="_Deadline">设备有效期</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对有效期参数进行编码
            </summary>
            <param name="databuf">需要填充参数结构的字节缓冲区</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Deadline.WriteDeadline_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对有效期参数进行解码
            </summary>
            <param name="databuf">包含参数结构的缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Version.ReadVersion">
            <summary>
            获取设备版本号
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Version.ReadVersion.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备版本号 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Version.ReadVersion.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Version.ReadVersion.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Version.ReadVersion_Result">
            <summary>
            获取设备版本号_结果
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Version.ReadVersion_Result.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Version.ReadVersion_Result.CorrectionNumber">
            <summary>
            修正号
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Version.ReadVersion_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Version.ReadVersion_Result.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对设备版本号参数进行解码
            </summary>
            <param name="databuf">包含参数结构的缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus">
            <summary>
            获取设备运行信息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备运行信息 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus_Result">
            <summary>
            获取设备运行信息_结果
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus_Result.RunDay">
            <summary>
            系统运行天数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus_Result.FormatCount">
            <summary>
            格式化次数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus_Result.RestartCount">
            <summary>
            看门狗复位次数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus_Result.UPS">
            <summary>
            UPS供电状态（0 - 表示电源取电；1 - 表示UPS供电）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus_Result.Temperature">
            <summary>
            系统温度
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus_Result.StartTime">
            <summary>
            上电时间
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus_Result.Voltage">
            <summary>
            电压
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus_Result.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对设备运行信息进行解码
            </summary>
            <param name="databuf">包含设备运行信息结构的缓冲区</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SystemStatus.ReadSystemStatus_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadRecordMode">
            <summary>
            获取记录存储方式
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadRecordMode.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadRecordMode.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadRecordMode.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadRecordMode_Result">
            <summary>
            获取记录存储方式_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode">
            <summary>
            设置记录存储方式
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode_Parameter)">
            <summary>
            设置记录存储方式 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含记录存储方式</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode_Parameter">
            <summary>
            设置记录存储方式_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode_Parameter.Mode">
            <summary>
            记录存储方式（0 - 满循环、1 - 满不循环）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode_Parameter.#ctor(System.Byte)">
            <summary>
            使用记录存储方式初始化实例
            </summary>
            <param name="_Mode">记录存储方式</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对记录存储方式参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteRecordMode_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对记录存储方式参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadKeyboard">
            <summary>
            获取读卡器密码键盘启用功能开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadKeyboard.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadKeyboard.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadKeyboard.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadKeyboard_Result">
            <summary>
            获取读卡器密码键盘启用功能开关_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard">
            <summary>
            设置读卡器密码键盘启用功能开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter)">
            <summary>
            设置读卡器密码键盘启用功能开关 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含读卡器密码键盘启用功能开关</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter">
            <summary>
            设置读卡器密码键盘启用功能开关_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter.Keyboard">
            <summary>
            读卡器密码键盘启用功能开关（0 - 关闭、1 - 开启）（Bit0 - 1号读头、Bit1 - 2号读头、Bit2 - 3号读头、Bit3 - 4号读头、Bit4 - 5号读头、Bit5 - 6号读头、Bit6 - 7号读头、Bit7 - 8号读头）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter.#ctor(System.Collections.BitArray)">
            <summary>
            使用读卡器密码键盘启用功能开关初始化实例
            </summary>
            <param name="_Keyboard">读卡器密码键盘启用功能开关</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对读卡器密码键盘启用功能开关参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter.BitToByte(System.Collections.BitArray)">
            <summary>
            BitArray转byte
            </summary>
            <param name="Keyboard"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteKeyboard_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对读卡器密码键盘启用功能开关参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadLockInteraction">
            <summary>
            获取互锁参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadLockInteraction.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadLockInteraction.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadLockInteraction.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadLockInteraction_Result">
            <summary>
            获取互锁参数_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction">
            <summary>
            设置互锁参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction_Parameter)">
            <summary>
            设置互锁参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含互锁参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction_Parameter">
            <summary>
            设置互锁参数_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction_Parameter.DoorPort">
            <summary>
            互锁参数信息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorPortDetail)">
            <summary>
            使用互锁参数信息初始化实例
            </summary>
            <param name="_DoorPort">互锁参数信息</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对互锁参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteLockInteraction_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对互锁参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadFireAlarmOption">
            <summary>
            获取消防报警参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadFireAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadFireAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadFireAlarmOption.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadFireAlarmOption_Result">
            <summary>
            获取消防报警参数_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption">
            <summary>
            设置消防报警参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption_Parameter)">
            <summary>
            设置消防报警参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含消防报警参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption_Parameter">
            <summary>
            设置消防报警参数_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption_Parameter.Option">
            <summary>
            消防报警参数（0 - 不启用、1 - 报警输出，并开所有门，只能软件解除、2 - 报警输出，不开所有门，只能软件解除、3 - 有信号报警并开门，无信号解除报警并关门、4 - 有报警信号时开一次门，就像按钮开门一样）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption_Parameter.#ctor(System.Byte)">
            <summary>
            使用消防报警参数初始化实例
            </summary>
            <param name="_Option">消防报警参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对消防报警参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteFireAlarmOption_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对消防报警参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadOpenAlarmOption">
            <summary>
            获取匪警报警参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadOpenAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadOpenAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadOpenAlarmOption.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadOpenAlarmOption_Result">
            <summary>
            获取匪警报警参数_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption">
            <summary>
            设置匪警报警参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption_Parameter)">
            <summary>
            设置匪警报警参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含匪警报警参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption_Parameter">
            <summary>
            设置匪警报警参数_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption_Parameter.Option">
            <summary>
            匪警报警参数（0 - 关闭此功能、1 - 所有门锁定，报警输出，蜂鸣器不响。不开门，刷卡不能解除，软件解除，解除报警后门的锁定也解锁了、2 - 报警输出，不锁定，蜂鸣器响。不开门，刷卡可以解除，软件可以解除、3 - 按报警按钮就报警，门锁定，并输出，不按时就停止。不开门，按钮停止时就解除，软件或刷卡不能解除。按报警按钮的时候门是处于锁定状态的，不按时解除锁定状态）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption_Parameter.#ctor(System.Byte)">
            <summary>
            使用匪警报警参数初始化实例
            </summary>
            <param name="_Option">匪警报警参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对匪警报警参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteOpenAlarmOption_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对匪警报警参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReaderIntervalTime">
            <summary>
            获取读卡间隔时间
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReaderIntervalTime.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReaderIntervalTime.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReaderIntervalTime.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReaderIntervalTime_Result">
            <summary>
            获取读卡间隔时间_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime">
            <summary>
            设置读卡间隔时间
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime_Parameter)">
            <summary>
            设置读卡间隔时间 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含读卡间隔时间</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime_Parameter">
            <summary>
            设置读卡间隔时间_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime_Parameter.IntervalTime">
            <summary>
            读卡间隔时间，最大65535秒，0表示无限制
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime_Parameter.#ctor(System.UInt16)">
            <summary>
            使用读卡间隔时间参数初始化实例
            </summary>
            <param name="_IntervalTime">读卡间隔时间</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对读卡间隔时间参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderIntervalTime_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对读卡间隔时间参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadBroadcast">
            <summary>
            获取语音播报语音段开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadBroadcast.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadBroadcast.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadBroadcast.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadBroadcast_Result">
            <summary>
            获取语音播报语音段开关_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast">
            <summary>
            设置语音播报语音段开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast_Parameter)">
            <summary>
            设置语音播报语音段开关 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含音播报语音段开关</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast_Parameter">
            <summary>
            设置语音播报语音段开关_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast_Parameter.Broadcast">
            <summary>
            语音播报语音段开关（语音段对照可参考《Door8800语音表》 每个开关true 表示启用，false 表示禁用）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast_Parameter.#ctor(System.Byte[])">
            <summary>
            使用语音播报语音段开关参数初始化实例
            </summary>
            <param name="data">语音播报语音段开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对语音播报语音段开关参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBroadcast_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对语音播报语音段开关参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReaderCheckMode">
            <summary>
            获取读卡器数据校验
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReaderCheckMode.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取读卡器数据校验 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReaderCheckMode.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReaderCheckMode.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReaderCheckMode_Result">
            <summary>
            获取读卡器数据校验_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode">
            <summary>
            设置读卡器数据校验
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode_Parameter)">
            <summary>
            设置读卡器数据校验 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含读卡器数据校验</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode_Parameter">
            <summary>
            设置读卡器数据校验_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode_Parameter.ReaderCheckMode">
            <summary>
            读卡器数据校验（0不启用，1启用，2启用校验，但不提示非法数据或线路异常）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode_Parameter.#ctor(System.Byte)">
            <summary>
            使用读卡器数据校验初始化实例
            </summary>
            <param name="_ReaderCheckMode">读卡器数据校验</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对读卡器数据校验参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReaderCheckMode_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对读卡器数据校验参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadBuzzer">
            <summary>
            获取主板蜂鸣器
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadBuzzer.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取主板蜂鸣器 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadBuzzer.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadBuzzer.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadBuzzer_Result">
            <summary>
            获取主板蜂鸣器_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer">
            <summary>
            设置主板蜂鸣器
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer_Parameter)">
            <summary>
            设置主板蜂鸣器 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含主板蜂鸣器</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer_Parameter">
            <summary>
            设置主板蜂鸣器_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer_Parameter.Buzzer">
            <summary>
            主板蜂鸣器（0不启用，1启用）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer_Parameter.#ctor(System.Byte)">
            <summary>
            使用主板蜂鸣器初始化实例
            </summary>
            <param name="_Buzzer">主板蜂鸣器</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对主板蜂鸣器参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteBuzzer_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对主板蜂鸣器参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadSmogAlarmOption">
            <summary>
            获取烟雾报警参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadSmogAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取烟雾报警参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadSmogAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadSmogAlarmOption.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadSmogAlarmOption_Result">
            <summary>
            获取烟雾报警参数_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption">
            <summary>
            设置烟雾报警参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption_Parameter)">
            <summary>
            设置烟雾报警参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含烟雾报警参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption_Parameter">
            <summary>
            设置烟雾报警参数_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption_Parameter.Option">
            <summary>
            烟雾报警参数（0 - 关闭此功能（默认）、1 - 驱动 [烟雾报警继电器]，(信号有，就驱动的，信号无，就关闭)、2 - 驱动烟雾报警继电器并驱动所有门继电器，主板报警提示音响(开启后由软件关闭，或重启。)、3 - 驱动烟雾报警继电器并锁定所有门，主板报警提示音响(开启后由软件关闭，或重启。)）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption_Parameter.#ctor(System.Byte)">
            <summary>
            使用烟雾报警参数初始化实例
            </summary>
            <param name="_Option">烟雾报警参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对烟雾报警参数进行解码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteSmogAlarmOption_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对烟雾报警参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadEnterDoorLimit">
            <summary>
            获取门内人数限制
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadEnterDoorLimit.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取门内人数限制 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadEnterDoorLimit.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadEnterDoorLimit.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadEnterDoorLimit_Result">
            <summary>
            获取门内人数限制_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit">
            <summary>
            设置门内人数限制
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit_Parameter)">
            <summary>
            设置门内人数限制 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门内人数限制</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit_Parameter">
            <summary>
            设置门内人数限制_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit_Parameter.Limit">
            <summary>
            门内人数限制信息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorLimit)">
            <summary>
            使用门内人数限制初始化实例
            </summary>
            <param name="_Limit">门内人数限制信息</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对门内人数限制参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteEnterDoorLimit_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对门内人数限制参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadTheftAlarmSetting">
            <summary>
            获取智能防盗主机参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadTheftAlarmSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取智能防盗主机参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadTheftAlarmSetting.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadTheftAlarmSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadTheftAlarmSetting_Result">
            <summary>
            获取智能防盗主机参数_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting">
            <summary>
            设置智能防盗主机参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting_Parameter)">
            <summary>
            设置智能防盗主机参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含智能防盗主机参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting_Parameter">
            <summary>
            设置智能防盗主机参数_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting_Parameter.Setting">
            <summary>
            防盗报警参数信息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.TheftAlarmSetting)">
            <summary>
            使用防盗报警参数信息初始化实例
            </summary>
            <param name="_Setting">防盗报警参数信息</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对防盗报警参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteTheftAlarmSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对防盗报警参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCheckInOut">
            <summary>
            获取防潜回模式
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCheckInOut.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取防潜回模式 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCheckInOut.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCheckInOut.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCheckInOut_Result">
            <summary>
            获取防潜回模式_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut">
            <summary>
            设置防潜回模式
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut_Parameter)">
            <summary>
            设置防潜回模式 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含防潜回模式参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut_Parameter">
            <summary>
            设置防潜回模式_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut_Parameter.Mode">
            <summary>
            防潜回模式（01--单独每个门检测防潜回；02--整个控制器统一防潜回）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut_Parameter.#ctor(System.Byte)">
            <summary>
            使用防潜回模式初始化实例
            </summary>
            <param name="_Mode">防潜回模式</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对防潜回模式参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCheckInOut_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对防潜回模式参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardPeriodSpeak">
            <summary>
            获取卡片到期提示
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardPeriodSpeak.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取卡片到期提示 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardPeriodSpeak.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardPeriodSpeak.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardPeriodSpeak_Result">
            <summary>
            获取卡片到期提示_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak">
            <summary>
            设置卡片到期提示
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak_Parameter)">
            <summary>
            设置卡片到期提示 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含卡片到期提示参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak_Parameter">
            <summary>
            设置卡片到期提示_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak_Parameter.Use">
            <summary>
            卡片到期提示（是否启用，0不启用，1启用）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak_Parameter.#ctor(System.Byte)">
            <summary>
            使用卡片到期提示参数初始化实例
            </summary>
            <param name="_Use">卡片到期提示参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对卡片到期提示参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteCardPeriodSpeak_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对卡片到期提示参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReadCardSpeak">
            <summary>
            获取定时读卡播报语音消息参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReadCardSpeak.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取定时读卡播报语音消息参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReadCardSpeak.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReadCardSpeak.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadReadCardSpeak_Result">
            <summary>
            获取定时读卡播报语音消息参数_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak">
            <summary>
            设置定时读卡播报语音消息参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak_Parameter)">
            <summary>
            设置定时读卡播报语音消息参数 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含定时读卡播报语音消息参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak.CreatePacket0">
            <summary>
            拼装命令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak_Parameter">
            <summary>
            设置定时读卡播报语音消息参数_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak_Parameter.SpeakSetting">
            <summary>
            定时读卡播报语音消息参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardSpeak)">
            <summary>
            使用定时读卡播报语音消息参数初始化实例
            </summary>
            <param name="_SpeakSetting">定时读卡播报语音消息参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对定时读卡播报语音消息参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.WriteReadCardSpeak_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对定时读卡播报语音消息参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.BroadcastDetail">
            <summary>
            语音段开关_模型
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.BroadcastDetail.Broadcast">
            <summary>
            语音段开关的字节数组
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.BroadcastDetail.#ctor">
            <summary>
            定义语音段开关的字节数组的长度
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.BroadcastDetail.#ctor(System.Byte[])">
            <summary>
            语音段开关的字节数组信息
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting">
            <summary>
            获取所有系统参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting.CreatePacket0">
            <summary>
            拼装命令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result">
            <summary>
            获取所有系统参数_结果
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.RecordMode">
            <summary>
            记录存储方式（0是满循环，1表示满不循环）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.Keyboard">
            <summary>
            读卡器密码键盘启用功能开关（Bit0 - 1号读头、Bit1 - 2号读头、Bit2 - 3号读头、Bit3 - 4号读头、Bit4 - 5号读头、Bit5 - 6号读头、Bit6 - 7号读头、Bit7 - 8号读头）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.LockInteraction">
            <summary>
            互锁功能开关，4个门的互锁状态，各门端口的取值（0 - 不启用互锁功能、1 - 已启用互锁功能）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.FireAlarmOption">
            <summary>
            消防报警功能参数（0 - 不启用、1 - 报警输出，并开所有门，只能软件解除、2 - 报警输出，不开所有门，只能软件解除、3 - 有信号报警并开门，无信号解除报警并关门、4 - 有报警信号时开一次门，就像按钮开门一样）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.OpenAlarmOption">
            <summary>
            匪警报警功能参数（0 - 关闭此功能、1 - 所有门锁定，报警输出，蜂鸣器不响。不开门，刷卡不能解除，软件解除，解除报警后门的锁定也解锁了、2 - 报警输出，不锁定，蜂鸣器响。不开门，刷卡可以解除，软件可以解除、3 - 按报警按钮就报警，门锁定，并输出，不按时就停止。不开门，按钮停止时就解除，软件或刷卡不能解除。按报警按钮的时候门是处于锁定状态的，不按时解除锁定状态）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.ReaderIntervalTime">
            <summary>
            读卡间隔时间（0表示无限制，最大65535秒）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.SpeakOpen">
            <summary>
            语音播报开关（语音段对照可参考《Door8800语音表》 每个开关true 表示启用，false 表示禁用）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.ReaderCheckMode">
            <summary>
            读卡器校验（0不启用，1启用，2启用校验，但不提示非法数据或线路异常）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.BuzzerMode">
            <summary>
            主板蜂鸣器（0不启用，1启用）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.SmogAlarmOption">
            <summary>
            烟雾报警功能参数（0 - 关闭此功能（默认）、1 - 驱动 [烟雾报警继电器]，(信号有，就驱动的，信号无，就关闭)、2 - 驱动烟雾报警继电器并驱动所有门继电器，主板报警提示音响(开启后由软件关闭，或重启。)、3 - 驱动烟雾报警继电器并锁定所有门，主板报警提示音响(开启后由软件关闭，或重启。)）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.EnterDoorLimit">
            <summary>
            门内人数限制，上限值：0--表示不受限制，全局上限优先级最高，全局上限如果大于 0 则设备使用全局上限   例如：全局上限为100,1门上限为50,2门上限为100,。。。。4门上限为1000，设备将使用全局上限100，即整个主板上进入数不能超过100，此数据重启后清空
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.TheftAlarmPar">
            <summary>
            防盗主机
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.CheckInOut">
            <summary>
            防潜回功能参数（01--单独每个门检测防潜回；02--整个控制器统一防潜回）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.CardPeriodSpeak">
            <summary>
            卡片到期提示（0不启用，1启用）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.ReadCardSpeak">
            <summary>
            定时播报
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.#ctor(System.Int16,System.Int16,DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorPortDetail,System.Int16,System.Int16,System.Int32,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.BroadcastDetail,System.Int16,System.Int16,System.Int16,DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorLimit,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.TheftAlarmSetting,System.Int16,System.Int16,DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardSpeak)">
            <summary>
            初始化参数
            </summary>
            <param name="_RecordMode">记录存储方式</param>
            <param name="_Keyboard">读卡器密码键盘启用功能开关</param>
            <param name="_LockInteraction">互锁功能开关</param>
            <param name="_FireAlarmOption">消防报警功能参数</param>
            <param name="_OpenAlarmOption">匪警报警功能参数</param>
            <param name="_ReaderIntervalTime">读卡间隔时间</param>
            <param name="_SpeakOpen">语音播报开关</param>
            <param name="_ReaderCheckMode">读卡器校验</param>
            <param name="_BuzzerMode">主板蜂鸣器</param>
            <param name="_SmogAlarmOption">烟雾报警功能参数</param>
            <param name="_EnterDoorLimit">门内人数限制</param>
            <param name="_TheftAlarmPar">防盗主机</param>
            <param name="_CheckInOut">防潜回功能参数</param>
            <param name="_CardPeriodSpeak">卡片到期提示</param>
            <param name="_ReadCardSpeak">定时播报</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadAllSystemSetting_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardSpeak">
            <summary>
            定时读卡播报语音消息参数_模型
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardSpeak.Use">
            <summary>
            是否启用（0 - 不启用、1 - 启用）
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardSpeak.MsgIndex">
            <summary>
            消息编号（1 - 交房租、2 - 交管理费）
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardSpeak.BeginDate">
            <summary>
            起始时段 年月日时 BCD码，例：0x11120115，表示11年12月1日15点 最大不得超过2099年
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.ReadCardSpeak.EndDate">
            <summary>
            结束时段  最大不得超过2099年
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.TheftAlarmSetting">
            <summary>
            防盗报警参数_模型
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.TheftAlarmSetting.Use">
            <summary>
            是否启用（0 - 不启用、1 - 启用）
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.TheftAlarmSetting.InTime">
            <summary>
            进入延迟；单位：秒，取值：1-255
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.TheftAlarmSetting.OutTime">
            <summary>
            退出延迟；单位：秒，取值：1-255
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.TheftAlarmSetting.BeginPassword">
            <summary>
            布防密码；8个数字。空补F。例如密码：23412；表达为：0xFFF23412
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.TheftAlarmSetting.ClosePassword">
            <summary>
            撤防密码；8个数字。空补F。例如密码：23412；表达为：0xFFF23412
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FunctionParameter.TheftAlarmSetting.AlarmTime">
            <summary>
            报警时长；单位：秒 ,取值：0-65535
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.BeginWatch">
            <summary>
            开启数据监控
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.BeginWatch.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取开启数据监控 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.BeginWatch.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.BeginWatch.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.BeginWatch_Broadcast">
            <summary>
            广播开启监控
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.BeginWatch_Broadcast.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取广播开启监控 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.BeginWatch_Broadcast.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.BeginWatch_Broadcast.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.CloseWatch">
            <summary>
            关闭数据监控
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.CloseWatch.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            关闭数据监控 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.CloseWatch.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.CloseWatch.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.CloseWatch_Broadcast">
            <summary>
            广播关闭监控
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.CloseWatch_Broadcast.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            广播关闭监控 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.CloseWatch_Broadcast.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.CloseWatch_Broadcast.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.ReadWatchState">
            <summary>
            读取实时监控状态
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.ReadWatchState.WatchState">
            <summary>
            实时监控状态（0 - 未开启监控、1 - 已开启监控）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.ReadWatchState.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.ReadWatchState.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Watch.ReadWatchState.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.CloseFireAlarm">
            <summary>
            解除消防报警
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.CloseFireAlarm.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            解除消防报警 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.CloseFireAlarm.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.CloseFireAlarm.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.ReadFireAlarmState">
            <summary>
            读取消防报警状态
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.ReadFireAlarmState.FireAlarmState">
            <summary>
            消防报警状态（0 - 未开启报警、1 - 已开启报警）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.ReadFireAlarmState.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            读取消防报警状态 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.ReadFireAlarmState.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.ReadFireAlarmState.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.SendFireAlarm">
            <summary>
            通知设备触发消防报警
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.SendFireAlarm.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            通知设备触发消防报警 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.SendFireAlarm.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.FireAlarm.SendFireAlarm.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.CloseSmogAlarm">
            <summary>
            解除烟雾报警
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.CloseSmogAlarm.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            解除烟雾报警 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.CloseSmogAlarm.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.CloseSmogAlarm.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.ReadSmogAlarmState">
            <summary>
            获取烟雾报警状态
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.ReadSmogAlarmState.SmogAlarmState">
            <summary>
            烟雾报警状态（0 - 未开启报警、1 - 已开启报警）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.ReadSmogAlarmState.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取烟雾报警状态 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.ReadSmogAlarmState.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.ReadSmogAlarmState.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.SendSmogAlarm">
            <summary>
            通知设备触发烟雾报警
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.SendSmogAlarm.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            通知设备触发烟雾报警 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.SendSmogAlarm.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SmogAlarm.SendSmogAlarm.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm">
            <summary>
            解除报警
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            解除报警 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含解除报警参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm_Parameter">
            <summary>
            解除报警_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm_Parameter.Door">
            <summary>
            需要解除报警的门，取值范围：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm_Parameter.Alarm">
            <summary>
            需要解除的报警类型（Bit0 - 非法卡报警、Bit1 - 门磁报警、Bit2 - 胁迫报警、Bit3 - 开门超时报警、Bit4 - 黑名单报警、Bit5 - 匪警报警、Bit6 - 防盗主机报警、Bit7 - 消防报警、Bit8 - 烟雾报警、Bit9 - 关闭电锁出错报警、Bit10 - 防拆报警、Bit11 - 强制关锁报警、Bit12 - 强制开锁报警）   注：9-12 为一体锁或一体机报警类型
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm_Parameter.#ctor(System.Byte,System.UInt16)">
            <summary>
            使用解除报警参数初始化实例
            </summary>
            <param name="_Door">需要解除报警的门</param>
            <param name="_Alarm">需要解除的报警类型</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对解除报警参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Alarm.CloseAlarm_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对解除报警参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadTheftAlarmState">
            <summary>
            获取防盗主机布防状态
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadTheftAlarmState.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取防盗主机布防状态 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadTheftAlarmState.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadTheftAlarmState.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadTheftAlarmState_Result">
            <summary>
            获取防盗主机布防状态_结果
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadTheftAlarmState_Result.TheftState">
            <summary>
            布防状态<br/>
            <ul>
            <li>1  延时布防</li>
            <li>2  已布防</li>
            <li>3  延时撤防</li>
            <li>4  未布防</li>
            <li>5  报警延时，准备启用报警</li>
            <li>6  防盗报警已启动</li>
            </ul>
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadTheftAlarmState_Result.TheftAlarm">
            <summary>
            防盗主机报警状态（0未报警，1已报警）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadTheftAlarmState_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadTheftAlarmState_Result.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对防盗主机布防状态参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus">
            <summary>
            获取控制器各端口工作状态信息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取控制器各端口工作状态信息 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result">
            <summary>
            控制器各端口工作状态信息_结果
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.RelayState">
            <summary>
            门继电器物理状态（0 - 表示COM和NC常闭、1 - 表示COM和NO常闭、2 - 表示继电器无法检测，继电器异常）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.DoorLongOpenState">
            <summary>
            运行状态（常开还是常闭，0表示常闭，1常开）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.DoorState">
            <summary>
            门磁开关（0表关，1表示开）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.DoorAlarmState">
            <summary>
            门报警状态（0 - 非法刷卡报警、1 - 门磁报警、2 - 胁迫报警、3 - 开门超时报警、4 - 黑名单报警）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.AlarmState">
            <summary>
            设备报警状态（0 - 匪警报警、1 - 防盗报警、2 - 消防报警、3 - 烟雾报警、4 - 消防报警(命令通知)）
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.LockState">
            <summary>
            继电器逻辑状态.
            继电器的逻辑开关状态
            
            0--继电器关；
            1--继电器开；
            2--双稳态；  
            
            门序号值说明
            1-4是表示门的继电器，这个继电器状态需要根据门的继电器类型判断真实物理状况或者根据第一组状态值【门继电器物理状态】判断。<br/>
            5-8是报警继电器，目前定义只有0或1两个状态。
            状态0表示：COM和NC导通
            状态1表示：COM和NO导通
            
            1-4  4个门的继电器
            5   消防继电器
            6   匪警继电器
            7   烟雾报警继电器
            8   防盗主机报警继电器
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.PortLockState">
            <summary>
            锁定状态.<br/>
            4个门，0--未锁定，1--锁定
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.WatchState">
            <summary>
            监控状态.<br/>
            0--未开启监控；1--开启监控
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.EnterTotal">
            <summary>
            门内人数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.TheftState">
            <summary>
            防盗主机布防状态<br/>
            
            1   延时布防
            2   已布防
            3   延时撤防
            4   未布防
            5   报警延时，准备启用报警
            6   防盗报警已启动
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.WorkStatus.ReadWorkStatus_Result.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对控制器各端口工作状态信息进行解码
            </summary>
            <param name="databuf">包含控制器各端口工作状态信息结构的缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Controller.FormatController">
            <summary>
            初始化控制器（控制器初始化后的数据状态：清空所有授权卡，清空所有节假日，清空所有开门时段，清空所有密码，清空所有记录，复位键盘密码，开锁保持时间为3秒）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Controller.FormatController.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化控制器 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Controller.FormatController.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Controller.FormatController.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor">
            <summary>
            搜索控制器--搜索不是指定网络标记的控制器
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter)">
            <summary>
            搜索控制器
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor.GetParameter">
            <summary>
            命令数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter">
            <summary>
            搜索控制器
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter.NetNum">
            <summary>
            网络标识 取值范围：1-65535
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter.UDPBroadcast">
            <summary>
            命令是否用UDP广播发送？
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter.#ctor(System.UInt16)">
            <summary>
            使用网络标识参数初始化实例
            </summary>
            <param name="_NetNum">网络标识参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对网络标识参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对网络标识参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result">
            <summary>
            获取搜索控制器_结果
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result._TCP">
            <summary>
            TCP参数
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result.SN">
            <summary>
            SN参数
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result.SNByte">
            <summary>
            SN的字节数组
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result.TCP">
            <summary>
            TCP
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result.#ctor">
            <summary>
            实例化TCP参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            参数编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result.SNIsAsciiString">
            <summary>
            SN 是否为可见字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Result.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对TCP参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.WriteControltorNetCode">
            <summary>
            根据SN设置网络标识
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.WriteControltorNetCode.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.SearchControltor_Parameter)">
            <summary>
            根据SN设置网络标识
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含网络标识参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.WriteControltorNetCode.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.SearchControltor.WriteControltorNetCode.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Parameter">
            <summary>
            缓存区内容操作
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Parameter.CacheContent">
            <summary>
            缓存区内容
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Parameter.#ctor(System.String)">
            <summary>
            使用缓存区内容初始化实例
            </summary>
            <param name="sCacheContent">缓存区内容</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对缓存区内容进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对缓存区内容进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Result">
            <summary>
            缓存区内容操作_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.ReadCacheContent">
            <summary>
            获取缓存区内容
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.ReadCacheContent.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取缓存区内容
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.ReadCacheContent.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.ReadCacheContent.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.WriteCacheContent">
            <summary>
            设置缓存区内容
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.WriteCacheContent.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.CacheContent_Parameter)">
            <summary>
            设置缓存区内容 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含缓存区内容</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.WriteCacheContent.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CacheContent.WriteCacheContent.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.ReadKeepAliveInterval">
            <summary>
            读取控制器作为客户端时，和服务器的保活间隔时间
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.ReadKeepAliveInterval.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取保活间隔时间 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.ReadKeepAliveInterval.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.ReadKeepAliveInterval.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.ReadKeepAliveInterval_Result">
            <summary>
            读取控制器作为客户端时，和服务器的保活间隔时间_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval">
            <summary>
            设置控制器作为客户端时，和服务器的保活间隔时间
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval_Parameter)">
            <summary>
            设置保活间隔时间 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含保活间隔时间</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval_Parameter">
            <summary>
            设置控制器作为客户端时，和服务器的保活间隔时间_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval_Parameter.IntervalTime">
            <summary>
            保活间隔时间（取值0-65535，单位秒。0表示不使用心跳保活间隔参数。）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval_Parameter.#ctor(System.UInt16)">
            <summary>
            使用保活间隔时间参数初始化实例
            </summary>
            <param name="_IntervalTime">保活间隔时间</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对保活间隔时间参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.KeepAliveInterval.WriteKeepAliveInterval_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对保活间隔时间参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TheftFortify.SetTheftDisarming">
            <summary>
            防盗报警撤防
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TheftFortify.SetTheftDisarming.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            防盗报警撤防
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TheftFortify.SetTheftDisarming.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TheftFortify.SetTheftDisarming.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令回应处理
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TheftFortify.SetTheftFortify">
            <summary>
            防盗报警布防
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TheftFortify.SetTheftFortify.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            防盗报警布防
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TheftFortify.SetTheftFortify.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TheftFortify.SetTheftFortify.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回通知
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.ReadBalcklistAlarmOption">
            <summary>
            获取黑名单报警功能开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.ReadBalcklistAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取黑名单报警功能开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.ReadBalcklistAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.ReadBalcklistAlarmOption.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.ReadBalcklistAlarmOption_Result">
            <summary>
            获取黑名单报警功能开关_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption">
            <summary>
            设置黑名单报警功能开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption_Parameter)">
            <summary>
            设置黑名单报警功能开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含黑名单报警功能开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption_Parameter">
            <summary>
            设置黑名单报警功能开关_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption_Parameter.Use">
            <summary>
            黑名单报警功能开关（0 - 关、1 - 开）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption_Parameter.#ctor(System.Byte)">
            <summary>
            使用黑名单报警功能开关参数初始化实例
            </summary>
            <param name="_Use">黑名单报警功能开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对黑名单报警功能开关参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.BalcklistAlarmOption.WriteBalcklistAlarmOption_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对黑名单报警功能开关参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.ReadExploreLockMode">
            <summary>
            获取防探测功能开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.ReadExploreLockMode.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取防探测功能开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.ReadExploreLockMode.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.ReadExploreLockMode.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.ReadExploreLockMode_Result">
            <summary>
            获取防探测功能开关_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode">
            <summary>
            设置防探测功能开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode_Parameter)">
            <summary>
            设置防探测功能开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含防探测功能开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode_Parameter">
            <summary>
            设置防探测功能开关_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode_Parameter.Use">
            <summary>
            防探测功能开关（0 - 关、1 - 开）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode_Parameter.#ctor(System.Byte)">
            <summary>
            使用防探测功能开关参数初始化实例
            </summary>
            <param name="_Use">防探测功能开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对防探测功能开关参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ExploreLockMode.WriteExploreLockMode_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对防探测功能开关参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.ReadCheck485Line">
            <summary>
            读取485线路反接检测开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.ReadCheck485Line.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            读取485线路反接检测开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.ReadCheck485Line.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.ReadCheck485Line.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.ReadCheck485Line_Result">
            <summary>
            读取485线路反接检测开关_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line">
            <summary>
            设置485线路反接检测开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line_Parameter)">
            <summary>
            设置485线路反接检测开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含485线路反接检测开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line_Parameter">
            <summary>
            设置485线路反接检测开关_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line_Parameter.Use">
            <summary>
            485线路反接检测开关（0 - 关、1 - 开）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line_Parameter.#ctor(System.Byte)">
            <summary>
            使用485线路反接检测开关参数初始化实例
            </summary>
            <param name="_Use">485线路反接检测开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对485线路反接检测开关参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.Check485Line.WriteCheck485Line_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对485线路反接检测开关参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.ReadTCPClientList">
            <summary>
            读取TCP客户端列表
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.ReadTCPClientList.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            读取TCP客户端列表
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.ReadTCPClientList.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.ReadTCPClientList.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.StopAllTCPClientConnection">
            <summary>
            强制断开所有连接
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.StopAllTCPClientConnection.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            强制断开所有连接
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.StopAllTCPClientConnection.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.StopAllTCPClientConnection.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.StopTCPClientConnection">
            <summary>
            强制断开TCP连接
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.StopTCPClientConnection.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Parameter)">
            <summary>
            强制断开TCP连接
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含强制断开TCP连接参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.StopTCPClientConnection.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.StopTCPClientConnection.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClientDetail">
            <summary>
            TCP客户端信息_模型
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClientDetail.TCPClientNum">
            <summary>
            客户端数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClientDetail.IP">
            <summary>
            IP
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClientDetail.TCPPort">
            <summary>
            端口
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClientDetail.ConnectTime">
            <summary>
            接入时间
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Parameter">
            <summary>
            强制断开TCP连接_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Parameter.tCPClientDetail">
            <summary>
            TCP客户端信息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClientDetail)">
            <summary>
            使用强制断开TCP连接参数初始化实例
            </summary>
            <param name="_TCPClientDetail">强制断开TCP连接参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对强制断开TCP连接参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对强制断开TCP连接参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.TCPClient.TCPClient_Result">
            <summary>
            获取TCP客户端列表_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.ReadCardDeadlineTipDay">
            <summary>
            获取有效期即将过期提醒时间
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.ReadCardDeadlineTipDay.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备有效期 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.ReadCardDeadlineTipDay.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.ReadCardDeadlineTipDay.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.ReadCardDeadlineTipDay_Result">
            <summary>
            获取有效期即将过期提醒时间_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay">
            <summary>
            设置有效期即将过期提醒时间
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            设置有效期即将过期提醒时间
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含有效期即将过期提醒时间</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay.CreatePacket0">
            <summary>
            拼装命令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay_Parameter">
            <summary>
            设置有效期即将过期提醒时间_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay_Parameter.Day">
            <summary>
            有效期即将过期提醒时间（取值范围: 1-255。0--表示关闭;默认值是30天）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay_Parameter.#ctor(System.Byte)">
            <summary>
            有效期即将过期提醒时间初始化实例
            </summary>
            <param name="_Day">有效期即将过期提醒时间</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对有效期即将过期提醒时间参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.CardDeadlineTipDay.WriteCardDeadlineTipDay_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对有效期即将过期提醒时间参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.ReadControlPanelTamperAlarm">
            <summary>
            读取控制板防拆报警功能开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.ReadControlPanelTamperAlarm.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            读取控制板防拆报警功能开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.ReadControlPanelTamperAlarm.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.ReadControlPanelTamperAlarm.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.ReadControlPanelTamperAlarm_Result">
            <summary>
            读取控制板防拆报警功能开关_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm">
            <summary>
            设置控制板防拆报警功能开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm_Parameter)">
            <summary>
            设置控制板防拆报警功能开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含控制板防拆报警功能开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm_Parameter">
            <summary>
            设置控制板防拆报警功能开关_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm_Parameter.Use">
            <summary>
            控制板防拆报警功能开关（0--关闭功能，1--开启功能）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm_Parameter.#ctor(System.Byte)">
            <summary>
            控制板防拆报警功能开关参数初始化实例
            </summary>
            <param name="_Use">控制板防拆报警功能开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对控制板防拆报警功能开关参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.ControlPanelTamperAlarm.WriteControlPanelTamperAlarm_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对控制板防拆报警功能开关参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.ReadHTTPPageLandingSwitch">
            <summary>
            读取HTTP网页登陆开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.ReadHTTPPageLandingSwitch.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            读取HTTP网页登陆开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.ReadHTTPPageLandingSwitch.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.ReadHTTPPageLandingSwitch.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.ReadHTTPPageLandingSwitch_Result">
            <summary>
            读取HTTP网页登陆开关_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch">
            <summary>
            设置HTTP网页登陆开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch_Parameter)">
            <summary>
            设置HTTP网页登陆开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含HTTP网页登陆开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch_Parameter">
            <summary>
            设置HTTP网页登陆开关_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch_Parameter.Use">
            <summary>
            HTTP网页登陆开关（取值范围：0--关闭功能，1--开启功能 默认值：1）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch_Parameter.#ctor(System.Byte)">
            <summary>
            HTTP网页登陆开关参数初始化实例
            </summary>
            <param name="_Use">HTTP网页登陆开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对HTTP网页登陆开关参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.HTTPPageLandingSwitch.WriteHTTPPageLandingSwitch_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对HTTP网页登陆开关参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.ReadLawfulCardReleaseAlarmSwitch">
            <summary>
            读取开门超时报警时，合法卡解除报警开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.ReadLawfulCardReleaseAlarmSwitch.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            读取开门超时报警时，合法卡解除报警开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.ReadLawfulCardReleaseAlarmSwitch.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.ReadLawfulCardReleaseAlarmSwitch.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.ReadLawfulCardReleaseAlarmSwitch_Result">
            <summary>
            读取开门超时报警时，合法卡解除报警开关_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch">
            <summary>
            设置开门超时报警时，合法卡解除报警开关
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch_Parameter)">
            <summary>
            设置开门超时报警时，合法卡解除报警开关
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含开门超时报警时，合法卡解除报警开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch_Parameter">
            <summary>
            设置开门超时报警时，合法卡解除报警开关_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch_Parameter.Use">
            <summary>
            开门超时报警时，合法卡解除报警开关（取值范围：0--关闭功能，1--开启功能  默认值：1）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch_Parameter.#ctor(System.Byte)">
            <summary>
            开门超时报警时，合法卡解除报警开关参数初始化实例
            </summary>
            <param name="_Use">开门超时报警时，合法卡解除报警开关参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对开门超时报警时，合法卡解除报警开关参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.LawfulCardReleaseAlarmSwitch.WriteLawfulCardReleaseAlarmSwitch_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对开门超时报警时，合法卡解除报警开关参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorLimit">
            <summary>
            门内人数限制_模型
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorLimit.GlobalLimit">
            <summary>
            全局上限
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorLimit.DoorLimitArray">
            <summary>
            1-4号门上限数组
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorLimit.GlobalEnter">
            <summary>
            全局人数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorLimit.DoorEnterArray">
            <summary>
            1-4号门人数数组
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorLimit.#ctor">
            <summary>
            实例化门上限数组和门人数数组的长度
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorPortDetail">
            <summary>
            互锁参数信息
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorPortDetail.DoorMax">
            <summary>
            最大门数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorPortDetail.DoorPort">
            <summary>
            门的端口
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorPortDetail.#ctor">
            <summary>
            初始化一个4端口集合
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorPortDetail.#ctor(System.Int32)">
            <summary>
            设置几个门的端口
            </summary>
            <param name="_DoorMax">最大门数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorPortDetail.SetValue(System.Int32,System.Byte)">
            <summary>
            设置值
            </summary>
            <param name="iPort">1-4</param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.SystemParameter.DoorPortDetail.GetValue(System.Int32)">
            <summary>
            获取值
            </summary>
            <param name="iPort">1-4</param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base">
            <summary>
            模板抽象元素基类
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base.GetDeleteBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            写入 要删除的元素信息
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base.GetDeleteDataLen">
            <summary>
            获取每个要删除元素的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base.SetFailBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            
            </summary>
            <param name="buf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base">
            <summary>
            模板抽象命令参数基类
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base.DataList">
            <summary>
            要写入的元素集合
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base})">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base.#ctor">
            <summary>
            提供给继承类使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base.CheckedParameterItem(DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base)">
            <summary>
            检查每个密码
            </summary>
            <param name="password">密码信息</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            不实现此功能
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base.GetDataLen">
            <summary>
            不实现此功能
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            不实现此功能
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateReadData_Base`1">
            <summary>
            读取所有元素命令
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateReadData_Base`1.mReadBuffers">
            <summary>
            读取到的密码缓冲
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateReadData_Base`1.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateReadData_Base`1.CheckResponseNext(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测下一包指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateReadData_Base`1.CheckResponseCompleted(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测结束指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateReadData_Base`1.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateReadData_Base`1.CreateResult(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base})">
            <summary>
            创建返回值
            </summary>
            <param name="passwordList"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateReadData_Base`1.ClearBuf">
            <summary>
            清空缓冲区
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateResult_Base">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateResult_Base.DataList">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateResult_Base.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base})">
            <summary>
            创建结构
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateResult_Base.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1">
            <summary>
            写入元素命令
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.mParDataLen">
            <summary>
            1个写入参数长度
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.mDeleteDataLen">
            <summary>
            1个删除参数长度
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.mPar">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.mBatchCount">
            <summary>
            每次上传数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.mIndex">
            <summary>
            已上传数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.MaxBufSize">
            <summary>
            默认的缓冲区大小
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.maxCount">
            <summary>
            需要写入密码数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.mBufs">
            <summary>
            保存写入失败的数据缓冲区
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateParameter_Base)">
            <summary>
            
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.CreateCommandPacket0">
            <summary>
            继承类具体实现
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.WriteDataToBuf(DotNetty.Buffers.IByteBuffer)">
            <summary>
            
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.WriteDataBodyToBuf(DotNetty.Buffers.IByteBuffer,DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="databuf"></param>
            <param name="data">要写入到缓冲区的元素</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.CommandReSend">
            <summary>
            命令超时
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.CheckResponseCompleted(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测结束指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            重写父类对处理返回值的定义
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.Create_Result">
            <summary>
            创建命令成功返回值
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.CreateResult(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base})">
            <summary>
            创建返回值
            </summary>
            <param name="passwordList">控制器返回的密码集合</param>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1._Data">
            <summary>
            用来解析返回的错误元素数据
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.ReadDataByFailBuf(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateData_Base},DotNetty.Buffers.IByteBuffer)">
            <summary>
            从错误密码列表中读取一个错误密码，加入到passwordList中
            </summary>
            <param name="DataList">错误密码列表</param>
            <param name="buf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TemplateMethod.TemplateWriteData_Base`1.IsWriteOver">
            <summary>
            检查是否已写完所有卡
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ClearTimeGroup">
            <summary>
            清空所有开门时段
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ClearTimeGroup.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ClearTimeGroup.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回通知
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ClearTimeGroup.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup">
            <summary>
            读取所有开门时段
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup.mReadBuffers">
            <summary>
            读取到的开门时段缓冲
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup.SetBytes(DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup_Result,System.Collections.Generic.List{DotNetty.Buffers.IByteBuffer})">
            <summary>
             将 字节流  转换为 开门时段
            </summary>
            <param name="result">读取所有开门时段结果</param>
            <param name="databufs"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup.ClearBuf">
            <summary>
            清空缓冲区
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup_Result">
            <summary>
            读取所有开门时段结果
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup_Result.Count">
            <summary>
            返回的总数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup_Result.ListWeekTimeGroup">
            <summary>
            开门时段集合
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup_Result.#ctor">
            <summary>
            初始化参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.ReadTimeGroup_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup">
            <summary>
            添加开门时段
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup.mPar">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup.writeIndex">
            <summary>
            写入索引
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup.maxCount">
            <summary>
            总开门时段数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd">命令详情</param>
            <param name="par">命令逻辑所需要的命令参数 </param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将 参数 编码到字节流
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            没有触发
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter">
            <summary>
            添加开门时段 参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter.writeIndex">
            <summary>
            写入索引
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter.ListWeekTimeGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Data.TimeGroup.WeekTimeGroup})">
            <summary>
            初始化参数
            </summary>
            <param name="list">开门时段集合</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter.Dispose">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter.SetWriteIndex(System.Int32)">
            <summary>
            设置写入索引
            </summary>
            <param name="index">写入索引号</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将 参数 编码到字节流
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter.GetDataLen">
            <summary>
            获取长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.TimeGroup.AddTimeGroup_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            没有实现
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Time.ReadTime">
            <summary>
            从控制器中读取控制器时间
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.ReadTime.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            获取设备运行信息 初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.ReadTime.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.ReadTime.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Time.ReadTime_Result">
            <summary>
            从控制器中读取控制器时间_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.ReadTimeError">
            <summary>
            读取误差自修正参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.ReadTimeError.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            读取误差自修正参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.ReadTimeError.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.ReadTimeError.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.ReadTimeError_Result">
            <summary>
            读取读取误差自修正参数_结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError">
            <summary>
            设置误差自修正参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError_Parameter)">
            <summary>
            设置误差自修正参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含误差自修正参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError_Parameter">
            <summary>
            设置误差自修正_参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError_Parameter.TimeErrorCorrection">
            <summary>
            误差自修正（第一字节表示调快还是调慢，0表示调慢，1表示调快；第二字节表示具体秒数。）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError_Parameter.#ctor(System.Byte[])">
            <summary>
            误差自修正参数初始化实例
            </summary>
            <param name="_TimeErrorCorrection">误差自修正参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对误差自修正参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.TimeErrorCorrection.WriteTimeError_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对误差自修正参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime">
            <summary>
            将自定义时间写入到控制器中
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime_Parameter)">
            <summary>
            将自定义时间写入到控制器中
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含自定义时间</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime_Parameter">
            <summary>
            设置控制器的日期时间
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime_Parameter.ControllerDate">
            <summary>
            控制器的日期时间
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime_Parameter.#ctor">
            <summary>
            提供给 ReadTime_Result 使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime_Parameter.#ctor(System.DateTime)">
            <summary>
            控制器的日期时间参数初始化实例
            </summary>
            <param name="_ControllerDate">控制器的日期时间参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对控制器的日期时间参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteCustomTime_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对控制器的日期时间参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Time.WriteTime">
            <summary>
            将电脑的最新时间写入到控制器中
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteTime.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            将电脑的最新时间写入到控制器中
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteTime.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteTime.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Time.WriteTimeBroadcast">
            <summary>
            校时广播
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteTimeBroadcast.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            校时广播
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteTimeBroadcast.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Time.WriteTimeBroadcast.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseDetail">
            <summary>
            读取控制器中的卡片数据库信息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseDetail.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化参数
            </summary>
            <param name="detail"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseDetail.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseDetail.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseDetail_Result">
            <summary>
            读取控制器中的卡片数据库信息
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseDetail_Result.DatabaseDetail">
            <summary>
            记录数据库的详情
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseDetail_Result.#ctor">
            <summary>
            初始化参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseDetail_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseDetail_Result.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            进行解码
            </summary>
            <param name="buf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase">
            <summary>
            清空指定类型的记录数据库
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase.GetCmdDate">
            <summary>
            获取参数结构的字节编码
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase_Parameter">
            <summary>
            清空指定类型的记录数据库
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase_Parameter.DatabaseType">
            <summary>
            记录数据库类型
            1  读卡记录 
            2  出门开关记录
            3  门磁记录  
            4  软件操作记录
            5  报警记录 
            6  系统记录  
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType)">
            <summary>
            清空指定类型的记录数据库
            </summary>
            <param name="type">取值范围 1-6</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase_Parameter.#ctor">
            <summary>
            清空所有记录
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ClearTransactionDatabase_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.TransactionDatabaseEmpty">
            <summary>
            清空所有类型的记录数据库
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.TransactionDatabaseEmpty.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.TransactionDatabaseEmpty.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查 参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.TransactionDatabaseEmpty.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex">
            <summary>
            读记录数据库
            按指定索引号开始读指定类型的记录数据库，并读取指定数量。
            成功返回结果参考 ReadTransactionDatabaseByIndex_Result 
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex.NewTransactionTable">
            <summary>
            新记录实体创建工厂
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex.#cctor">
            <summary>
            初始化实体创建工厂
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex.GetNewTransaction">
            <summary>
            获取一个事务实体
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base">
            <summary>
            读记录数据库
            按指定索引号开始读指定类型的记录数据库，并读取指定数量。
            成功返回结果参考 ReadTransactionDatabaseByIndex_Result 
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.CmdType">
            <summary>
            指令分类
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.CheckResponseCmdType">
            <summary>
            返回指令分类
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.mBufs">
            <summary>
            ByteBuffer 队列
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.mTransactionType">
            <summary>
            事务类型
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.CreatePacket0">
            <summary>
            创建一个指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.GetCmdData">
            <summary>
            获取参数结构的字节编码
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.ClearBuf">
            <summary>
            清空缓冲区
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.CommandReSend">
            <summary>
            命令重发时需要的函数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.Release1">
            <summary>
            命令释放时需要的函数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.GetNewTransaction">
            <summary>
            获取一个事务实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Base.Analysis">
            <summary>
            分析缓冲中的数据包
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter">
            <summary>
            读取控制器中的卡片数据库信息返回值
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter.TransactionType">
            <summary>
             记录数据库类型
             1 读卡记录
             2 出门开关记录
             3 门磁记录
             4 软件操作记录
             5 报警记录
             6 系统记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter.ReadIndex">
            <summary>
            读索引号
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter.Quantity">
            <summary>
            读取数量
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter.#ctor(System.Int32,System.Int32,System.Int32)">
             <summary>
            创建结构
             </summary>
             <param name="_DatabaseType">记录数据库类型 取值1-6</param>
             <param name="_ReadIndex">读索引号</param>
             <param name="_Quantity">读取数量</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Result">
            <summary>
            读取控制器中的卡片数据库信息返回值
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Result.TransactionType">
            <summary>
             记录数据库类型
             1 读卡记录
             2 出门开关记录
             3 门磁记录
             4 软件操作记录
             5 报警记录
             6 系统记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Result.ReadIndex">
            <summary>
            读索引号
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Result.Quantity">
            <summary>
            读取数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Result.TransactionList">
            <summary>
            记录列表
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Result.#ctor">
            <summary>
            初始化参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Result.#ctor(DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType,System.Int32,System.Int32,System.Collections.Generic.List{DoNetDrive.Protocol.Transaction.AbstractTransaction})">
             <summary>
            创建结构
             </summary>
             <param name="_DatabaseType">记录数据库类型 取值1-6</param>
             <param name="_ReadIndex">读索引号</param>
             <param name="_Quantity">读取数量</param>
             <param name="_TransactionList">记录列表</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase">
            <summary>
             读取新记录
             读指定类型的记录数据库最新记录，并读取指定数量。
             成功返回结果参考 link ReadTransactionDatabase_Result 
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase.NewTransactionTable">
            <summary>
            新记录实体创建工厂
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase.#cctor">
            <summary>
            初始化实体创建工厂
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase.GetNewTransaction">
            <summary>
            获取一个事务实体
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base">
            <summary>
             读取新记录
             读指定类型的记录数据库最新记录，并读取指定数量。
             成功返回结果参考 link ReadTransactionDatabase_Result 
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.CmdType">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.CheckResponseCmdType">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.mParameter">
            <summary>
            查询参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.mTransactionSerialNumberList">
            <summary>
            记录序号是否已读取的集合，
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.mStep">
            <summary>
            指示当前命令进行的步骤
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.mBufs">
            <summary>
            读取到的记录数据缓冲
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.mReadQuantity">
            <summary>
            本次读取的数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.mReadable">
            <summary>
            可读取的新记录数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.mReadTotal">
            <summary>
            读取计数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base._TransactionDetail">
            <summary>
            选择的记录模块
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.mTransactionType">
            <summary>
            事务类型
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.CreatePacket0">
            <summary>
            创建一个指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            
            处理接收返回值，避免父类直接完成命令，重写逻辑
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.GetTransactionDetail(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            获取指定类型的数据库详情信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.ReadDataBaseDetailCallBack(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            读取记录数据库空间信息的返回值 mStep=1
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.CheckReadIndex">
            <summary>
            检查上传断点是否异常
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.ReadTransactionNext">
            <summary>
            读取下一包记录
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.GetReadIndexRange(System.Int32@,System.Int32@)">
            <summary>
            检查上传断点是否异常
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.ReadTransactionDatabaseByIndexCallBack(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            读记录数据库的返回值 mStep=2
            读取下一包记录
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.SaveTransactionToBuf(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将返回的事务暂时保存在缓冲中
            </summary>
            <param name="bTransactionBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.ReadIndexComplete">
            <summary>
            检查修改记录读索引号的返回值  mStep=2
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.Analysis">
            <summary>
            分析缓冲中的数据包
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.ReReadDatabaseCallBack(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            重复读取遗漏的记录 mStep=3
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.CheckResultList">
            <summary>
            检查是否有遗漏
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.WriteTransactionReadIndex">
            <summary>
            记录读取完毕，需要更新读索引（更新记录尾号）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.Release1">
            <summary>
            命令释放时需要的函数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.AddDictSerialNumberRange(System.Int32,System.Int32)">
            <summary>
            提交序号到未读集合
            </summary>
            <param name="startIndex"></param>
            <param name="len"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.GetNewTransaction">
            <summary>
            获取一个事务实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Base.ReadTransactionOver">
            <summary>
            读取记录完毕
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter">
            <summary>
            读取新记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter.DatabaseType">
            <summary>
             记录数据库类型
             1 读卡记录
             2 出门开关记录
             3 门磁记录
             4 软件操作记录
             5 报警记录
             6 系统记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter.Quantity">
            <summary>
            读取数量 0-160000,0表示都取所有新记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter.PacketSize">
            <summary>
             每次读取数量 1-150
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter.AutoWriteReadIndex">
            <summary>
            自动更新读索引（上传断点）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType,System.Int32)">
            <summary>
            初始化参数
            </summary>
            <param name="type">取值范围 1-6</param>
            <param name="_Quantity">读取数量</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Result">
            <summary>
            
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Result.DatabaseType">
            <summary>
            记录数据库类型
            读卡记录
            出门开关记录
            门磁记录
            软件操作记录
            报警记录
            系统记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Result.Quantity">
            <summary>
            读取数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Result.readable">
            <summary>
            剩余新记录数量
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Result.TransactionList">
            <summary>
            记录列表
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Result.TransactionReadIndex">
            <summary>
            读取记录后，记录的读取索引（上传断点）
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Result.#ctor">
            <summary>
            初始化参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Result.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            
            </summary>
            <param name="buf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex">
            <summary>
            更新记录指针
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter">
            <summary>
            更新记录指针
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter.DatabaseType">
            <summary>
             记录数据库类型
             1  读卡记录
             2  出门开关记录
             3  门磁记录
             4  软件操作记录
             5  报警记录
             6  系统记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter.ReadIndex">
            <summary>
            数据库中的读索引号
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter.IsCircle">
            <summary>
            循环标记
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType,System.Int32,System.Boolean)">
            <summary>
            创建结构
            </summary>
            <param name="_DatabaseType">记录数据库类型</param>
            <param name="_ReadIndex">数据库中的读索引号</param>
            <param name="_IsCircle">循环标记</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseReadIndex_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex">
            <summary>
            修改指定记录数据库的写索引
            记录尾地址
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex_Parameter">
            <summary>
            修改指定记录数据库的写索引
            记录尾地址
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex_Parameter.TransactionType">
            <summary>
             记录数据库类型
             1  读卡记录
             2  出门开关记录
             3  门磁记录
             4  软件操作记录
             5  报警记录
             6  系统记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex_Parameter.WriteIndex">
            <summary>
            数据库中的写索引号
            记录尾地址
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex_Parameter.#ctor(DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType,System.Int32)">
            <summary>
            创建结构
            </summary>
            <param name="_DatabaseType">记录数据库类型</param>
            <param name="_WriteIndex">记录尾地址</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Transaction.WriteTransactionDatabaseWriteIndex_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType">
            <summary>
            记录数据库类型
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType.OnCardTransaction">
            <summary>
            读卡相关记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType.OnButtonTransaction">
            <summary>
            出门开关相关记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType.OnDoorSensorTransaction">
            <summary>
            门磁相关记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType.OnSoftwareTransaction">
            <summary>
            远程操作相关记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType.OnAlarmTransaction">
            <summary>
            报警相关记录
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door8800.Transaction.e_TransactionDatabaseType.OnSystemTransaction">
            <summary>
            系统相关记录
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility">
            <summary>
            String 工具类
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.FillString(System.String,System.Int32,System.String)">
            <summary>
            填充字符串
            </summary>
            <param name="str">需要被填充的字符串</param>
            <param name="iLen">字符串长度</param>
            <param name="fillstr">填充的字符串</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.FillString(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            填充字符串
            </summary>
            <param name="str">需要被填充的字符串</param>
            <param name="iLen">字符串长度</param>
            <param name="fillstr">填充的字符串</param>
            <param name="fill_right">是否右边填充</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.BCDTimeToDate_yyMMddhh(System.Byte[])">
            <summary>
            BCD格式日期时间转DateTime
            </summary>
            <param name="btTime">字节数组</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.BCDToByte(System.Byte[])">
            <summary>
            BCD格式转字节数组
            </summary>
            <param name="iNum"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.BCDToByte(System.Byte)">
            <summary>
            BCD格式转字节
            </summary>
            <param name="iNum"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.uByte(System.Byte)">
            <summary>
            字节转数值
            </summary>
            <param name="byte0"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.DateToBCD_yyMMddhh(System.Byte[],System.DateTime)">
            <summary>
            DateTime转BCD格式日期时间
            </summary>
            <param name="btData">字节数组</param>
            <param name="date">DateTime</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.ByteToBCD(System.Byte[])">
            <summary>
            字节数组转BCD格式
            </summary>
            <param name="iNum">字节数组</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.ByteToBCD(System.Byte)">
            <summary>
            字节转BCD格式
            </summary>
            <param name="iNum">字节</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.ReadIPByByteBuf(DotNetty.Buffers.IByteBuffer,System.Text.StringBuilder)">
            <summary>
            字节转换成IP格式字符串
            </summary>
            <param name="data">包含参数结构的缓冲区</param>
            <param name="strbuilder">字符串</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.ByteToBit(System.Byte)">
            <summary>
            1字节转8Bit
            </summary>
            <param name="iNum"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.SaveIPToByteBuf(System.String,DotNetty.Buffers.IByteBuffer)">
            <summary>
            IP地址及与之相同格式的结构转换成数组字节
            </summary>
            <param name="IP"></param>
            <param name="buf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.CheckIP(System.String)">
            <summary>
            检查IP地址及与之相同格式数据
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.GetRandomNum(System.Int32,System.Int32)">
            <summary>
            获取一个随机数
            </summary>
            <param name="iMin">最小值</param>
            <param name="iMax">最大值</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door8800.Utility.StringUtility.TimeHourAndMinuteStr(System.DateTime,System.DateTime)">
            <summary>
            时间时和分组合
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDataBase">
            <summary>
            Door89H 读所有卡
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDataBase.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Card.ReadCardDataBase_Parameter)">
            <summary>
            初始化命令结构 
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDataBase.CreateResult(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Data.CardDetail},System.Int32,System.Int32)">
            <summary>
            创建返回值
            </summary>
            <param name="cardList"></param>
            <param name="dataBaseSize"></param>
            <param name="cardType"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDataBase_Result">
            <summary>
            Door89H 读取卡片数据库中的所有卡数据
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDataBase_Result.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Data.CardDetail},System.Int32,System.Int32)">
            <summary>
            创建结构
            </summary>
            <param name="cardList">卡列表</param>
            <param name="dataBaseSize">读取到的卡数量</param>
            <param name="cardType">卡数据库类型</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail">
            <summary>
            Door88/Door58 读取单个卡片在控制器中的信息
             成功返回结果参考 {@link ReadCardDetail_Result}
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Parameter)">
            <summary>
            Door88/Door58 读取单个卡片在控制器中的信息
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            创建参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail.GetCmdData">
            <summary>
            获取参数结构的字节编码
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Parameter">
            <summary>
            Door89H 读取单个卡片在控制器中的信息
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Parameter.BigCard">
            <summary>
            9字节卡号
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Parameter.CardData">
            <summary>
            要读取详情的授权卡8字节卡号
            取值：1-0xFFFFFFFF
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Parameter.#ctor(System.Decimal)">
            <summary>
            创建结构
            </summary>
            <param name="bCard">需要读取卡片详情的卡号</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为 字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Result">
            <summary>
            Door89H 读取单个卡片在控制器中的信息，命令成功后的返回值
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Result.IsReady">
            <summary>
            卡片是否存在
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Result.Card">
            <summary>
            卡片的详情
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Result.#ctor(System.Boolean,DoNetDrive.Protocol.Door.Door89H.Data.CardDetail)">
            <summary>
            创建结构
            </summary>
            <param name="isReady">卡片是否存在</param>
            <param name="card">CardDetail 保存卡详情的实体</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.ReadCardDetail_Result.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySequence">
            <summary>
            Door89H 将卡片列表写入到控制器非排序区 
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySequence.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySequence_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="perameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySequence.ReadCardByFailBuf(System.Collections.Generic.List{System.Decimal},DotNetty.Buffers.IByteBuffer)">
            <summary>
            从错误卡列表中读取一个错误卡号，加入到cardlist中
            </summary>
            <param name="CardList">错误卡列表</param>
            <param name="buf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySequence_Parameter">
             <summary>
            Door89H 将卡片列表写入到控制器非排序区
             </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySequence_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Data.CardDetail})">
            <summary>
            创建 将卡片列表写入到控制器非排序区 指令的参数
            </summary>
            <param name="cardList">需要写入的卡列表</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.DeleteCard">
            <summary>
             Door89H 将卡片列表从到控制器中删除
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.DeleteCard.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door89H.Card.DeleteCard_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.DeleteCard.WriteCardBodyToBuf0(DoNetDrive.Protocol.Door.Door89H.Data.CardDetail,DotNetty.Buffers.IByteBuffer)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="card">卡详情</param>
            <param name="buf">缓冲区</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.DeleteCard_Parameter">
            <summary>
            Door89H 删除卡片
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.DeleteCard_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Data.CardDetail})">
            <summary>
            创建 将卡片列表从到控制器中删除 指令的参数
            </summary>
            <param name="cardList">需要删除的卡片列表</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySort">
            <summary>
            Door89H 将卡片列表写入到控制器排序区 
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySort.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySort_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="perameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySort.ReadCardByFailBuf(System.Collections.Generic.List{System.Decimal},DotNetty.Buffers.IByteBuffer)">
            <summary>
            从错误卡列表中读取一个错误卡号，加入到cardlist中
            </summary>
            <param name="CardList"></param>
            <param name="buf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySort_Parameter">
            <summary>
            Door89H 将卡片列表写入到控制器排序区
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Card.WriteCardListBySort_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Data.CardDetail})">
            <summary>
            创建 将卡片列表写入到控制器排序区 指令的参数
            </summary>
            <param name="cardList">需要上传的卡片列表</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Data.CardDetail">
            <summary>
            Door89H 适用于此型号的卡详情
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Data.CardDetail.BigCard">
            <summary>
            9字节大卡号
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door89H.Data.CardDetail.CardData">
            <summary>
            4字节卡号
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Data.CardDetail.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Data.CardDetail.#ctor(DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase)">
            <summary>
            初始化参数
            </summary>
            <param name="sur">授权卡信息 抽象类</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Data.CardDetail.GetDataLen">
            <summary>
            获取一个卡详情实例，序列化到buf中的字节占比
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Data.CardDetail.WriteCardData(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将卡号序列化并写入buf中
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Data.CardDetail.ReadCardData(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从buf中读取卡号
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Data.CardDetail.CompareTo(DoNetDrive.Protocol.Door.Door8800.Data.CardDetailBase)">
            <summary>
            比较
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Data.CardTransaction">
            <summary>
            刷卡记录<br/>
            TransactionCode 事件代码含义表：<br/>
            1   合法开门                                                    
            2   密码开门------------卡号为密码                              
            3   卡加密码                                                    
            4   手动输入卡加密码                                            
            5   首卡开门                                                    
            6   门常开 --- 常开工作方式中，刷卡进入常开状态                 
            7   多卡开门 -- 多卡验证组合完毕后触发                          
            8   重复读卡                                                    
            9   有效期过期                                                  
            10  开门时段过期                                               
            11  节假日无效                                                 
            12  未注册卡                                                   
            13  巡更卡 -- 不开门                                           
            14  探测锁定                                                   
            15  无有效次数                                                 
            16  防潜回                                                     
            17  密码错误------------卡号为错误密码                         
            18  密码加卡模式密码错误----卡号为卡号。                       
            19  锁定时(读卡)或(读卡加密码)开门                             
            20  锁定时(密码开门)                                           
            21  首卡未开门                                                 
            22  挂失卡                                                     
            23  黑名单卡                                                   
            24  门内上限已满，禁止入门。                                   
            25  开启防盗布防状态(设置卡)                                   
            26  撤销防盗布防状态(设置卡)                                   
            27  开启防盗布防状态(密码)                                     
            28  撤销防盗布防状态(密码)                                     
            29  互锁时(读卡)或(读卡加密码)开门                             
            30  互锁时(密码开门)                                           
            31  全卡开门                                                   
            32  多卡开门--等待下张卡                                       
            33  多卡开门--组合错误                                         
            34  非首卡时段刷卡无效                                         
            35  非首卡时段密码无效                                         
            36  禁止刷卡开门 -- 【开门认证方式】验证模式中禁用了刷卡开门时 
            37  禁止密码开门 -- 【开门认证方式】验证模式中禁用了密码开门时 
            38  门内已刷卡，等待门外刷卡。（门内外刷卡验证）               
            39  门外已刷卡，等待门内刷卡。（门内外刷卡验证）               
            40  请刷管理卡(在开启管理卡功能后提示)(电梯板)                 
            41  请刷普通卡(在开启管理卡功能后提示)(电梯板)                 
            42  首卡未读卡时禁止密码开门。                                 
            43  控制器已过期_刷卡                                          
            44  控制器已过期_密码                                          
            45  合法卡开门—有效期即将过期                                 
            46  拒绝开门--区域反潜回失去主机连接。                         
            47  拒绝开门--区域互锁，失去主机连接                           
            48  区域防潜回--拒绝开门    
            49  区域互锁--有门未关好，拒绝开门
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Data.CardTransaction.BigCard">
            <summary>
            9字节卡号
            </summary>
        </member>
        <member name="P:DoNetDrive.Protocol.Door.Door89H.Data.CardTransaction.CardData">
            <summary>
            4字节卡号
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Data.CardTransaction.GetDataLen">
            <summary>
            获取读卡记录格式长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Data.CardTransaction.ReadCardData(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从buf中读取卡号数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Door.ReaderOption.ReaderOption_Parameter">
            <summary>
            89H 控制器4个门的读卡器字节数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReaderOption.ReaderOption_Parameter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReaderOption.ReaderOption_Parameter.#ctor(System.Byte[])">
            <summary>
            控制器4个门的读卡器字节数初始化实例
            </summary>
            <param name="_Door"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReaderOption.ReaderOption_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.ReadInvalidCardAlarmOption">
            <summary>
            读取非法读卡报警参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.ReadInvalidCardAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            读取非法读卡报警参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含门号</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.ReadInvalidCardAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.ReadInvalidCardAlarmOption.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令返回值的判断
            </summary>
            <param name="oPck">包含返回指令的Packet</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption">
            <summary>
            设置非法读卡报警参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.Step">
            <summary>
            当前命令步骤
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.mPar">
            <summary>
            参数对象
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption_Parameter)">
            <summary>
            设置非法读卡报警参数
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par">包含非法读卡报警参数</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.IniPacketProcess">
            <summary>
            初始化指令的步骤数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            接收到响应，开始处理下一步命令
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.InvalidCardAlarmOption.WriteInvalidCardAlarmOption.WriteReadInvalidCardTime">
            <summary>
            写入 读未注册卡到达一定次数后报警
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.ReadMultiCard">
            <summary>
            读多卡参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.ReadMultiCard.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            读单个门的多卡参数
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.ReadMultiCard.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            命令回应处理
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.ReadMultiCard.ReadGroupAB_Step1(DotNetty.Buffers.IByteBuffer)">
            <summary>
            读取AB组的数据
            </summary>
            <param name="tmpBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.ReadMultiCard.ReadGroupAB_Step2(DotNetty.Buffers.IByteBuffer)">
            <summary>
            接受AB组中组合的卡列表
            </summary>
            <param name="tmpBuf"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.ReadMultiCard.CreateReadGroupFixPacket">
            <summary>
            创建读取多卡固定组的命令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.ReadMultiCard.ReadGroupFix(DotNetty.Buffers.IByteBuffer)">
            <summary>
            解析读取到的固定组内容
            </summary>
            <param name="tmpBuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard">
            <summary>
            写多卡组合参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard.mCardListIndex">
            <summary>
            下一包需要写入的卡号起始号
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard.mGroupDetailIsSend">
            <summary>
            指示组详情是否已发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard.WriteMultiCard_GroupABCallBlack">
            <summary>
            写多卡AB组合成功的回调函数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard.FindGroupAB(System.Int32@)">
            <summary>
            查询当前操作的AB组
            </summary>
            <param name="iGroupCardCount">返回 组中的卡数量</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard.WriteMultiCard_GroupAB">
            <summary>
            二十七 多卡开门A组设置
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard.WriteMultiCard_GroupFix">
            <summary>
            写入固定多卡组
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard_Parameter">
            <summary>
            适用于Door89H协议的多卡组合参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard_Parameter.#ctor(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Collections.Generic.List{System.Collections.Generic.List{System.Decimal}},System.Collections.Generic.List{System.Collections.Generic.List{System.Decimal}},System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door8800.Door.MultiCard.MultiCard_GroupFix})">
            <summary>
            初始化多卡参数，支持多卡验证参数和AB组，等待模式和固定组多卡
            </summary>
            <param name="door">门号</param>
            <param name="readerWaitMode">刷卡时组合卡错误等待模式</param>
            <param name="antiPassback">防潜回功能检测模式</param>
            <param name="verifytype">开门验证方式0--禁用多卡验证。1--A组和B组组合验证（A组任意数量，B组任意数量）。          2--固定组合验证（原Door8800验证方式）          3--数量验证（此方式不需要特定组，只要是合法卡刷卡一次数量即可）
            当验证模式为3时，【A组刷卡数量】字段规定的就是合法卡刷卡数量</param>
            <param name="agroupcount">A组刷卡数量/自由组合刷卡数量    取值范围：0-20，当多卡验证方式为自由组合时，此值指示自由组合刷卡数量</param>
            <param name="bgroupcount">B组刷卡数量 取值范围：0-100</param>
            <param name="group_a">多卡A组组合</param>
            <param name="group_b">多卡B组组合</param>
            <param name="group_fix">多卡固定组合</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.MultiCard.WriteMultiCard_Parameter.GetMaxCardValue">
            <summary>
            获取卡号最大值
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.ReadCardAndTakePictures_Result">
            <summary>
            读卡拍照联动消息 返回结果
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.ReadReadCardAndTakePictures">
            <summary>
            设置读卡拍照联动
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.ReadReadCardAndTakePictures.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Door.DoorPort_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="value"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.ReadReadCardAndTakePictures.CreatePacket0">
            <summary>
            创建一个通讯指令
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.ReadReadCardAndTakePictures.CommandNext1(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            处理返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures">
            <summary>
            写入 读卡拍照联动消息
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter)">
            <summary>
            初始化参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter">
            <summary>
            写入 读卡拍照联动消息
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.DoorNum">
            <summary>
            门号
            门端口在控制板中的索引号，取值：1-4
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.InDoorUse">
            <summary>
            进门读卡联动开关 (1)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.OutDoorUse">
            <summary>
            出门读卡联动开关 (1)
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.InDoorIP">
            <summary>
            进门联动IP
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.InDoorPort">
            <summary>
            进门联动端口
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.InDoorProtocol">
            <summary>
            进门联动IP
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.OutDoorIP">
            <summary>
            出门联动IP
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.OutDoorPort">
            <summary>
            出门联动端口
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.OutDoorProtocol">
            <summary>
            出门联动IP
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.#ctor">
            <summary>
            提供给继承类使用
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.#ctor(System.Byte,System.Boolean,System.Byte[],System.UInt16,System.String,System.Boolean,System.Byte[],System.UInt16,System.String)">
            <summary>
            初始化参数
            </summary>
            <param name="doorNum"></param>
            <param name="inDoorUse"></param>
            <param name="inDoorIP"></param>
            <param name="inDoorPort"></param>
            <param name="inDoorProtocol"></param>
            <param name="outDoorUse"></param>
            <param name="outDoorIP"></param>
            <param name="outDoorPort"></param>
            <param name="outDoorProtocol"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将结构编码为字节缓冲
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.GetDataLen">
            <summary>
            指定此类结构编码为字节缓冲后的长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Door.ReadCardAndTakePictures.WriteReadCardAndTakePictures_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将字节缓冲解码为类结构
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Password.ReadAllPassword">
            <summary>
            从控制器读取所有密码
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.ReadAllPassword.#ctor(DoNetDrive.Core.Command.INCommandDetail)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.ReadAllPassword.CreateResult(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail})">
            <summary>
            创建返回值
            </summary>
            <param name="passwordList"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Password.ReadAllPassword_Result">
            <summary>
            读取所有密码 结果
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.ReadAllPassword_Result.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail})">
            <summary>
            初始化参数
            </summary>
            <param name="passwordList"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Password.AddPassword">
            <summary>
            Door89H 将密码列表写入到控制器
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.AddPassword.CreateCommandPacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.AddPassword.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door89H.Password.AddPassword_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="par"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.AddPassword.WritePasswordBodyToBuf(DotNetty.Buffers.IByteBuffer,DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="databuf"></param>
            <param name="password">要写入到缓冲区密码</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.AddPassword.CreateResult(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail})">
            <summary>
            创建返回值
            </summary>
            <param name="passwordList">无法写入的密码列表</param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.AddPassword.CheckResponseCompleted(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测结束指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Password.AddPassword_Parameter">
            <summary>
            写入密码到控制器参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.AddPassword_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail})">
            <summary>
            初始化参数
            </summary>
            <param name="list">要添加的密码集合</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.AddPassword_Parameter.checkedParameterItem(DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail)">
            <summary>
            检查每个密码
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Password.DeletePassword">
            <summary>
            Door89H 将密码列表从控制器删除
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.DeletePassword.CreateCommandPacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.DeletePassword.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door89H.Password.DeletePassword_Parameter)">
            <summary>
            初始化参数
            </summary>
            <param name="cd"></param>
            <param name="par"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.DeletePassword.WritePasswordBodyToBuf(DotNetty.Buffers.IByteBuffer,DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail)">
            <summary>
            将数据部分写入到缓冲区
            </summary>
            <param name="databuf"></param>
            <param name="password">要写入到缓冲区密码</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.DeletePassword.CreateResult(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail})">
            <summary>
            没有实现
            </summary>
            <param name="passwordList"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.DeletePassword.CheckResponseCompleted(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检测结束指令返回值
            </summary>
            <param name="oPck"></param>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Password.DeletePassword_Parameter">
            <summary>
            写入密码 参数
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.DeletePassword_Parameter.#ctor(System.Collections.Generic.List{DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail})">
            <summary>
            初始化参数
            </summary>
            <param name="list">要添加的密码集合</param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail">
            <summary>
            Door89H 表示一个密码表
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail.WritePassword(DotNetty.Buffers.IByteBuffer)">
            <summary>
            将密码序列化并写入buf中
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail.ReadPassword(DotNetty.Buffers.IByteBuffer)">
            <summary>
            从buf中读取密码
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail.GetDeleteBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            写入 要删除的密码信息
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail.GetDataLen">
            <summary>
            获取每个添加密码长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Password.PasswordDetail.GetDeleteDataLen">
            <summary>
            获取每个删除密码长度
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware">
            <summary>
            固件升级
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware.mResult">
            <summary>
            上传固件的返回结果
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware._WriteIndex">
            <summary>
            写索引
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware._Step">
            <summary>
            操作步骤
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter)">
            <summary>
            初始化命令
            </summary>
            <param name="cd">包含命令所需的远程主机详情 （IP、端口、SN、密码、重发次数等）</param>
            <param name="par"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware.CreatePacket0">
            <summary>
            将命令打包成一个Packet，准备发送
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware.CheckCommandParameter(DoNetDrive.Core.Command.INCommandParameter)">
            <summary>
            检查命令参数
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware.CommandNext0(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检查返回值
            </summary>
            <param name="oPck"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware.CheckOKResult(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检查打开文件返回值
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware.CheckWriteFileResult(DoNetDrive.Protocol.OnlineAccess.OnlineAccessPacket)">
            <summary>
            检查写文件返回值
            </summary>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter">
            <summary>
            上传固件的参数
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter.Datas">
            <summary>
            固件文件
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter.SoftwareCRC32">
            <summary>
            固件解密后的CRC32
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter.WaitVerifyTime">
            <summary>
            等待校验的时间，单位毫秒
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter.#ctor(System.Byte[],System.UInt32)">
            <summary>
            初始化参数
            </summary>
            <param name="datas">固件文件</param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            编码参数
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            解码参数
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Result">
            <summary>
            上传固件的结果反馈
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:DoNetDrive.Protocol.Door.Door89H.UpdateSoftware_Result.Success" -->
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Transaction.ReadTransactionDatabaseByIndex">
            <summary>
            读记录数据库
            按指定索引号开始读指定类型的记录数据库，并读取指定数量。
            成功返回结果参考 ReadTransactionDatabaseByIndex_Result 
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Transaction.ReadTransactionDatabaseByIndex.NewTransactionTable">
            <summary>
            新记录实体创建工厂
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Transaction.ReadTransactionDatabaseByIndex.#cctor">
            <summary>
            初始化实体创建工厂
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Transaction.ReadTransactionDatabaseByIndex.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabaseByIndex_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Transaction.ReadTransactionDatabaseByIndex.GetNewTransaction">
            <summary>
            获取一个事务实体
            </summary>
            <returns></returns>
        </member>
        <member name="T:DoNetDrive.Protocol.Door.Door89H.Transaction.ReadTransactionDatabase">
            <summary>
             读取新记录
             读指定类型的记录数据库最新记录，并读取指定数量。
             成功返回结果参考 link ReadTransactionDatabase_Result 
            </summary>
        </member>
        <member name="F:DoNetDrive.Protocol.Door.Door89H.Transaction.ReadTransactionDatabase.NewTransactionTable">
            <summary>
            新记录实体创建工厂
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Transaction.ReadTransactionDatabase.#ctor(DoNetDrive.Core.Command.INCommandDetail,DoNetDrive.Protocol.Door.Door8800.Transaction.ReadTransactionDatabase_Parameter)">
            <summary>
            初始化命令结构
            </summary>
            <param name="cd"></param>
            <param name="parameter"></param>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Transaction.ReadTransactionDatabase.#cctor">
            <summary>
            初始化实体创建工厂
            </summary>
        </member>
        <member name="M:DoNetDrive.Protocol.Door.Door89H.Transaction.ReadTransactionDatabase.GetNewTransaction">
            <summary>
            获取一个事务实体
            </summary>
            <returns></returns>
        </member>
        <member name="T:FCARDIO.Protocol.Door.FC8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Parameter">
            <summary>
            门端口
            </summary>
        </member>
        <member name="F:FCARDIO.Protocol.Door.FC8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Parameter.Door">
            <summary>
            门号
            </summary>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Parameter.#ctor">
            <summary>
            构建一个空的实例
            </summary>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Parameter.#ctor(System.Byte)">
            <summary>
            门端口参数初始化实例
            </summary>
            <param name="door">门号</param>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对门端口参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Parameter.GetDataLen">
            <summary>
            获取数据长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderWorkSetting.ReadReaderWorkSetting_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对门端口参数进行解码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.RelayReleaseTime.ReadRelayReleaseTime_Parameter.#ctor(System.Byte[])">
            <summary>
            
            </summary>
            <param name="releaseTime"></param>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.RelayReleaseTime.ReadRelayReleaseTime_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.RelayReleaseTime.ReadRelayReleaseTime_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.RelayReleaseTime.ReadRelayReleaseTime_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对SN参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.RelayReleaseTime.ReadRelayReleaseTime_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对SN参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderInterval.ReadReaderInterval_Parameter.#ctor(System.Byte[])">
            <summary>
            
            </summary>
            <param name="readerInterval"></param>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderInterval.ReadReaderInterval_Parameter.checkedParameter">
            <summary>
            检查参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderInterval.ReadReaderInterval_Parameter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderInterval.ReadReaderInterval_Parameter.GetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对SN参数进行编码
            </summary>
            <param name="databuf"></param>
            <returns></returns>
        </member>
        <member name="M:FCARDIO.Protocol.Door.FC8800.Door.ReaderInterval.ReadReaderInterval_Parameter.SetBytes(DotNetty.Buffers.IByteBuffer)">
            <summary>
            对SN参数进行解码
            </summary>
            <param name="databuf"></param>
        </member>
    </members>
</doc>
